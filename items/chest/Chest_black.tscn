[gd_scene load_steps=15 format=2]

[ext_resource path="res://items/chest/S_ItemHeavyOutline_ChestPurple_00.png" type="Texture" id=1]
[ext_resource path="res://items/chest/Image12.png" type="Texture" id=2]
[ext_resource path="res://items/chest/Panel.gd" type="Script" id=3]
[ext_resource path="res://items/chest/ItemList.gd" type="Script" id=4]
[ext_resource path="res://resourse/Item_ifo_panel.png" type="Texture" id=5]
[ext_resource path="res://icon1.png" type="Texture" id=6]
[ext_resource path="res://resourse/button_Style_tex.tres" type="StyleBox" id=7]
[ext_resource path="res://fonts/main_menu_button.tres" type="DynamicFont" id=8]

[sub_resource type="GDScript" id=1]
script/source = "extends Area2D

# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"
var useable = true
var target
var no_use = false
export var item_ids ={0:0,1:0,2:0,3:0}
export var item_amount = {0:0,1:0,2:0,3:0}
onready var blue = load(\"res://items/chest/S_ItemHeavyOutline_ChestBlue_00.png\")
onready var gold = load(\"res://items/chest/S_ItemHeavyOutline_ChestGold_00.png\")
onready var green = load(\"res://items/chest/S_ItemHeavyOutline_ChestGreen_00.png\")
onready var purple = load(\"res://items/chest/S_ItemHeavyOutline_ChestPurple_00.png\")
onready var red = load(\"res://items/chest/S_ItemHeavyOutline_ChestRed_00.png\")
var texture_array = [\"res://items/chest/S_ItemHeavyOutline_ChestBlue_00.png\"
,\"res://items/chest/S_ItemHeavyOutline_ChestGold_00.png\"
,\"res://items/chest/S_ItemHeavyOutline_ChestGreen_00.png\"
,\"res://items/chest/S_ItemHeavyOutline_ChestPurple_00.png\"
,\"res://items/chest/S_ItemHeavyOutline_ChestRed_00.png\"]
# Called when the node enters the scene tree for the first time.
var inventory_save
func _ready():
	$CanvasLayer/Panel/ItemList.add_item_chest(item_ids,item_amount)
	no_use = true
	inventory_save = $CanvasLayer/Panel/ItemList.inventory
	$Sprite.texture = load(texture_array[randi()%5])
	pass # Replace with function body.

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
#	if $CanvasLayer/Panel/ItemList.inventory != null:
#		if $CanvasLayer/Panel/ItemList.get_item_count() != 0:
#			var four = 4
#			for slot in range (0, 4):
#				if $CanvasLayer/Panel/ItemList.inventory[str(slot)][\"id\"] == 0:
#					$CanvasLayer/Panel/ItemList.remove_item(slot)
#					four -=1
#
#		elif $CanvasLayer/Panel/ItemList.get_item_count() == 0:
#			queue_free()
		
	if target:
		if global_position.distance_to(target.global_position) > 50:
			$CanvasLayer/Panel.hide()
	
	pass




func _on_Chest_black_area_entered(area):
	if area.name == \"use\":
		$CanvasLayer/Panel.show()
		
		if no_use == false:
			$CanvasLayer/Panel/ItemList.add_item_chest(item_ids,item_amount)
			no_use = true
			inventory_save = $CanvasLayer/Panel/ItemList.inventory
		elif no_use == true:
			$CanvasLayer/Panel/ItemList.load_item_chest(inventory_save)
		target = area
		
	pass # Replace with function body.

func save(): # сохранение игры

	var save_dict = {
		\"filename\" : get_filename(),
		\"parent\" : get_parent().get_path(),
		\"pos_x\" : position.x, # Vector2 is not supported by JSON
		\"pos_y\" : position.y,
		\"name\" : name,
		\"item_ids\" : item_ids,
		\"no_use\" : no_use,
		\"inventory_save\" : inventory_save,
		\"item_amount\" : item_amount
		
	
	}

	return save_dict

	pass


#func _on_ItemList_item_selected(index):
#	var id_item = $CanvasLayer/Panel/ItemList.get_item_metadata(index)[\"id\"]
#
#	if get_parent().get_node(\"Player/inventary/inventory/bag1\"):
#		get_parent().get_node(\"Player/inventary/inventory/bag1\").update_slot(Global_Player.inventory_addItem(int(id_item)))
#		$CanvasLayer/Panel/ItemList.remove_item(index)
#	pass # Replace with function body.


func _on_ItemMenu_Button_DropItem_pressed():
	
	
	var player = get_tree().get_nodes_in_group(\"player\")

	if player[0].get_node(\"inventary/inventory/bag1\"):
		player[0].get_node(\"inventary/inventory/bag1\").update_slot(Global_Player.inventory_addItem(int($CanvasLayer/Panel/ItemList.get_item_metadata($CanvasLayer/Panel/ItemList.dropItemSlot)[\"id\"])))
		if player[0].get_node(\"inventary/inventory/bag1\").full__inventory == false:
			var newAmount = inventory_removeItem($CanvasLayer/Panel/ItemList.dropItemSlot)
			if (newAmount < 1):
				$CanvasLayer/Panel/WindowDialog_ItemMenu.hide()
			else:
				$CanvasLayer/Panel/WindowDialog_ItemMenu/ItemMenu_Button_DropItem.set_text(\"(\" + String(newAmount) + \") \" +tr(\"COLLECT_BUTTON\"))
			
			$CanvasLayer/Panel/ItemList.update_slot($CanvasLayer/Panel/ItemList.dropItemSlot)
			$CanvasLayer/Panel/WindowDialog_ItemMenu/Full.hide()
		else:
			print(\"Full Inventory\")
			$CanvasLayer/Panel/WindowDialog_ItemMenu/Full.show()
			return
	pass # Replace with function body.
	
func inventory_removeItem(slot) -> int:
	var newAmount = $CanvasLayer/Panel/ItemList.inventory[String(slot)][\"amount\"] - 1
	if (newAmount < 1):
		inventory_updateItem(slot, 0, 0)

		return 0
	$CanvasLayer/Panel/ItemList.inventory[String(slot)][\"amount\"] = newAmount
	return newAmount

func inventory_updateItem(slot:int, new_id:int, new_amount:int) -> void:
	if (slot < 0):
		return
	if (new_amount < 0):
		return
	if (Global_ItemDatabase.get_item(str(new_id)).empty()):
		return
	$CanvasLayer/Panel/ItemList.inventory[str(slot)] = {\"id\": str(new_id), \"amount\": int(new_amount)}

func _on_WindowDialog_ItemMenu_popup_hide():
	$CanvasLayer/Panel/WindowDialog_ItemMenu/Full.hide()
	pass # Replace with function body.
"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 10, 6.04535 )

[sub_resource type="StyleBoxTexture" id=3]
texture = ExtResource( 2 )
region_rect = Rect2( 0, 0, 220, 220 )

[sub_resource type="StyleBoxEmpty" id=4]

[sub_resource type="GDScript" id=5]
script/source = "extends ItemList
var empty_slot = ResourceLoader.load(\"res://player/inventory/empty_slot.png\")
var max_slots = 4
var arrow_count_random
var inventory 

var activeItemSlot:int = -1
var dropItemSlot:int = -1

onready var isDraggingItem:bool = false
onready var mouseButtonReleased:bool = true
var draggedItemSlot:int = -1
onready var initial_mousePos:Vector2 = Vector2()
onready var cursor_insideItemList:bool = false

var isAwaitingSplit:bool = false
var splitItemSlot:int = -1
# Called when the node enters the scene tree for the first time.
func _ready():
	set_max_columns(4)
	set_fixed_icon_size(Vector2(32,32))
	set_icon_mode(ICON_MODE_TOP)
	set_select_mode(SELECT_SINGLE)
	set_same_column_width(true)
	set_allow_rmb_select(true)
	set_process(false)
	set_process_input(true)
	var dict:Dictionary = {\"inventory\":{}}
	for slot in range (0, 4):
		dict[\"inventory\"][str(slot)] = {\"amount\": 0,\"id\": 0}
	#Global_DataParser.write_data(url_PlayerData, dict)
		inventory = dict[\"inventory\"]
		
	load_items()


func load_items():
	clear()
	for slot in range(0, 4):
		add_item(\"\", null, false)
		update_slot(slot)
#func _on_ItemList_item_selected(index):
func update_slot(slot:int) -> void:
	if (slot < 0):
		return
	#print(Global_Player.inventory)
	var inventoryItem:Dictionary = inventory[str(slot)]
	var itemMetaData = Global_ItemDatabase.get_item(str(inventoryItem[\"id\"])).duplicate()
	var icon = ResourceLoader.load(itemMetaData[\"icon\"])
	var amount = int(inventoryItem[\"amount\"])

	itemMetaData[\"amount\"] = amount
	if (!itemMetaData[\"stackable\"]):
		amount = \" \"
	set_item_text(slot, String(amount))
	set_item_icon(slot, icon)
	set_item_selectable(slot, int(inventoryItem[\"id\"]) > 0)
	set_item_metadata(slot, itemMetaData)
	set_item_tooltip(slot, itemMetaData[\"name\"])
	set_item_tooltip_enabled(slot, int(inventoryItem[\"id\"]) > 0)
#func _on_ItemList_item_selected(index):
#	pass # Replace with function body."

[sub_resource type="StyleBoxTexture" id=122]
texture = ExtResource( 5 )
region_rect = Rect2( 0, 0, 330, 360 )

[node name="Chest" type="Area2D" groups=[
"save",
]]
script = SubResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 2 )

[node name="Sprite" type="Sprite" parent="."]
texture = ExtResource( 1 )

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="Panel" type="Panel" parent="CanvasLayer"]
visible = false
margin_left = 499.87
margin_top = 7.0
margin_right = 719.87
margin_bottom = 227.0
custom_styles/panel = SubResource( 3 )
script = ExtResource( 3 )

[node name="ItemList2" type="ItemList" parent="CanvasLayer/Panel"]
margin_left = 77.5226
margin_top = 83.1982
margin_right = 163.523
margin_bottom = 170.198
custom_styles/bg = SubResource( 4 )
custom_constants/icon_margin = -29
custom_constants/hseparation = 0
script = SubResource( 5 )

[node name="ItemList" type="ItemList" parent="CanvasLayer/Panel"]
margin_left = 77.0811
margin_top = 83.1982
margin_right = 156.081
margin_bottom = 149.198
custom_styles/bg = SubResource( 4 )
custom_constants/icon_margin = -29
custom_constants/hseparation = 0
script = ExtResource( 4 )

[node name="WindowDialog_ItemMenu" type="WindowDialog" parent="CanvasLayer/Panel"]
margin_left = 427.0
margin_top = 108.0
margin_right = 757.0
margin_bottom = 468.0
custom_styles/panel = SubResource( 122 )

[node name="ItemMenu_TextureFrame_Icon" type="TextureRect" parent="CanvasLayer/Panel/WindowDialog_ItemMenu"]
margin_left = 132.683
margin_top = 32.0455
margin_right = 196.683
margin_bottom = 96.0455
texture = ExtResource( 6 )
stretch_mode = 1

[node name="ItemMenu_RichTextLabel_ItemInfo" type="RichTextLabel" parent="CanvasLayer/Panel/WindowDialog_ItemMenu"]
margin_left = 37.0
margin_top = 139.0
margin_right = 292.0
margin_bottom = 273.0
bbcode_enabled = true

[node name="ItemMenu_Button_DropItem" type="Button" parent="CanvasLayer/Panel/WindowDialog_ItemMenu"]
margin_left = 110.119
margin_top = 305.0
margin_right = 220.119
margin_bottom = 340.0
custom_styles/hover = ExtResource( 7 )
custom_styles/pressed = ExtResource( 7 )
custom_styles/focus = ExtResource( 7 )
custom_styles/disabled = ExtResource( 7 )
custom_styles/normal = ExtResource( 7 )
custom_fonts/font = ExtResource( 8 )
text = "Кнопка"

[node name="Full" type="Label" parent="CanvasLayer/Panel/WindowDialog_ItemMenu"]
visible = false
margin_left = 83.5502
margin_top = 273.0
margin_right = 245.55
margin_bottom = 296.0
text = "INVENTORY_FULL_TEXT"
align = 1
valign = 1
[connection signal="area_entered" from="." to="." method="_on_Chest_black_area_entered"]
[connection signal="item_rmb_selected" from="CanvasLayer/Panel/ItemList2" to="CanvasLayer/Panel" method="_on_ItemList_item_rmb_selected"]
[connection signal="item_rmb_selected" from="CanvasLayer/Panel/ItemList" to="CanvasLayer/Panel" method="_on_ItemList_item_rmb_selected"]
[connection signal="popup_hide" from="CanvasLayer/Panel/WindowDialog_ItemMenu" to="." method="_on_WindowDialog_ItemMenu_popup_hide"]
[connection signal="pressed" from="CanvasLayer/Panel/WindowDialog_ItemMenu/ItemMenu_Button_DropItem" to="." method="_on_ItemMenu_Button_DropItem_pressed"]
