[gd_scene load_steps=306 format=2]

[ext_resource path="res://player/Player.gd" type="Script" id=1]
[ext_resource path="res://resourse/rope.png" type="Texture" id=2]
[ext_resource path="res://player/Individual Sprites hand/adventurer-knock-dwn-00.png" type="Texture" id=3]
[ext_resource path="res://player/Individual Sprites hand/adventurer-knock-dwn-01.png" type="Texture" id=4]
[ext_resource path="res://player/Individual Sprites hand/adventurer-knock-dwn-02.png" type="Texture" id=5]
[ext_resource path="res://player/Individual Sprites hand/adventurer-knock-dwn-03.png" type="Texture" id=6]
[ext_resource path="res://player/Individual Sprites hand/adventurer-knock-dwn-04.png" type="Texture" id=7]
[ext_resource path="res://player/Individual Sprites hand/adventurer-knock-dwn-05.png" type="Texture" id=8]
[ext_resource path="res://player/Individual Sprites hand/adventurer-knock-dwn-06.png" type="Texture" id=9]
[ext_resource path="res://player/Individual Sprites1/adventurer-slide-00.png" type="Texture" id=10]
[ext_resource path="res://player/Individual Sprites1/adventurer-slide-01.png" type="Texture" id=11]
[ext_resource path="res://player/Individual Sprites/adventurer-jump-00.png" type="Texture" id=12]
[ext_resource path="res://player/Individual Sprites/adventurer-jump-01.png" type="Texture" id=13]
[ext_resource path="res://player/Individual Sprites/adventurer-jump-02.png" type="Texture" id=14]
[ext_resource path="res://player/Individual Sprites/adventurer-jump-03.png" type="Texture" id=15]
[ext_resource path="res://player/Individual Sprites/adventurer-fall-00.png" type="Texture" id=16]
[ext_resource path="res://player/Individual Sprites/adventurer-fall-01.png" type="Texture" id=17]
[ext_resource path="res://player/Individual Sprites/adventurer-idle-00.png" type="Texture" id=18]
[ext_resource path="res://player/Individual Sprites/adventurer-idle-01.png" type="Texture" id=19]
[ext_resource path="res://player/Individual Sprites/adventurer-idle-02.png" type="Texture" id=20]
[ext_resource path="res://player/Individual Sprites/adventurer-idle-03.png" type="Texture" id=21]
[ext_resource path="res://player/Individual Sprites/adventurer-attack2-00.png" type="Texture" id=22]
[ext_resource path="res://player/Individual Sprites/adventurer-attack2-01.png" type="Texture" id=23]
[ext_resource path="res://player/Individual Sprites/adventurer-attack2-02.png" type="Texture" id=24]
[ext_resource path="res://player/Individual Sprites/adventurer-attack2-03.png" type="Texture" id=25]
[ext_resource path="res://player/Individual Sprites/adventurer-attack2-04.png" type="Texture" id=26]
[ext_resource path="res://player/Individual Sprites/adventurer-attack2-05.png" type="Texture" id=27]
[ext_resource path="res://player/Individual Sprites/adventurer--grb-00.png" type="Texture" id=28]
[ext_resource path="res://player/Individual Sprites/adventurer--grb-01.png" type="Texture" id=29]
[ext_resource path="res://player/Individual Sprites/adventurer--grb-02.png" type="Texture" id=30]
[ext_resource path="res://player/Individual Sprites/adventurer--grb-03.png" type="Texture" id=31]
[ext_resource path="res://player/Individual Sprites1/adventurer-swrd-drw-03.png" type="Texture" id=32]
[ext_resource path="res://player/Individual Sprites1/adventurer-swrd-shte-00.png" type="Texture" id=33]
[ext_resource path="res://player/Individual Sprites1/adventurer-swrd-shte-01.png" type="Texture" id=34]
[ext_resource path="res://player/Individual Sprites1/adventurer-swrd-shte-02.png" type="Texture" id=35]
[ext_resource path="res://player/Individual Sprites1/adventurer-swrd-shte-03.png" type="Texture" id=36]
[ext_resource path="res://player/Individual Sprites hand/adventurer-wall-run-00.png" type="Texture" id=37]
[ext_resource path="res://player/Individual Sprites hand/adventurer-wall-run-01.png" type="Texture" id=38]
[ext_resource path="res://player/Individual Sprites hand/adventurer-wall-run-02.png" type="Texture" id=39]
[ext_resource path="res://player/Individual Sprites hand/adventurer-wall-run-03.png" type="Texture" id=40]
[ext_resource path="res://player/Individual Sprites hand/adventurer-wall-run-04.png" type="Texture" id=41]
[ext_resource path="res://player/Individual Sprites hand/adventurer-wall-run-05.png" type="Texture" id=42]
[ext_resource path="res://player/Individual Sprites bow/adventurer-bow-jump-00.png" type="Texture" id=43]
[ext_resource path="res://player/Individual Sprites bow/adventurer-bow-jump-01.png" type="Texture" id=44]
[ext_resource path="res://player/Individual Sprites bow/adventurer-bow-jump-02.png" type="Texture" id=45]
[ext_resource path="res://player/Individual Sprites bow/adventurer-bow-jump-03.png" type="Texture" id=46]
[ext_resource path="res://player/Individual Sprites bow/adventurer-bow-jump-04.png" type="Texture" id=47]
[ext_resource path="res://player/Individual Sprites bow/adventurer-bow-jump-05.png" type="Texture" id=48]
[ext_resource path="res://player/Individual Sprites/adventurer-attack3-00.png" type="Texture" id=49]
[ext_resource path="res://player/Individual Sprites/adventurer-attack3-01.png" type="Texture" id=50]
[ext_resource path="res://player/Individual Sprites/adventurer-attack3-02.png" type="Texture" id=51]
[ext_resource path="res://player/Individual Sprites/adventurer-attack3-03.png" type="Texture" id=52]
[ext_resource path="res://player/Individual Sprites/adventurer-attack3-04.png" type="Texture" id=53]
[ext_resource path="res://player/Individual Sprites/adventurer-attack3-05.png" type="Texture" id=54]
[ext_resource path="res://player/Individual Sprites bow/adventurer-bow-00.png" type="Texture" id=55]
[ext_resource path="res://player/Individual Sprites bow/adventurer-bow-01.png" type="Texture" id=56]
[ext_resource path="res://player/Individual Sprites bow/adventurer-bow-02.png" type="Texture" id=57]
[ext_resource path="res://player/Individual Sprites bow/adventurer-bow-03.png" type="Texture" id=58]
[ext_resource path="res://player/Individual Sprites bow/adventurer-bow-04.png" type="Texture" id=59]
[ext_resource path="res://player/Individual Sprites bow/adventurer-bow-05.png" type="Texture" id=60]
[ext_resource path="res://player/Individual Sprites bow/adventurer-bow-06.png" type="Texture" id=61]
[ext_resource path="res://player/Individual Sprites bow/adventurer-bow-07.png" type="Texture" id=62]
[ext_resource path="res://player/Individual Sprites bow/adventurer-bow-08.png" type="Texture" id=63]
[ext_resource path="res://player/Individual Sprites/adventurer-run-00.png" type="Texture" id=64]
[ext_resource path="res://player/Individual Sprites/adventurer-run-01.png" type="Texture" id=65]
[ext_resource path="res://player/Individual Sprites/adventurer-run-02.png" type="Texture" id=66]
[ext_resource path="res://player/Individual Sprites/adventurer-run-03.png" type="Texture" id=67]
[ext_resource path="res://player/Individual Sprites/adventurer-run-04.png" type="Texture" id=68]
[ext_resource path="res://player/Individual Sprites/adventurer-run-05.png" type="Texture" id=69]
[ext_resource path="res://player/Individual Sprites1/adventurer-idle-00.png" type="Texture" id=70]
[ext_resource path="res://player/Individual Sprites1/adventurer-idle-01.png" type="Texture" id=71]
[ext_resource path="res://player/Individual Sprites1/adventurer-idle-02.png" type="Texture" id=72]
[ext_resource path="res://player/Individual Sprites1/adventurer-idle-03.png" type="Texture" id=73]
[ext_resource path="res://player/Individual Sprites hand/adventurer-punch-04.png" type="Texture" id=74]
[ext_resource path="res://player/Individual Sprites hand/adventurer-punch-05.png" type="Texture" id=75]
[ext_resource path="res://player/Individual Sprites hand/adventurer-punch-06.png" type="Texture" id=76]
[ext_resource path="res://player/Individual Sprites hand/adventurer-punch-07.png" type="Texture" id=77]
[ext_resource path="res://player/Individual Sprites1/adventurer-fall-00.png" type="Texture" id=78]
[ext_resource path="res://player/Individual Sprites1/adventurer-fall-01.png" type="Texture" id=79]
[ext_resource path="res://player/Individual Sprites/adventurer-stand-00.png" type="Texture" id=80]
[ext_resource path="res://player/Individual Sprites/adventurer-stand-01.png" type="Texture" id=81]
[ext_resource path="res://player/Individual Sprites/adventurer-stand-02.png" type="Texture" id=82]
[ext_resource path="res://player/Individual Sprites/adventurer-attack1-00.png" type="Texture" id=83]
[ext_resource path="res://player/Individual Sprites/adventurer-attack1-01.png" type="Texture" id=84]
[ext_resource path="res://player/Individual Sprites/adventurer-attack1-02.png" type="Texture" id=85]
[ext_resource path="res://player/Individual Sprites/adventurer-attack1-03.png" type="Texture" id=86]
[ext_resource path="res://player/Individual Sprites/adventurer-attack1-04.png" type="Texture" id=87]
[ext_resource path="res://player/Individual Sprites/adventurer-crnr-grb-00.png" type="Texture" id=88]
[ext_resource path="res://player/Individual Sprites/adventurer-crnr-grb-01.png" type="Texture" id=89]
[ext_resource path="res://player/Individual Sprites/adventurer-crnr-grb-02.png" type="Texture" id=90]
[ext_resource path="res://player/Individual Sprites/adventurer-crnr-grb-03.png" type="Texture" id=91]
[ext_resource path="res://player/Individual Sprites hand/adventurer-run2-00.png" type="Texture" id=92]
[ext_resource path="res://player/Individual Sprites hand/adventurer-run2-01.png" type="Texture" id=93]
[ext_resource path="res://player/Individual Sprites hand/adventurer-run2-02.png" type="Texture" id=94]
[ext_resource path="res://player/Individual Sprites hand/adventurer-run2-03.png" type="Texture" id=95]
[ext_resource path="res://player/Individual Sprites hand/adventurer-run2-04.png" type="Texture" id=96]
[ext_resource path="res://player/Individual Sprites hand/adventurer-run2-05.png" type="Texture" id=97]
[ext_resource path="res://player/Individual Sprites1/adventurer-run3-00.png" type="Texture" id=98]
[ext_resource path="res://player/Individual Sprites1/adventurer-run3-01.png" type="Texture" id=99]
[ext_resource path="res://player/Individual Sprites1/adventurer-run3-02.png" type="Texture" id=100]
[ext_resource path="res://player/Individual Sprites1/adventurer-run3-03.png" type="Texture" id=101]
[ext_resource path="res://player/Individual Sprites1/adventurer-run3-04.png" type="Texture" id=102]
[ext_resource path="res://player/Individual Sprites1/adventurer-run3-05.png" type="Texture" id=103]
[ext_resource path="res://player/Individual Sprites/adventurer-crouch-00.png" type="Texture" id=104]
[ext_resource path="res://player/Individual Sprites/adventurer-crouch-01.png" type="Texture" id=105]
[ext_resource path="res://player/Individual Sprites/adventurer-crouch-02.png" type="Texture" id=106]
[ext_resource path="res://player/Individual Sprites/adventurer-crouch-03.png" type="Texture" id=107]
[ext_resource path="res://player/Individual Sprites/adventurer-idle-2-00.png" type="Texture" id=108]
[ext_resource path="res://player/Individual Sprites/adventurer-idle-2-01.png" type="Texture" id=109]
[ext_resource path="res://player/Individual Sprites/adventurer-idle-2-02.png" type="Texture" id=110]
[ext_resource path="res://player/Individual Sprites/adventurer-idle-2-03.png" type="Texture" id=111]
[ext_resource path="res://player/Individual Sprites hand/adventurer-run-punch-01.png" type="Texture" id=112]
[ext_resource path="res://player/Individual Sprites hand/adventurer-run-punch-02.png" type="Texture" id=113]
[ext_resource path="res://player/Individual Sprites hand/adventurer-run-punch-03.png" type="Texture" id=114]
[ext_resource path="res://player/Individual Sprites hand/adventurer-run-punch-04.png" type="Texture" id=115]
[ext_resource path="res://player/Individual Sprites hand/adventurer-run-punch-05.png" type="Texture" id=116]
[ext_resource path="res://player/Individual Sprites hand/adventurer-run-punch-06.png" type="Texture" id=117]
[ext_resource path="res://player/Individual Sprites hand/adventurer-drop-kick-00.png" type="Texture" id=118]
[ext_resource path="res://player/Individual Sprites hand/adventurer-drop-kick-01.png" type="Texture" id=119]
[ext_resource path="res://player/Individual Sprites hand/adventurer-drop-kick-02.png" type="Texture" id=120]
[ext_resource path="res://player/Individual Sprites hand/adventurer-drop-kick-03.png" type="Texture" id=121]
[ext_resource path="res://player/Individual Sprites hand/adventurer-punch-08.png" type="Texture" id=122]
[ext_resource path="res://player/Individual Sprites hand/adventurer-punch-09.png" type="Texture" id=123]
[ext_resource path="res://player/Individual Sprites hand/adventurer-punch-10.png" type="Texture" id=124]
[ext_resource path="res://player/Individual Sprites hand/adventurer-punch-11.png" type="Texture" id=125]
[ext_resource path="res://player/Individual Sprites hand/adventurer-crouch-walk-00.png" type="Texture" id=126]
[ext_resource path="res://player/Individual Sprites hand/adventurer-crouch-walk-01.png" type="Texture" id=127]
[ext_resource path="res://player/Individual Sprites hand/adventurer-crouch-walk-02.png" type="Texture" id=128]
[ext_resource path="res://player/Individual Sprites hand/adventurer-crouch-walk-03.png" type="Texture" id=129]
[ext_resource path="res://player/Individual Sprites hand/adventurer-crouch-walk-04.png" type="Texture" id=130]
[ext_resource path="res://player/Individual Sprites hand/adventurer-crouch-walk-05.png" type="Texture" id=131]
[ext_resource path="res://player/Individual Sprites1/adventurer-run-00.png" type="Texture" id=132]
[ext_resource path="res://player/Individual Sprites1/adventurer-run-01.png" type="Texture" id=133]
[ext_resource path="res://player/Individual Sprites1/adventurer-run-02.png" type="Texture" id=134]
[ext_resource path="res://player/Individual Sprites1/adventurer-run-03.png" type="Texture" id=135]
[ext_resource path="res://player/Individual Sprites1/adventurer-run-04.png" type="Texture" id=136]
[ext_resource path="res://player/Individual Sprites1/adventurer-run-05.png" type="Texture" id=137]
[ext_resource path="res://player/Individual Sprites1/adventurer-jump-00.png" type="Texture" id=138]
[ext_resource path="res://player/Individual Sprites1/adventurer-jump-01.png" type="Texture" id=139]
[ext_resource path="res://player/Individual Sprites1/adventurer-jump-02.png" type="Texture" id=140]
[ext_resource path="res://player/Individual Sprites1/adventurer-jump-03.png" type="Texture" id=141]
[ext_resource path="res://player/Individual Sprites/adventurer-die-00.png" type="Texture" id=142]
[ext_resource path="res://player/Individual Sprites/adventurer-die-01.png" type="Texture" id=143]
[ext_resource path="res://player/Individual Sprites/adventurer-die-02.png" type="Texture" id=144]
[ext_resource path="res://player/Individual Sprites/adventurer-die-03.png" type="Texture" id=145]
[ext_resource path="res://player/Individual Sprites/adventurer-die-04.png" type="Texture" id=146]
[ext_resource path="res://player/Individual Sprites/adventurer-die-05.png" type="Texture" id=147]
[ext_resource path="res://player/Individual Sprites/adventurer-die-06.png" type="Texture" id=148]
[ext_resource path="res://player/Individual Sprites hand/adventurer-kick-00.png" type="Texture" id=149]
[ext_resource path="res://player/Individual Sprites hand/adventurer-kick-01.png" type="Texture" id=150]
[ext_resource path="res://player/Individual Sprites hand/adventurer-kick-02.png" type="Texture" id=151]
[ext_resource path="res://player/Individual Sprites hand/adventurer-kick-03.png" type="Texture" id=152]
[ext_resource path="res://player/Individual Sprites hand/adventurer-punch-00.png" type="Texture" id=153]
[ext_resource path="res://player/Individual Sprites hand/adventurer-punch-01.png" type="Texture" id=154]
[ext_resource path="res://player/Individual Sprites hand/adventurer-punch-02.png" type="Texture" id=155]
[ext_resource path="res://player/Individual Sprites hand/adventurer-punch-03.png" type="Texture" id=156]
[ext_resource path="res://player/Individual Sprites hand/adventurer-kick-04.png" type="Texture" id=157]
[ext_resource path="res://player/Individual Sprites hand/adventurer-kick-05.png" type="Texture" id=158]
[ext_resource path="res://player/Individual Sprites hand/adventurer-kick-06.png" type="Texture" id=159]
[ext_resource path="res://player/Individual Sprites hand/adventurer-kick-07.png" type="Texture" id=160]
[ext_resource path="res://player/Individual Sprites hand/adventurer-walk-00.png" type="Texture" id=161]
[ext_resource path="res://player/Individual Sprites hand/adventurer-walk-01.png" type="Texture" id=162]
[ext_resource path="res://player/Individual Sprites hand/adventurer-walk-02.png" type="Texture" id=163]
[ext_resource path="res://player/Individual Sprites hand/adventurer-walk-03.png" type="Texture" id=164]
[ext_resource path="res://player/Individual Sprites hand/adventurer-walk-04.png" type="Texture" id=165]
[ext_resource path="res://player/Individual Sprites hand/adventurer-walk-05.png" type="Texture" id=166]
[ext_resource path="res://player/Individual Sprites hand/adventurer-get-up-00.png" type="Texture" id=167]
[ext_resource path="res://player/Individual Sprites hand/adventurer-get-up-01.png" type="Texture" id=168]
[ext_resource path="res://player/Individual Sprites hand/adventurer-get-up-02.png" type="Texture" id=169]
[ext_resource path="res://player/Individual Sprites hand/adventurer-get-up-03.png" type="Texture" id=170]
[ext_resource path="res://player/Individual Sprites hand/adventurer-get-up-04.png" type="Texture" id=171]
[ext_resource path="res://player/Individual Sprites hand/adventurer-get-up-05.png" type="Texture" id=172]
[ext_resource path="res://player/Individual Sprites hand/adventurer-get-up-06.png" type="Texture" id=173]
[ext_resource path="res://player/light.png" type="Texture" id=174]
[ext_resource path="res://player/UI sprite/Player_info/equip_panel.png" type="Texture" id=175]
[ext_resource path="res://resourse/DIALOG_tHEME.tres" type="Theme" id=176]
[ext_resource path="res://resourse/Item_ifo_panel.png" type="Texture" id=177]
[ext_resource path="res://icon1.png" type="Texture" id=178]
[ext_resource path="res://resourse/button_Style_tex.tres" type="StyleBox" id=179]
[ext_resource path="res://fonts/main_menu_button.tres" type="DynamicFont" id=180]
[ext_resource path="res://player/UI sprite/Player_info/Player_info_panel.png" type="Texture" id=181]
[ext_resource path="res://player/UI sprite/Player_info/button_up.png" type="Texture" id=182]
[ext_resource path="res://fonts/Russian Road Sign.otf" type="DynamicFontData" id=183]
[ext_resource path="res://resourse/close_button.png" type="Texture" id=184]
[ext_resource path="res://player/inventory/empty_slot.png" type="Texture" id=185]
[ext_resource path="res://player/inventory/empty_slot2.png" type="Texture" id=186]
[ext_resource path="res://player/UI sprite/UI_button/Panel_Buuton.png" type="Texture" id=187]
[ext_resource path="res://player/UI sprite/UI_button/invent_button.png" type="Texture" id=188]
[ext_resource path="res://player/UI sprite/UI_button/Player_info_button.png" type="Texture" id=189]
[ext_resource path="res://player/UI sprite/UI_button/settings_button.png" type="Texture" id=190]
[ext_resource path="res://player/inventary.gd" type="Script" id=191]
[ext_resource path="res://player/inventory/Inventory_panel.png" type="Texture" id=192]
[ext_resource path="res://player/bag2.gd" type="Script" id=193]
[ext_resource path="res://player/bag1.gd" type="Script" id=194]
[ext_resource path="res://resourse/dialog_box.png" type="Texture" id=195]
[ext_resource path="res://fonts/say_label.tres" type="DynamicFont" id=196]
[ext_resource path="res://player/portret.png" type="Texture" id=197]
[ext_resource path="res://resourse/portret_box.png" type="Texture" id=198]
[ext_resource path="res://resourse/close_button.tres" type="StyleBox" id=199]
[ext_resource path="res://fonts/Font1.tres" type="DynamicFont" id=200]
[ext_resource path="res://player/UI sprite/exp bar/Level_bar.png" type="Texture" id=201]
[ext_resource path="res://player/UI sprite/exp bar/exp_bar_bg.png" type="Texture" id=202]
[ext_resource path="res://player/UI sprite/exp bar/exp_bar_fg.png" type="Texture" id=203]
[ext_resource path="res://player/UI sprite/healthbar/hp_bar3_bg.png" type="Texture" id=204]
[ext_resource path="res://player/UI sprite/healthbar/hp_bar3_pr.png" type="Texture" id=205]
[ext_resource path="res://player/UI sprite/E-Key.png" type="Texture" id=206]
[ext_resource path="res://sounds/radakan - cave ambience.ogg" type="AudioStream" id=207]

[sub_resource type="SpriteFrames" id=1]
animations = [ {
"frames": [ ExtResource( 3 ), ExtResource( 4 ), ExtResource( 5 ), ExtResource( 6 ), ExtResource( 7 ), ExtResource( 8 ), ExtResource( 9 ), ExtResource( 9 ), ExtResource( 9 ), ExtResource( 9 ) ],
"loop": true,
"name": "departure",
"speed": 5.0
}, {
"frames": [ ExtResource( 10 ), ExtResource( 11 ) ],
"loop": true,
"name": "New Anim",
"speed": 5.0
}, {
"frames": [ ExtResource( 12 ), ExtResource( 13 ), ExtResource( 14 ), ExtResource( 15 ), ExtResource( 16 ), ExtResource( 17 ), ExtResource( 17 ), ExtResource( 17 ), ExtResource( 17 ) ],
"loop": true,
"name": "прыжок",
"speed": 5.0
}, {
"frames": [ ExtResource( 3 ), ExtResource( 4 ), ExtResource( 5 ), ExtResource( 6 ), ExtResource( 7 ), ExtResource( 8 ), ExtResource( 9 ), ExtResource( 9 ), ExtResource( 9 ), ExtResource( 9 ) ],
"loop": true,
"name": "смерть",
"speed": 5.0
}, {
"frames": [ ExtResource( 18 ), ExtResource( 19 ), ExtResource( 20 ), ExtResource( 21 ) ],
"loop": true,
"name": "стойка",
"speed": 5.0
}, {
"frames": [ ExtResource( 22 ), ExtResource( 23 ), ExtResource( 24 ), ExtResource( 25 ), ExtResource( 26 ), ExtResource( 27 ) ],
"loop": true,
"name": "удар_мечом_1",
"speed": 10.0
}, {
"frames": [ ExtResource( 28 ), ExtResource( 29 ), ExtResource( 30 ), ExtResource( 31 ) ],
"loop": true,
"name": "веревка_подъем",
"speed": 5.0
}, {
"frames": [ ExtResource( 32 ), ExtResource( 33 ), ExtResource( 34 ), ExtResource( 35 ), ExtResource( 36 ) ],
"loop": true,
"name": "меч_взял",
"speed": 5.0
}, {
"frames": [ ExtResource( 37 ), ExtResource( 38 ), ExtResource( 39 ), ExtResource( 40 ), ExtResource( 41 ), ExtResource( 42 ) ],
"loop": true,
"name": "бег_постенам",
"speed": 5.0
}, {
"frames": [ ExtResource( 43 ), ExtResource( 44 ), ExtResource( 45 ), ExtResource( 46 ), ExtResource( 47 ), ExtResource( 48 ) ],
"loop": true,
"name": "удар_лук_прыжок",
"speed": 5.0
}, {
"frames": [ ExtResource( 49 ), ExtResource( 50 ), ExtResource( 51 ), ExtResource( 52 ), ExtResource( 53 ), ExtResource( 54 ) ],
"loop": true,
"name": "удар_мечом_2",
"speed": 10.0
}, {
"frames": [ ExtResource( 55 ), ExtResource( 56 ), ExtResource( 57 ), ExtResource( 58 ), ExtResource( 59 ), ExtResource( 60 ), ExtResource( 61 ), ExtResource( 62 ), ExtResource( 63 ) ],
"loop": true,
"name": "удар_лук",
"speed": 7.0
}, {
"frames": [ ExtResource( 64 ), ExtResource( 65 ), ExtResource( 66 ), ExtResource( 67 ), ExtResource( 68 ), ExtResource( 69 ) ],
"loop": true,
"name": "бег",
"speed": 7.0
}, {
"frames": [ ExtResource( 70 ), ExtResource( 71 ), ExtResource( 72 ), ExtResource( 73 ) ],
"loop": true,
"name": "стойка_меч_1",
"speed": 5.0
}, {
"frames": [ ExtResource( 74 ), ExtResource( 75 ), ExtResource( 76 ), ExtResource( 77 ) ],
"loop": true,
"name": "удар_рукой_2",
"speed": 7.0
}, {
"frames": [ ExtResource( 78 ), ExtResource( 79 ) ],
"loop": true,
"name": "падение_меч",
"speed": 5.0
}, {
"frames": [ ExtResource( 80 ), ExtResource( 81 ), ExtResource( 82 ) ],
"loop": true,
"name": "подкат",
"speed": 7.0
}, {
"frames": [ ExtResource( 83 ), ExtResource( 84 ), ExtResource( 85 ), ExtResource( 86 ), ExtResource( 87 ) ],
"loop": true,
"name": "удар_мечом_3",
"speed": 10.0
}, {
"frames": [ ExtResource( 88 ), ExtResource( 89 ), ExtResource( 90 ), ExtResource( 91 ) ],
"loop": true,
"name": "зацеп",
"speed": 5.0
}, {
"frames": [ ExtResource( 92 ), ExtResource( 93 ), ExtResource( 94 ), ExtResource( 95 ), ExtResource( 96 ), ExtResource( 97 ) ],
"loop": true,
"name": "ускоренный_бег",
"speed": 10.0
}, {
"frames": [ ExtResource( 98 ), ExtResource( 99 ), ExtResource( 100 ), ExtResource( 101 ), ExtResource( 102 ), ExtResource( 103 ) ],
"loop": true,
"name": "бег_меч_2",
"speed": 10.0
}, {
"frames": [ ExtResource( 104 ), ExtResource( 105 ), ExtResource( 106 ), ExtResource( 107 ) ],
"loop": true,
"name": "присяд",
"speed": 5.0
}, {
"frames": [ ExtResource( 108 ), ExtResource( 109 ), ExtResource( 110 ), ExtResource( 111 ) ],
"loop": true,
"name": "стойка_меч",
"speed": 5.0
}, {
"frames": [ ExtResource( 112 ), ExtResource( 113 ), ExtResource( 114 ), ExtResource( 115 ), ExtResource( 116 ), ExtResource( 117 ) ],
"loop": true,
"name": "удар_рукой_бег",
"speed": 5.0
}, {
"frames": [ ExtResource( 118 ), ExtResource( 119 ), ExtResource( 120 ), ExtResource( 121 ) ],
"loop": true,
"name": "удар_ногой_сверху",
"speed": 5.0
}, {
"frames": [ ExtResource( 122 ), ExtResource( 123 ), ExtResource( 124 ), ExtResource( 125 ) ],
"loop": true,
"name": "удар_рукой_3",
"speed": 7.0
}, {
"frames": [ ExtResource( 126 ), ExtResource( 127 ), ExtResource( 128 ), ExtResource( 129 ), ExtResource( 130 ), ExtResource( 131 ) ],
"loop": true,
"name": "шаг_присяд",
"speed": 5.0
}, {
"frames": [ ExtResource( 132 ), ExtResource( 133 ), ExtResource( 134 ), ExtResource( 135 ), ExtResource( 136 ), ExtResource( 137 ) ],
"loop": true,
"name": "бег_меч",
"speed": 10.0
}, {
"frames": [ ExtResource( 138 ), ExtResource( 139 ), ExtResource( 140 ), ExtResource( 141 ), ExtResource( 78 ), ExtResource( 79 ) ],
"loop": true,
"name": "прыжок_меч",
"speed": 5.0
}, {
"frames": [ ExtResource( 142 ), ExtResource( 143 ), ExtResource( 144 ), ExtResource( 145 ), ExtResource( 146 ), ExtResource( 147 ), ExtResource( 148 ) ],
"loop": true,
"name": "смерть_меч",
"speed": 5.0
}, {
"frames": [ ExtResource( 149 ), ExtResource( 150 ), ExtResource( 151 ), ExtResource( 152 ) ],
"loop": true,
"name": "удар_ногой_1",
"speed": 7.0
}, {
"frames": [ ExtResource( 153 ), ExtResource( 154 ), ExtResource( 155 ), ExtResource( 156 ) ],
"loop": true,
"name": "удар_рукой_1",
"speed": 7.0
}, {
"frames": [ ExtResource( 157 ), ExtResource( 158 ), ExtResource( 159 ), ExtResource( 160 ) ],
"loop": true,
"name": "удар_ногой_2",
"speed": 7.0
}, {
"frames": [ ExtResource( 161 ), ExtResource( 162 ), ExtResource( 163 ), ExtResource( 164 ), ExtResource( 165 ), ExtResource( 166 ) ],
"loop": true,
"name": "шаг",
"speed": 5.0
}, {
"frames": [ ExtResource( 16 ), ExtResource( 17 ) ],
"loop": true,
"name": "падение",
"speed": 5.0
}, {
"frames": [ ExtResource( 167 ), ExtResource( 168 ), ExtResource( 169 ), ExtResource( 170 ), ExtResource( 171 ), ExtResource( 172 ), ExtResource( 173 ) ],
"loop": true,
"name": "подъем",
"speed": 5.0
} ]

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 8.17682, 14 )

[sub_resource type="GDScript" id=3]
script/source = "extends CanvasLayer

# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"

# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	$Statistics/HP_value.text = str(int(get_parent().health_now)) + \" / \" + str(get_parent().full_hp)
	
	$Statistics/strength_value.text = str((get_parent().strength+get_parent().str_chest+get_parent().str_feet+get_parent().str_foot+get_parent().str_gloves
	+get_parent().str_ring+get_parent().str_neck+get_parent().str_weapon)) 
	
	$Statistics/agility_value.text = str((get_parent().agility+get_parent().agi_chest+get_parent().agi_foot+get_parent().agi_feet+get_parent().agi_gloves
	+get_parent().agi_neck+get_parent().agi_ring+get_parent().agi_weapon)) 
	
	$Statistics/damage_value.text = str(get_parent().min_damage) + \" - \" + str(get_parent().max_damage)
	
	$Statistics/speed_value.text = str(int(((get_parent().agility+get_parent().agi_chest+get_parent().agi_foot+get_parent().agi_feet+get_parent().agi_gloves
	+get_parent().agi_neck+get_parent().agi_ring+get_parent().agi_weapon)*0.01/3+1)*100))
	
	$Statistics/exp_value.text = str(int(get_parent().experience)) + \" / \" + str(get_parent().experience_next_level)
	
	$Statistics/level_value.text = str(get_parent().level)
	
	$Statistics/skill_point_value.text = str(get_parent().skill_point)
	
	
	if get_parent().skill_point > 0:
		$Statistics/up_agi.show()
		$Statistics/up_hp.show()
		$Statistics/up_str.show()
	elif get_parent().skill_point == 0:
		$Statistics/up_agi.hide()
		$Statistics/up_hp.hide()
		$Statistics/up_str.hide()
		
		
func _on_Button_pressed():
	$Statistics.hide()
	$equip_panel.hide()
	get_parent().button = false
	pass # Replace with function body.


func _on_up_hp_pressed():
	get_parent().health +=35
	get_parent().health_now +=35
	get_parent().skill_point -=1
	
	pass # Replace with function body.


func _on_up_str_pressed():
	get_parent().strength +=2
	get_parent().health +=5
	get_parent().health_now +=5
	get_parent().skill_point -=1
	pass # Replace with function body.


func _on_up_agi_pressed():
	get_parent().agility +=2
	get_parent().skill_point -=1
	pass # Replace with function body.


func _on_Panel_mouse_entered():
	get_parent().button = true
	pass # Replace with function body.


func _on_Panel_mouse_exited():
	get_parent().button = false
	pass # Replace with function body.


func _on_up_str_mouse_entered():
	get_parent().button = true
	pass # Replace with function body.


func _on_up_str_mouse_exited():
	get_parent().button = false
	pass # Replace with function body.


func _on_up_hp_mouse_entered():
	get_parent().button = true
	pass # Replace with function body.


func _on_up_hp_mouse_exited():
	get_parent().button = false
	pass # Replace with function body.


func _on_up_agi_mouse_entered():
	get_parent().button = true
	pass # Replace with function body.


func _on_up_agi_mouse_exited():
	get_parent().button = false
	pass # Replace with function body.


func _on_Button_mouse_entered():
	get_parent().button = true
	pass # Replace with function body.


func _on_Button_mouse_exited():
	get_parent().button = true
	pass # Replace with function body.
"

[sub_resource type="StyleBoxTexture" id=4]
texture = ExtResource( 175 )
region_rect = Rect2( 0, 0, 80, 400 )

[sub_resource type="StyleBoxEmpty" id=5]

[sub_resource type="GDScript" id=6]
script/source = "extends Panel

# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"

# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.

func _on_weapon_item_rmb_selected(index, at_position):


	if ($weapon.isDraggingItem):
		return
	if ($weapon.isAwaitingSplit):
		return

	$weapon.dropItemSlot = index
	var itemData:Dictionary = $weapon.get_item_metadata(index)
	if (int(itemData[\"id\"])) < 1 : return
	var strItemInfo:String = \"\"

	#$WindowDialog_ItemMenu.set_position(get_viewport().get_mouse_position())
	$WindowDialog_ItemMenu.set_title(tr(str(itemData[\"name\"])))
	$WindowDialog_ItemMenu/ItemMenu_TextureFrame_Icon.set_texture($weapon.get_item_icon(index))

	strItemInfo = tr(\"NAME_ITEM\") +\": [color=#00aedb] \" + tr(str(itemData[\"name\"])) + \"[/color]\\n\"
	if itemData[\"type\"] == \"weapon\":
		strItemInfo = strItemInfo + tr(\"DAMAGE_ITEM_TEXT\") + \": [color=#b3cde0]\" + tr(str(itemData[\"damage\"])) + \"[/color]\\n\"
	if itemData[\"str\"] > 0:
		strItemInfo = strItemInfo + tr(\"STR_ITEM_TEXT\") + \": [color=#b3cde0]\" + tr(str(itemData[\"str\"])) + \"[/color]\\n\"
	if itemData[\"agi\"] > 0:
		strItemInfo = strItemInfo + tr(\"AGI_ITEM_TEXT\") + \": [color=#b3cde0]\" + tr(str(itemData[\"agi\"])) + \"[/color]\\n\"
	if itemData[\"hp\"] > 0:
		strItemInfo = strItemInfo + tr(\"HP_ITEM_TEXT\") + \": [color=#b3cde0]\" + tr(str(itemData[\"hp\"])) + \"[/color]\\n\"
	strItemInfo = strItemInfo + \"\\n [color=#b3cde0]\" + tr(str(itemData[\"description\"])) + \"[/color]\"

	$WindowDialog_ItemMenu/ItemMenu_RichTextLabel_ItemInfo.set_bbcode(strItemInfo)
	if itemData[\"quest\"] == true:
		$WindowDialog_ItemMenu/ItemMenu_Button_DropItem.hide()
	elif itemData[\"quest\"] == false:
		$WindowDialog_ItemMenu/ItemMenu_Button_DropItem.show()
		$WindowDialog_ItemMenu/ItemMenu_Button_DropItem.set_text(tr(\"UNEQUIP_BUTTON\"))
	$weapon.activeItemSlot = index
	$WindowDialog_ItemMenu.popup()
#	if itemData[\"equip\"] == true:
#		$WindowDialog_ItemMenu/equip_button.show()
#	elif itemData[\"equip\"] != false:
#		$WindowDialog_ItemMenu/equip_button.hide()

func _on_ItemMenu_Button_DropItem_pressed():
#	var newAmount = inventory_removeItem(0)
#
#	var player = get_tree().get_nodes_in_group(\"player\")
#	if (newAmount < 1):
#		$WindowDialog_ItemMenu.hide()
#	else:
#		$WindowDialog_ItemMenu/ItemMenu_Button_DropItem.set_text(\"(\" + String(newAmount) + \") \" +tr(\"COLLECT_BUTTON\"))
#
#
#	if player[0].get_node(\"inventary/inventory/bag1\"):
#		print(player[0].get_node(\"inventary/inventory/bag1\").get_item_count())
#		player[0].get_node(\"inventary/inventory/bag1\").update_slot(Global_Player.inventory_addItem(int($weapon.get_item_metadata(0)[\"id\"])))
#	$weapon.update_slot(0)
#	pass # Replace with function body.
	
	var player = get_tree().get_nodes_in_group(\"player\")

	if player[0].get_node(\"inventary/inventory/bag1\"):
		player[0].get_node(\"inventary/inventory/bag1\").update_slot(Global_Player.inventory_addItem(int($weapon.get_item_metadata(0)[\"id\"])))
		if player[0].get_node(\"inventary/inventory/bag1\").full__inventory == false:
			var newAmount = inventory_removeItem(0)
			if (newAmount < 1):
				$WindowDialog_ItemMenu.hide()
			else:
				$WindowDialog_ItemMenu/ItemMenu_Button_DropItem.set_text(\"(\" + String(newAmount) + \") \" +tr(\"COLLECT_BUTTON\"))
			
			$weapon.update_slot(0)
			$WindowDialog_ItemMenu/Full.hide()
		else:
			print(\"Full Inventory\")
			$WindowDialog_ItemMenu/Full.show()
			return

func inventory_removeItem(slot) -> int:
	var newAmount = $weapon.inventory[\"amount\"] - 1
	if (newAmount < 1):
		inventory_updateItem(slot, 0, 0)

		return 0
	$weapon.inventory[\"amount\"] = newAmount
	return newAmount

func inventory_updateItem(slot:int, new_id:int, new_amount:int) -> void:
	if (slot < 0):
		return
	if (new_amount < 0):
		return
	if (Global_ItemDatabase.get_item(str(new_id)).empty()):
		return
	$weapon.inventory = {\"id\": str(new_id), \"amount\": int(new_amount)}







func _on_WindowDialog_ItemMenu_popup_hide():
	$WindowDialog_ItemMenu/Full.hide()
	pass # Replace with function body.
"

[sub_resource type="StyleBoxEmpty" id=7]

[sub_resource type="GDScript" id=8]
script/source = "extends ItemList

var empty_slot = ResourceLoader.load(\"res://player/inventory/empty_slot.png\")
var max_slots = 1
var arrow_count_random
var inventory 

var activeItemSlot:int = -1
var dropItemSlot:int = -1

onready var isDraggingItem:bool = false
onready var mouseButtonReleased:bool = true
var draggedItemSlot:int = -1
onready var initial_mousePos:Vector2 = Vector2()
onready var cursor_insideItemList:bool = false

var isAwaitingSplit:bool = false
var splitItemSlot:int = -1
var load_slot = false
# Called when the node enters the scene tree for the first time.
func _ready():
	set_max_columns(1)
	set_fixed_icon_size(Vector2(32,32))
	set_icon_mode(ICON_MODE_TOP)
	set_select_mode(SELECT_SINGLE)
	set_same_column_width(true)
	set_allow_rmb_select(true)
	set_process(false)
	set_process_input(true)
	inventory = {\"amount\": 0,\"id\": 0}
	load_items()
	

func load_items():
	clear()
	add_item(\"\", null, false)
	update_slot(0)


func update_slot(slot:int) -> void:
	if (slot < 0):
		return
	#print(Global_Player.inventory)
	var inventoryItem:Dictionary = inventory
	var itemMetaData = Global_ItemDatabase.get_item(str(inventoryItem[\"id\"])).duplicate()
	var icon = ResourceLoader.load(\"res://player/UI sprite/Player_info/empty_equip_slot.png\")
	var amount = int(inventoryItem[\"amount\"])

	itemMetaData[\"amount\"] = amount
	if (!itemMetaData[\"stackable\"]):
		amount = \" \"
	set_item_text(slot, String(amount))
	set_item_icon(slot, icon)
	set_item_selectable(slot, int(inventoryItem[\"id\"]) > 0)
	set_item_metadata(slot, itemMetaData)
	set_item_tooltip(slot, itemMetaData[\"name\"])
	set_item_tooltip_enabled(slot, int(inventoryItem[\"id\"]) > 0)

"

[sub_resource type="GDScript" id=9]
script/source = "extends ItemList

var empty_slot = ResourceLoader.load(\"res://player/UI sprite/Player_info/empty_sword_equip_slot.png\")
var max_slots = 1
var arrow_count_random
var inventory 

var activeItemSlot:int = -1
var dropItemSlot:int = -1

onready var isDraggingItem:bool = false
onready var mouseButtonReleased:bool = true
var draggedItemSlot:int = -1
onready var initial_mousePos:Vector2 = Vector2()
onready var cursor_insideItemList:bool = false

var isAwaitingSplit:bool = false
var splitItemSlot:int = -1
var load_slot = false
# Called when the node enters the scene tree for the first time.
func _ready():
	set_max_columns(1)
	set_fixed_icon_size(Vector2(32,32))
	set_icon_mode(ICON_MODE_TOP)
	set_select_mode(SELECT_SINGLE)
	set_same_column_width(true)
	set_allow_rmb_select(true)
	set_process(false)
	set_process_input(true)
	pass # Replace with function body.
	
func load_data() -> void:
	#print(playerData.empty())
	if  GLOBAL.load_game == \"new_game\" :
		inventory = {\"id\": str(0), \"amount\": 0}
	else:
		inventory = get_parent().get_parent().get_parent().weapon_inventory
		print(\"weapon inventory\")
	if inventory != {\"id\": \"0\", \"amount\": 0}:
		print(get_item_metadata(inventory[0][\"damage\"]))

		
func _physics_process(delta):
	if get_parent().get_parent().get_parent().get_parent().weapon_inventory == null and load_slot == false:
		inventory = {\"id\": str(0), \"amount\": 0}
		load_items()
	elif get_parent().get_parent().get_parent().get_parent().weapon_inventory != null and load_slot == false:
		inventory = get_parent().get_parent().get_parent().get_parent().weapon_inventory
		load_items()
		load_slot = true
#	if inventory != null:
#		var damage = (get_item_metadata(0))
#		if damage[\"id\"] != \"0\":
#			get_parent().get_parent().get_parent().get_parent().damage_sword = damage[\"damage\"]
#			get_parent().get_parent().get_parent().get_parent().weapon = 1
#		elif damage[\"id\"] == \"0\":
#
#			get_parent().get_parent().get_parent().get_parent().damage_sword = 0
#			get_parent().get_parent().get_parent().get_parent().weapon = 0
#		if damage[\"type\"] == \"weapon\":
#			get_parent().get_parent().get_parent().get_parent().damage_sword = damage[\"damage\"]
#			get_parent().get_parent().get_parent().get_parent().weapon = 1
#			get_parent().get_parent().get_parent().get_parent().str_weapon = damage[\"str\"]
#			get_parent().get_parent().get_parent().get_parent().agi_weapon = damage[\"agi\"]
#			get_parent().get_parent().get_parent().get_parent().hp_weapon = damage[\"hp\"]
#
#		elif damage[\"type\"] != \"weapon\":
#			get_parent().get_parent().get_parent().get_parent().str_weapon = 0
#			get_parent().get_parent().get_parent().get_parent().agi_weapon = 0
#			get_parent().get_parent().get_parent().get_parent().hp_weapon = 0
#			get_parent().get_parent().get_parent().get_parent().damage_sword = 0
#			get_parent().get_parent().get_parent().get_parent().weapon = 0
func add_item_chest(id,amount):
	var dict:Dictionary = {\"inventory\":{}}
	inventory = {\"id\": id, \"amount\": amount}
	#Global_DataParser.write_data(url_PlayerData, dict)
	load_items()
	pass # Replace with function body.
	
func load_item_chest(inven):
	inventory = inven
	load_items()
	pass # Replace with function body.

func _input(event) -> void:
#	if (!isDraggingItem):
#		if event.is_action_pressed(\"key_shift\"):
#			isAwaitingSplit = true
#		if event.is_action_released(\"key_shift\"):
#			isAwaitingSplit = false

	if (event is InputEventMouseButton):
		if (!isAwaitingSplit):
			if (event.is_action_pressed(\"mouse_leftbtn\")):
				mouseButtonReleased = false
				initial_mousePos = get_viewport().get_mouse_position()
			if (event.is_action_released(\"mouse_leftbtn\")):
				pass
#				move_merge_item()
#				end_drag_item()
#		else:
#			if (event.is_action_pressed(\"mouse_rightbtn\")):
#				if (activeItemSlot >= 0):
#					begin_split_item()
	if (event is InputEventMouseMotion):
		if (cursor_insideItemList):
			
			activeItemSlot = get_item_at_position(get_local_mouse_position(),true)
			if (activeItemSlot >= 0):
				select(activeItemSlot, true)
				if (isDraggingItem or mouseButtonReleased):
					
					return
				if (!is_item_selectable(activeItemSlot)):
					pass
#					end_drag_item()
				if (initial_mousePos.distance_to(get_viewport().get_mouse_position()) > 0.0):
					pass
#					begin_drag_item(activeItemSlot)
		else:
			activeItemSlot = -1

	
func load_items():
	clear()
	add_item(\"\", null, false)
	update_slot(0)


func update_slot(slot:int) -> void:
	if (slot < 0):
		return
	#print(Global_Player.inventory)
	var inventoryItem:Dictionary = inventory
	var itemMetaData = Global_ItemDatabase.get_item(str(inventoryItem[\"id\"])).duplicate()
	var icon
	if itemMetaData[\"id\"] == \"0\":
		icon = empty_slot
	else:
		icon = ResourceLoader.load(itemMetaData[\"icon\"])
	if itemMetaData[\"type\"] == \"weapon\":
		get_parent().get_parent().get_parent().get_parent().damage_sword = itemMetaData[\"damage\"]
		get_parent().get_parent().get_parent().get_parent().weapon = 1
		get_parent().get_parent().get_parent().get_parent().str_weapon = itemMetaData[\"str\"]
		get_parent().get_parent().get_parent().get_parent().agi_weapon = itemMetaData[\"agi\"]
		get_parent().get_parent().get_parent().get_parent().hp_weapon = itemMetaData[\"hp\"]
	elif itemMetaData[\"type\"] != \"weapon\":
		get_parent().get_parent().get_parent().get_parent().str_weapon = 0
		get_parent().get_parent().get_parent().get_parent().agi_weapon = 0
		get_parent().get_parent().get_parent().get_parent().hp_weapon = 0
		get_parent().get_parent().get_parent().get_parent().damage_sword = 0
		get_parent().get_parent().get_parent().get_parent().weapon = 0
	var amount = int(inventoryItem[\"amount\"])

	itemMetaData[\"amount\"] = amount
	if (!itemMetaData[\"stackable\"]):
		amount = \" \"
	set_item_text(slot, String(amount))
	set_item_icon(slot, icon)
	set_item_selectable(slot, int(inventoryItem[\"id\"]) > 0)
	set_item_metadata(slot, itemMetaData)
	set_item_tooltip(slot, itemMetaData[\"name\"])
	set_item_tooltip_enabled(slot, int(inventoryItem[\"id\"]) > 0)

func inventory_getEmptySlot() -> int:
	if inventory[\"id\"] == \"0\": 
		
		return 0
	print (\"Inventory is full!\")
	return -1



func inventory_addItem(itemId:int) -> int:
	var itemData:Dictionary = Global_ItemDatabase.get_item(str(itemId))
	if (itemData.empty()): 
		return -1
	if (int(itemData[\"stack_limit\"]) <= 1):
		var slot = inventory_getEmptySlot()
		
		if (slot < 0): 
			
			return -1
		
		inventory = {\"id\": String(itemId), \"amount\": 1}
		
		return 0
		
	


	var slot = inventory_getEmptySlot()
	if (slot < 0): 
		return -1
	inventory = {\"id\": String(itemId), \"amount\": 1}
	return slot"

[sub_resource type="StyleBoxTexture" id=10]
texture = ExtResource( 177 )
region_rect = Rect2( 0, 0, 330, 360 )

[sub_resource type="StyleBoxEmpty" id=11]

[sub_resource type="GDScript" id=12]
script/source = "extends Panel

# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"

# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.

func _on_weapon_item_rmb_selected(index, at_position):


	if ($chest.isDraggingItem):
		return
	if ($chest.isAwaitingSplit):
		return

	$chest.dropItemSlot = index
	var itemData:Dictionary = $chest.get_item_metadata(index)
	if (int(itemData[\"id\"])) < 1: return
	var strItemInfo:String = \"\"

	#$WindowDialog_ItemMenu.set_position(get_viewport().get_mouse_position())
	$WindowDialog_ItemMenu.set_title(tr(str(itemData[\"name\"])))
	$WindowDialog_ItemMenu/ItemMenu_TextureFrame_Icon.set_texture($chest.get_item_icon(index))

	strItemInfo = tr(\"NAME_ITEM\") +\": [color=#00aedb] \" + tr(str(itemData[\"name\"])) + \"[/color]\\n\"
	if itemData[\"type\"] == \"weapon\":
		strItemInfo = strItemInfo + tr(\"DAMAGE_ITEM_TEXT\") + \": [color=#b3cde0]\" + tr(str(itemData[\"damage\"])) + \"[/color]\\n\"
	if itemData[\"str\"] > 0:
		strItemInfo = strItemInfo + tr(\"STR_ITEM_TEXT\") + \": [color=#b3cde0]\" + tr(str(itemData[\"str\"])) + \"[/color]\\n\"
	if itemData[\"agi\"] > 0:
		strItemInfo = strItemInfo + tr(\"AGI_ITEM_TEXT\") + \": [color=#b3cde0]\" + tr(str(itemData[\"agi\"])) + \"[/color]\\n\"
	if itemData[\"hp\"] > 0:
		strItemInfo = strItemInfo + tr(\"HP_ITEM_TEXT\") + \": [color=#b3cde0]\" + tr(str(itemData[\"hp\"])) + \"[/color]\\n\"
	strItemInfo = strItemInfo + \"\\n [color=#b3cde0]\" + tr(str(itemData[\"description\"])) + \"[/color]\"

	$WindowDialog_ItemMenu/ItemMenu_RichTextLabel_ItemInfo.set_bbcode(strItemInfo)
	if itemData[\"quest\"] == true:
		$WindowDialog_ItemMenu/ItemMenu_Button_DropItem.hide()
	elif itemData[\"quest\"] == false:
		$WindowDialog_ItemMenu/ItemMenu_Button_DropItem.show()
		$WindowDialog_ItemMenu/ItemMenu_Button_DropItem.set_text(tr(\"UNEQUIP_BUTTON\"))
	$chest.activeItemSlot = index
	$WindowDialog_ItemMenu.popup()
#	if itemData[\"equip\"] == true:
#		$WindowDialog_ItemMenu/equip_button.show()
#	elif itemData[\"equip\"] != false:
#		$WindowDialog_ItemMenu/equip_button.hide()

func _on_ItemMenu_Button_DropItem_pressed():
	var player = get_tree().get_nodes_in_group(\"player\")

	if player[0].get_node(\"inventary/inventory/bag1\"):
		player[0].get_node(\"inventary/inventory/bag1\").update_slot(Global_Player.inventory_addItem(int($chest.get_item_metadata(0)[\"id\"])))
		if player[0].get_node(\"inventary/inventory/bag1\").full__inventory == false:
			var newAmount = inventory_removeItem(0)
			if (newAmount < 1):
				$WindowDialog_ItemMenu.hide()
			else:
				$WindowDialog_ItemMenu/ItemMenu_Button_DropItem.set_text(\"(\" + String(newAmount) + \") \" +tr(\"COLLECT_BUTTON\"))
			
			$chest.update_slot(0)
			$WindowDialog_ItemMenu/Full.hide()
		else:
			print(\"Full Inventory\")
			$WindowDialog_ItemMenu/Full.show()
			return

func inventory_removeItem(slot) -> int:
	var newAmount = $chest.inventory[\"amount\"] - 1
	if (newAmount < 1):
		inventory_updateItem(slot, 0, 0)

		return 0
	$chest.inventory[\"amount\"] = newAmount
	return newAmount

func inventory_updateItem(slot:int, new_id:int, new_amount:int) -> void:
	if (slot < 0):
		return
	if (new_amount < 0):
		return
	if (Global_ItemDatabase.get_item(str(new_id)).empty()):
		return
	$chest.inventory = {\"id\": str(new_id), \"amount\": int(new_amount)}







func _on_WindowDialog_ItemMenu_popup_hide():
	$WindowDialog_ItemMenu/Full.hide()
	pass # Replace with function body.
"

[sub_resource type="StyleBoxEmpty" id=13]

[sub_resource type="GDScript" id=14]
script/source = "extends ItemList

var empty_slot = ResourceLoader.load(\"res://player/inventory/empty_slot.png\")
var max_slots = 1
var arrow_count_random
var inventory 

var activeItemSlot:int = -1
var dropItemSlot:int = -1

onready var isDraggingItem:bool = false
onready var mouseButtonReleased:bool = true
var draggedItemSlot:int = -1
onready var initial_mousePos:Vector2 = Vector2()
onready var cursor_insideItemList:bool = false

var isAwaitingSplit:bool = false
var splitItemSlot:int = -1
var load_slot = false
# Called when the node enters the scene tree for the first time.
func _ready():
	set_max_columns(1)
	set_fixed_icon_size(Vector2(32,32))
	set_icon_mode(ICON_MODE_TOP)
	set_select_mode(SELECT_SINGLE)
	set_same_column_width(true)
	set_allow_rmb_select(true)
	set_process(false)
	set_process_input(true)
	inventory = {\"amount\": 0,\"id\": 0}
	load_items()
	

func load_items():
	clear()
	add_item(\"\", null, false)
	update_slot(0)


func update_slot(slot:int) -> void:
	if (slot < 0):
		return
	#print(Global_Player.inventory)
	var inventoryItem:Dictionary = inventory
	var itemMetaData = Global_ItemDatabase.get_item(str(inventoryItem[\"id\"])).duplicate()
	var icon = ResourceLoader.load(\"res://player/UI sprite/Player_info/empty_equip_slot.png\")
	var amount = int(inventoryItem[\"amount\"])

	itemMetaData[\"amount\"] = amount
	if (!itemMetaData[\"stackable\"]):
		amount = \" \"
	set_item_text(slot, String(amount))
	set_item_icon(slot, icon)
	set_item_selectable(slot, int(inventoryItem[\"id\"]) > 0)
	set_item_metadata(slot, itemMetaData)
	set_item_tooltip(slot, itemMetaData[\"name\"])
	set_item_tooltip_enabled(slot, int(inventoryItem[\"id\"]) > 0)

"

[sub_resource type="GDScript" id=15]
script/source = "extends ItemList
var empty_slot =ResourceLoader.load(\"res://player/UI sprite/Player_info/empty_chest_equip_slot.png\")
var max_slots = 1
var arrow_count_random
var inventory 

var activeItemSlot:int = -1
var dropItemSlot:int = -1

onready var isDraggingItem:bool = false
onready var mouseButtonReleased:bool = true
var draggedItemSlot:int = -1
onready var initial_mousePos:Vector2 = Vector2()
onready var cursor_insideItemList:bool = false

var isAwaitingSplit:bool = false
var splitItemSlot:int = -1
var load_slot = false
# Called when the node enters the scene tree for the first time.
func _ready():
	set_max_columns(1)
	set_fixed_icon_size(Vector2(32,32))
	set_icon_mode(ICON_MODE_TOP)
	set_select_mode(SELECT_SINGLE)
	set_same_column_width(true)
	set_allow_rmb_select(true)
	set_process(false)
	set_process_input(true)
	pass # Replace with function body.
	
func load_data() -> void:
	#print(playerData.empty())
	if  GLOBAL.load_game == \"new_game\" :
		inventory = {\"id\": str(0), \"amount\": 0}
	else:
		inventory = get_parent().get_parent().get_parent().chest_inventory
		print(\"weapon inventory\")
	if inventory != {\"id\": \"0\", \"amount\": 0}:
		print(get_item_metadata(inventory[0][\"damage\"]))

		
func _physics_process(delta):
	
	if get_parent().get_parent().get_parent().get_parent().chest_inventory == null and load_slot == false:
		inventory = {\"id\": str(0), \"amount\": 0}
		load_items()
	elif get_parent().get_parent().get_parent().get_parent().chest_inventory != null and load_slot == false:
		inventory = get_parent().get_parent().get_parent().get_parent().chest_inventory
		load_items()
		load_slot = true
#	if inventory != null:
#		var damage = (get_item_metadata(0))
#		if damage[\"type\"] == \"chest\":
#			get_parent().get_parent().get_parent().get_parent().str_chest = damage[\"str\"]
#			get_parent().get_parent().get_parent().get_parent().agi_chest = damage[\"agi\"]
#			get_parent().get_parent().get_parent().get_parent().hp_chest = damage[\"hp\"]
#		elif damage[\"type\"] == \"null\":
#
#			get_parent().get_parent().get_parent().get_parent().str_chest = 0
#			get_parent().get_parent().get_parent().get_parent().agi_chest = 0
#			get_parent().get_parent().get_parent().get_parent().hp_chest = 0
func add_item_chest(id,amount):
	var dict:Dictionary = {\"inventory\":{}}
	inventory = {\"id\": id, \"amount\": amount}
	#Global_DataParser.write_data(url_PlayerData, dict)
	load_items()
	pass # Replace with function body.
	
func load_item_chest(inven):
	inventory = inven
	load_items()
	pass # Replace with function body.

func _input(event) -> void:
#	if (!isDraggingItem):
#		if event.is_action_pressed(\"key_shift\"):
#			isAwaitingSplit = true
#		if event.is_action_released(\"key_shift\"):
#			isAwaitingSplit = false

	if (event is InputEventMouseButton):
		if (!isAwaitingSplit):
			if (event.is_action_pressed(\"mouse_leftbtn\")):
				mouseButtonReleased = false
				initial_mousePos = get_viewport().get_mouse_position()
			if (event.is_action_released(\"mouse_leftbtn\")):
				pass
#				move_merge_item()
#				end_drag_item()
#		else:
#			if (event.is_action_pressed(\"mouse_rightbtn\")):
#				if (activeItemSlot >= 0):
#					begin_split_item()
	if (event is InputEventMouseMotion):
		if (cursor_insideItemList):
			
			activeItemSlot = get_item_at_position(get_local_mouse_position(),true)
			if (activeItemSlot >= 0):
				select(activeItemSlot, true)
				if (isDraggingItem or mouseButtonReleased):
					
					return
				if (!is_item_selectable(activeItemSlot)):
					pass
#					end_drag_item()
				if (initial_mousePos.distance_to(get_viewport().get_mouse_position()) > 0.0):
					pass
#					begin_drag_item(activeItemSlot)
		else:
			activeItemSlot = -1

	
func load_items():
	clear()
	add_item(\"\", null, false)
	update_slot(0)


func update_slot(slot:int) -> void:
	if (slot < 0):
		return
	#print(Global_Player.inventory)
	var inventoryItem:Dictionary = inventory
	var itemMetaData = Global_ItemDatabase.get_item(str(inventoryItem[\"id\"])).duplicate()
	var icon
	if itemMetaData[\"id\"] == \"0\":
		icon = empty_slot
	else:
		icon = ResourceLoader.load(itemMetaData[\"icon\"])
	if itemMetaData[\"type\"] == \"chest\":
		get_parent().get_parent().get_parent().get_parent().str_chest = itemMetaData[\"str\"]
		get_parent().get_parent().get_parent().get_parent().agi_chest = itemMetaData[\"agi\"]
		get_parent().get_parent().get_parent().get_parent().hp_chest = itemMetaData[\"hp\"]
	elif itemMetaData[\"type\"] == \"null\":
		get_parent().get_parent().get_parent().get_parent().str_chest = 0
		get_parent().get_parent().get_parent().get_parent().agi_chest = 0
		get_parent().get_parent().get_parent().get_parent().hp_chest = 0
	var amount = int(inventoryItem[\"amount\"])

	itemMetaData[\"amount\"] = amount
	if (!itemMetaData[\"stackable\"]):
		amount = \" \"
	set_item_text(slot, String(amount))
	set_item_icon(slot, icon)
	set_item_selectable(slot, int(inventoryItem[\"id\"]) > 0)
	set_item_metadata(slot, itemMetaData)
	set_item_tooltip(slot, itemMetaData[\"name\"])
	set_item_tooltip_enabled(slot, int(inventoryItem[\"id\"]) > 0)

func inventory_getEmptySlot() -> int:
	if inventory[\"id\"] == \"0\": 
		
		return 0
	print (\"Inventory is full!\")
	return -1



func inventory_addItem(itemId:int) -> int:
	var itemData:Dictionary = Global_ItemDatabase.get_item(str(itemId))
	if (itemData.empty()): 
		return -1
	if (int(itemData[\"stack_limit\"]) <= 1):
		var slot = inventory_getEmptySlot()
		
		if (slot < 0): 
			
			return -1
		
		inventory = {\"id\": String(itemId), \"amount\": 1}
		
		return 0
		
	


	var slot = inventory_getEmptySlot()
	if (slot < 0): 
		return -1
	inventory = {\"id\": String(itemId), \"amount\": 1}
	return slot"

[sub_resource type="StyleBoxEmpty" id=16]

[sub_resource type="GDScript" id=17]
script/source = "extends Panel

# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"

# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.

func _on_weapon_item_rmb_selected(index, at_position):


	if ($gloves.isDraggingItem):
		return
	if ($gloves.isAwaitingSplit):
		return

	$gloves.dropItemSlot = index
	var itemData:Dictionary = $gloves.get_item_metadata(index)
	if (int(itemData[\"id\"])) < 1: return
	var strItemInfo:String = \"\"

	#$WindowDialog_ItemMenu.set_position(get_viewport().get_mouse_position())
	$WindowDialog_ItemMenu.set_title(tr(str(itemData[\"name\"])))
	$WindowDialog_ItemMenu/ItemMenu_TextureFrame_Icon.set_texture($gloves.get_item_icon(index))

	strItemInfo = tr(\"NAME_ITEM\") +\": [color=#00aedb] \" + tr(str(itemData[\"name\"])) + \"[/color]\\n\"
	if itemData[\"type\"] == \"weapon\":
		strItemInfo = strItemInfo + tr(\"DAMAGE_ITEM_TEXT\") + \": [color=#b3cde0]\" + tr(str(itemData[\"damage\"])) + \"[/color]\\n\"
	if itemData[\"str\"] > 0:
		strItemInfo = strItemInfo + tr(\"STR_ITEM_TEXT\") + \": [color=#b3cde0]\" + tr(str(itemData[\"str\"])) + \"[/color]\\n\"
	if itemData[\"agi\"] > 0:
		strItemInfo = strItemInfo + tr(\"AGI_ITEM_TEXT\") + \": [color=#b3cde0]\" + tr(str(itemData[\"agi\"])) + \"[/color]\\n\"
	if itemData[\"hp\"] > 0:
		strItemInfo = strItemInfo + tr(\"HP_ITEM_TEXT\") + \": [color=#b3cde0]\" + tr(str(itemData[\"hp\"])) + \"[/color]\\n\"
	strItemInfo = strItemInfo + \"\\n [color=#b3cde0]\" + tr(str(itemData[\"description\"])) + \"[/color]\"

	$WindowDialog_ItemMenu/ItemMenu_RichTextLabel_ItemInfo.set_bbcode(strItemInfo)
	if itemData[\"quest\"] == true:
		$WindowDialog_ItemMenu/ItemMenu_Button_DropItem.hide()
	elif itemData[\"quest\"] == false:
		$WindowDialog_ItemMenu/ItemMenu_Button_DropItem.show()
		$WindowDialog_ItemMenu/ItemMenu_Button_DropItem.set_text(tr(\"UNEQUIP_BUTTON\"))
	$gloves.activeItemSlot = index
	$WindowDialog_ItemMenu.popup()
#	if itemData[\"equip\"] == true:
#		$WindowDialog_ItemMenu/equip_button.show()
#	elif itemData[\"equip\"] != false:
#		$WindowDialog_ItemMenu/equip_button.hide()

func _on_ItemMenu_Button_DropItem_pressed():
	var player = get_tree().get_nodes_in_group(\"player\")

	if player[0].get_node(\"inventary/inventory/bag1\"):
		player[0].get_node(\"inventary/inventory/bag1\").update_slot(Global_Player.inventory_addItem(int($gloves.get_item_metadata(0)[\"id\"])))
		if player[0].get_node(\"inventary/inventory/bag1\").full__inventory == false:
			var newAmount = inventory_removeItem(0)
			if (newAmount < 1):
				$WindowDialog_ItemMenu.hide()
			else:
				$WindowDialog_ItemMenu/ItemMenu_Button_DropItem.set_text(\"(\" + String(newAmount) + \") \" +tr(\"COLLECT_BUTTON\"))
			
			$gloves.update_slot(0)
			$WindowDialog_ItemMenu/Full.hide()
		else:
			print(\"Full Inventory\")
			$WindowDialog_ItemMenu/Full.show()
			return

func inventory_removeItem(slot) -> int:
	var newAmount = $gloves.inventory[\"amount\"] - 1
	if (newAmount < 1):
		inventory_updateItem(slot, 0, 0)

		return 0
	$gloves.inventory[\"amount\"] = newAmount
	return newAmount

func inventory_updateItem(slot:int, new_id:int, new_amount:int) -> void:
	if (slot < 0):
		return
	if (new_amount < 0):
		return
	if (Global_ItemDatabase.get_item(str(new_id)).empty()):
		return
	$gloves.inventory = {\"id\": str(new_id), \"amount\": int(new_amount)}







func _on_WindowDialog_ItemMenu_popup_hide():
	$WindowDialog_ItemMenu/Full.hide()
	pass # Replace with function body.
"

[sub_resource type="StyleBoxEmpty" id=18]

[sub_resource type="GDScript" id=19]
script/source = "extends ItemList

var empty_slot = ResourceLoader.load(\"res://player/inventory/empty_slot.png\")
var max_slots = 1
var arrow_count_random
var inventory 

var activeItemSlot:int = -1
var dropItemSlot:int = -1

onready var isDraggingItem:bool = false
onready var mouseButtonReleased:bool = true
var draggedItemSlot:int = -1
onready var initial_mousePos:Vector2 = Vector2()
onready var cursor_insideItemList:bool = false

var isAwaitingSplit:bool = false
var splitItemSlot:int = -1
var load_slot = false
# Called when the node enters the scene tree for the first time.
func _ready():
	set_max_columns(1)
	set_fixed_icon_size(Vector2(32,32))
	set_icon_mode(ICON_MODE_TOP)
	set_select_mode(SELECT_SINGLE)
	set_same_column_width(true)
	set_allow_rmb_select(true)
	set_process(false)
	set_process_input(true)
	inventory = {\"amount\": 0,\"id\": 0}
	load_items()
	

func load_items():
	clear()
	add_item(\"\", null, false)
	update_slot(0)


func update_slot(slot:int) -> void:
	if (slot < 0):
		return
	#print(Global_Player.inventory)
	var inventoryItem:Dictionary = inventory
	var itemMetaData = Global_ItemDatabase.get_item(str(inventoryItem[\"id\"])).duplicate()
	var icon = ResourceLoader.load(\"res://player/UI sprite/Player_info/empty_equip_slot.png\")
	var amount = int(inventoryItem[\"amount\"])

	itemMetaData[\"amount\"] = amount
	if (!itemMetaData[\"stackable\"]):
		amount = \" \"
	set_item_text(slot, String(amount))
	set_item_icon(slot, icon)
	set_item_selectable(slot, int(inventoryItem[\"id\"]) > 0)
	set_item_metadata(slot, itemMetaData)
	set_item_tooltip(slot, itemMetaData[\"name\"])
	set_item_tooltip_enabled(slot, int(inventoryItem[\"id\"]) > 0)

"

[sub_resource type="GDScript" id=20]
script/source = "extends ItemList

var empty_slot = ResourceLoader.load(\"res://player/UI sprite/Player_info/empty_gloves_equip_slot.png\")
var max_slots = 1
var arrow_count_random
var inventory 

var activeItemSlot:int = -1
var dropItemSlot:int = -1

onready var isDraggingItem:bool = false
onready var mouseButtonReleased:bool = true
var draggedItemSlot:int = -1
onready var initial_mousePos:Vector2 = Vector2()
onready var cursor_insideItemList:bool = false

var isAwaitingSplit:bool = false
var splitItemSlot:int = -1
var load_slot = false
# Called when the node enters the scene tree for the first time.
func _ready():
	set_max_columns(1)
	set_fixed_icon_size(Vector2(32,32))
	set_icon_mode(ICON_MODE_TOP)
	set_select_mode(SELECT_SINGLE)
	set_same_column_width(true)
	set_allow_rmb_select(true)
	set_process(false)
	set_process_input(true)
	pass # Replace with function body.
	
func load_data() -> void:
	#print(playerData.empty())
	if  GLOBAL.load_game == \"new_game\" :
		inventory = {\"id\": str(0), \"amount\": 0}
	else:
		inventory = get_parent().get_parent().get_parent().gloves_inventory
		print(\"weapon inventory\")
	if inventory != {\"id\": \"0\", \"amount\": 0}:
		print(get_item_metadata(inventory[0][\"damage\"]))

		
func _physics_process(delta):

	if get_parent().get_parent().get_parent().get_parent().gloves_inventory == null and load_slot == false:
		inventory = {\"id\": str(0), \"amount\": 0}
		load_items()
	elif get_parent().get_parent().get_parent().get_parent().gloves_inventory != null and load_slot == false:
		inventory = get_parent().get_parent().get_parent().get_parent().gloves_inventory
		load_items()
		load_slot = true
#	if inventory != null:
#		var damage = (get_item_metadata(0))
#		if damage[\"type\"] == \"gloves\":
#			get_parent().get_parent().get_parent().get_parent().str_gloves = damage[\"str\"]
#			get_parent().get_parent().get_parent().get_parent().agi_gloves = damage[\"agi\"]
#			get_parent().get_parent().get_parent().get_parent().hp_gloves = damage[\"hp\"]
#		elif damage[\"type\"] == \"null\":
#
#			get_parent().get_parent().get_parent().get_parent().str_gloves = 0
#			get_parent().get_parent().get_parent().get_parent().agi_gloves = 0
#			get_parent().get_parent().get_parent().get_parent().hp_gloves = 0
func add_item_chest(id,amount):
	var dict:Dictionary = {\"inventory\":{}}
	inventory = {\"id\": id, \"amount\": amount}
	#Global_DataParser.write_data(url_PlayerData, dict)
	load_items()
	pass # Replace with function body.
	
func load_item_chest(inven):
	inventory = inven
	load_items()
	pass # Replace with function body.

func _input(event) -> void:
#	if (!isDraggingItem):
#		if event.is_action_pressed(\"key_shift\"):
#			isAwaitingSplit = true
#		if event.is_action_released(\"key_shift\"):
#			isAwaitingSplit = false

	if (event is InputEventMouseButton):
		if (!isAwaitingSplit):
			if (event.is_action_pressed(\"mouse_leftbtn\")):
				mouseButtonReleased = false
				initial_mousePos = get_viewport().get_mouse_position()
			if (event.is_action_released(\"mouse_leftbtn\")):
				pass
#				move_merge_item()
#				end_drag_item()
#		else:
#			if (event.is_action_pressed(\"mouse_rightbtn\")):
#				if (activeItemSlot >= 0):
#					begin_split_item()
	if (event is InputEventMouseMotion):
		if (cursor_insideItemList):
			
			activeItemSlot = get_item_at_position(get_local_mouse_position(),true)
			if (activeItemSlot >= 0):
				select(activeItemSlot, true)
				if (isDraggingItem or mouseButtonReleased):
					
					return
				if (!is_item_selectable(activeItemSlot)):
					pass
#					end_drag_item()
				if (initial_mousePos.distance_to(get_viewport().get_mouse_position()) > 0.0):
					pass
#					begin_drag_item(activeItemSlot)
		else:
			activeItemSlot = -1

	
func load_items():
	clear()
	add_item(\"\", null, false)
	update_slot(0)


func update_slot(slot:int) -> void:
	if (slot < 0):
		return
	#print(Global_Player.inventory)
	var inventoryItem:Dictionary = inventory
	var itemMetaData = Global_ItemDatabase.get_item(str(inventoryItem[\"id\"])).duplicate()
	var icon
	if itemMetaData[\"id\"] == \"0\":
		icon = empty_slot
	else:
		icon = ResourceLoader.load(itemMetaData[\"icon\"])
	if itemMetaData[\"type\"] == \"gloves\":
		get_parent().get_parent().get_parent().get_parent().str_gloves = itemMetaData[\"str\"]
		get_parent().get_parent().get_parent().get_parent().agi_gloves = itemMetaData[\"agi\"]
		get_parent().get_parent().get_parent().get_parent().hp_gloves = itemMetaData[\"hp\"]
	elif itemMetaData[\"type\"] == \"null\":
		get_parent().get_parent().get_parent().get_parent().str_gloves = 0
		get_parent().get_parent().get_parent().get_parent().agi_gloves = 0
		get_parent().get_parent().get_parent().get_parent().hp_gloves = 0
	var amount = int(inventoryItem[\"amount\"])

	itemMetaData[\"amount\"] = amount
	if (!itemMetaData[\"stackable\"]):
		amount = \" \"
	set_item_text(slot, String(amount))
	set_item_icon(slot, icon)
	set_item_selectable(slot, int(inventoryItem[\"id\"]) > 0)
	set_item_metadata(slot, itemMetaData)
	set_item_tooltip(slot, itemMetaData[\"name\"])
	set_item_tooltip_enabled(slot, int(inventoryItem[\"id\"]) > 0)

func inventory_getEmptySlot() -> int:
	if inventory[\"id\"] == \"0\": 
		
		return 0
	print (\"Inventory is full!\")
	return -1



func inventory_addItem(itemId:int) -> int:
	var itemData:Dictionary = Global_ItemDatabase.get_item(str(itemId))
	if (itemData.empty()): 
		return -1
	if (int(itemData[\"stack_limit\"]) <= 1):
		var slot = inventory_getEmptySlot()
		
		if (slot < 0): 
			
			return -1
		
		inventory = {\"id\": String(itemId), \"amount\": 1}
		
		return 0
		
	


	var slot = inventory_getEmptySlot()
	if (slot < 0): 
		return -1
	inventory = {\"id\": String(itemId), \"amount\": 1}
	return slot"

[sub_resource type="StyleBoxEmpty" id=21]

[sub_resource type="GDScript" id=22]
script/source = "extends Panel

# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"

# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.

func _on_weapon_item_rmb_selected(index, at_position):


	if ($foot.isDraggingItem):
		return
	if ($foot.isAwaitingSplit):
		return

	$foot.dropItemSlot = index
	var itemData:Dictionary = $foot.get_item_metadata(index)
	if (int(itemData[\"id\"])) < 1: return
	var strItemInfo:String = \"\"

	#$WindowDialog_ItemMenu.set_position(get_viewport().get_mouse_position())
	$WindowDialog_ItemMenu.set_title(tr(str(itemData[\"name\"])))
	$WindowDialog_ItemMenu/ItemMenu_TextureFrame_Icon.set_texture($foot.get_item_icon(index))

	strItemInfo = tr(\"NAME_ITEM\") +\": [color=#00aedb] \" + tr(str(itemData[\"name\"])) + \"[/color]\\n\"
	if itemData[\"type\"] == \"weapon\":
		strItemInfo = strItemInfo + tr(\"DAMAGE_ITEM_TEXT\") + \": [color=#b3cde0]\" + tr(str(itemData[\"damage\"])) + \"[/color]\\n\"
	if itemData[\"str\"] > 0:
		strItemInfo = strItemInfo + tr(\"STR_ITEM_TEXT\") + \": [color=#b3cde0]\" + tr(str(itemData[\"str\"])) + \"[/color]\\n\"
	if itemData[\"agi\"] > 0:
		strItemInfo = strItemInfo + tr(\"AGI_ITEM_TEXT\") + \": [color=#b3cde0]\" + tr(str(itemData[\"agi\"])) + \"[/color]\\n\"
	if itemData[\"hp\"] > 0:
		strItemInfo = strItemInfo + tr(\"HP_ITEM_TEXT\") + \": [color=#b3cde0]\" + tr(str(itemData[\"hp\"])) + \"[/color]\\n\"
	strItemInfo = strItemInfo + \"\\n [color=#b3cde0]\" + tr(str(itemData[\"description\"])) + \"[/color]\"

	$WindowDialog_ItemMenu/ItemMenu_RichTextLabel_ItemInfo.set_bbcode(strItemInfo)
	if itemData[\"quest\"] == true:
		$WindowDialog_ItemMenu/ItemMenu_Button_DropItem.hide()
	elif itemData[\"quest\"] == false:
		$WindowDialog_ItemMenu/ItemMenu_Button_DropItem.show()
		$WindowDialog_ItemMenu/ItemMenu_Button_DropItem.set_text(tr(\"UNEQUIP_BUTTON\"))
	$foot.activeItemSlot = index
	$WindowDialog_ItemMenu.popup()
#	if itemData[\"equip\"] == true:
#		$WindowDialog_ItemMenu/equip_button.show()
#	elif itemData[\"equip\"] != false:
#		$WindowDialog_ItemMenu/equip_button.hide()

func _on_ItemMenu_Button_DropItem_pressed():
	var player = get_tree().get_nodes_in_group(\"player\")

	if player[0].get_node(\"inventary/inventory/bag1\"):
		player[0].get_node(\"inventary/inventory/bag1\").update_slot(Global_Player.inventory_addItem(int($foot.get_item_metadata(0)[\"id\"])))
		if player[0].get_node(\"inventary/inventory/bag1\").full__inventory == false:
			var newAmount = inventory_removeItem(0)
			if (newAmount < 1):
				$WindowDialog_ItemMenu.hide()
			else:
				$WindowDialog_ItemMenu/ItemMenu_Button_DropItem.set_text(\"(\" + String(newAmount) + \") \" +tr(\"COLLECT_BUTTON\"))
			
			$foot.update_slot(0)
			$WindowDialog_ItemMenu/Full.hide()
		else:
			print(\"Full Inventory\")
			$WindowDialog_ItemMenu/Full.show()
			return

func inventory_removeItem(slot) -> int:
	var newAmount = $foot.inventory[\"amount\"] - 1
	if (newAmount < 1):
		inventory_updateItem(slot, 0, 0)

		return 0
	$foot.inventory[\"amount\"] = newAmount
	return newAmount

func inventory_updateItem(slot:int, new_id:int, new_amount:int) -> void:
	if (slot < 0):
		return
	if (new_amount < 0):
		return
	if (Global_ItemDatabase.get_item(str(new_id)).empty()):
		return
	$foot.inventory = {\"id\": str(new_id), \"amount\": int(new_amount)}







func _on_WindowDialog_ItemMenu_popup_hide():
	$WindowDialog_ItemMenu/Full.hide()
	pass # Replace with function body.
"

[sub_resource type="StyleBoxEmpty" id=23]

[sub_resource type="GDScript" id=24]
script/source = "extends ItemList

var empty_slot = ResourceLoader.load(\"res://player/inventory/empty_slot.png\")
var max_slots = 1
var arrow_count_random
var inventory 

var activeItemSlot:int = -1
var dropItemSlot:int = -1

onready var isDraggingItem:bool = false
onready var mouseButtonReleased:bool = true
var draggedItemSlot:int = -1
onready var initial_mousePos:Vector2 = Vector2()
onready var cursor_insideItemList:bool = false

var isAwaitingSplit:bool = false
var splitItemSlot:int = -1
var load_slot = false
# Called when the node enters the scene tree for the first time.
func _ready():
	set_max_columns(1)
	set_fixed_icon_size(Vector2(32,32))
	set_icon_mode(ICON_MODE_TOP)
	set_select_mode(SELECT_SINGLE)
	set_same_column_width(true)
	set_allow_rmb_select(true)
	set_process(false)
	set_process_input(true)
	inventory = {\"amount\": 0,\"id\": 0}
	load_items()
	

func load_items():
	clear()
	add_item(\"\", null, false)
	update_slot(0)


func update_slot(slot:int) -> void:
	if (slot < 0):
		return
	#print(Global_Player.inventory)
	var inventoryItem:Dictionary = inventory
	var itemMetaData = Global_ItemDatabase.get_item(str(inventoryItem[\"id\"])).duplicate()
	var icon = ResourceLoader.load(\"res://player/UI sprite/Player_info/empty_equip_slot.png\")
	var amount = int(inventoryItem[\"amount\"])

	itemMetaData[\"amount\"] = amount
	if (!itemMetaData[\"stackable\"]):
		amount = \" \"
	set_item_text(slot, String(amount))
	set_item_icon(slot, icon)
	set_item_selectable(slot, int(inventoryItem[\"id\"]) > 0)
	set_item_metadata(slot, itemMetaData)
	set_item_tooltip(slot, itemMetaData[\"name\"])
	set_item_tooltip_enabled(slot, int(inventoryItem[\"id\"]) > 0)
"

[sub_resource type="GDScript" id=25]
script/source = "extends ItemList

var empty_slot = ResourceLoader.load(\"res://player/UI sprite/Player_info/empty_foot_equip_slot.png\")
var max_slots = 1
var arrow_count_random
var inventory 

var activeItemSlot:int = -1
var dropItemSlot:int = -1

onready var isDraggingItem:bool = false
onready var mouseButtonReleased:bool = true
var draggedItemSlot:int = -1
onready var initial_mousePos:Vector2 = Vector2()
onready var cursor_insideItemList:bool = false

var isAwaitingSplit:bool = false
var splitItemSlot:int = -1
var load_slot = false
# Called when the node enters the scene tree for the first time.
func _ready():
	set_max_columns(1)
	set_fixed_icon_size(Vector2(32,32))
	set_icon_mode(ICON_MODE_TOP)
	set_select_mode(SELECT_SINGLE)
	set_same_column_width(true)
	set_allow_rmb_select(true)
	set_process(false)
	set_process_input(true)
	pass # Replace with function body.
	
func load_data() -> void:
	#print(playerData.empty())
	if  GLOBAL.load_game == \"new_game\" :
		inventory = {\"id\": str(0), \"amount\": 0}
	else:
		inventory = get_parent().get_parent().get_parent().foot_inventory
		print(\"weapon inventory\")
	if inventory != {\"id\": \"0\", \"amount\": 0}:
		print(get_item_metadata(inventory[0][\"damage\"]))

		
func _physics_process(delta):

	if get_parent().get_parent().get_parent().get_parent().foot_inventory == null and load_slot == false:
		inventory = {\"id\": str(0), \"amount\": 0}
		load_items()
	elif get_parent().get_parent().get_parent().get_parent().foot_inventory != null and load_slot == false:
		inventory = get_parent().get_parent().get_parent().get_parent().foot_inventory
		load_items()
		load_slot = true
#	if inventory != null:
#		var damage = (get_item_metadata(0))
#		if damage[\"type\"] == \"foot\":
#			get_parent().get_parent().get_parent().get_parent().str_foot = damage[\"str\"]
#			get_parent().get_parent().get_parent().get_parent().agi_foot = damage[\"agi\"]
#			get_parent().get_parent().get_parent().get_parent().hp_foot = damage[\"hp\"]
#		if damage[\"type\"] == \"null\":
#
#			get_parent().get_parent().get_parent().get_parent().str_foot = 0
#			get_parent().get_parent().get_parent().get_parent().agi_foot = 0
#			get_parent().get_parent().get_parent().get_parent().hp_foot = 0
func add_item_chest(id,amount):
	var dict:Dictionary = {\"inventory\":{}}
	inventory = {\"id\": id, \"amount\": amount}
	#Global_DataParser.write_data(url_PlayerData, dict)
	load_items()
	pass # Replace with function body.
	
func load_item_chest(inven):
	inventory = inven
	load_items()
	pass # Replace with function body.

func _input(event) -> void:
#	if (!isDraggingItem):
#		if event.is_action_pressed(\"key_shift\"):
#			isAwaitingSplit = true
#		if event.is_action_released(\"key_shift\"):
#			isAwaitingSplit = false

	if (event is InputEventMouseButton):
		if (!isAwaitingSplit):
			if (event.is_action_pressed(\"mouse_leftbtn\")):
				mouseButtonReleased = false
				initial_mousePos = get_viewport().get_mouse_position()
			if (event.is_action_released(\"mouse_leftbtn\")):
				pass
#				move_merge_item()
#				end_drag_item()
#		else:
#			if (event.is_action_pressed(\"mouse_rightbtn\")):
#				if (activeItemSlot >= 0):
#					begin_split_item()
	if (event is InputEventMouseMotion):
		if (cursor_insideItemList):
			
			activeItemSlot = get_item_at_position(get_local_mouse_position(),true)
			if (activeItemSlot >= 0):
				select(activeItemSlot, true)
				if (isDraggingItem or mouseButtonReleased):
					
					return
				if (!is_item_selectable(activeItemSlot)):
					pass
#					end_drag_item()
				if (initial_mousePos.distance_to(get_viewport().get_mouse_position()) > 0.0):
					pass
#					begin_drag_item(activeItemSlot)
		else:
			activeItemSlot = -1

	
func load_items():
	clear()
	add_item(\"\", null, false)
	update_slot(0)


func update_slot(slot:int) -> void:
	if (slot < 0):
		return
	#print(Global_Player.inventory)
	var inventoryItem:Dictionary = inventory
	var itemMetaData = Global_ItemDatabase.get_item(str(inventoryItem[\"id\"])).duplicate()
	var icon
	if itemMetaData[\"id\"] == \"0\":
		icon = empty_slot
	else:
		icon = ResourceLoader.load(itemMetaData[\"icon\"])
	if itemMetaData[\"type\"] == \"foot\":
		get_parent().get_parent().get_parent().get_parent().str_foot = itemMetaData[\"str\"]
		get_parent().get_parent().get_parent().get_parent().agi_foot = itemMetaData[\"agi\"]
		get_parent().get_parent().get_parent().get_parent().hp_foot = itemMetaData[\"hp\"]
	if itemMetaData[\"type\"] == \"null\":
		get_parent().get_parent().get_parent().get_parent().str_foot = 0
		get_parent().get_parent().get_parent().get_parent().agi_foot = 0
		get_parent().get_parent().get_parent().get_parent().hp_foot = 0
	var amount = int(inventoryItem[\"amount\"])

	itemMetaData[\"amount\"] = amount
	if (!itemMetaData[\"stackable\"]):
		amount = \" \"
	set_item_text(slot, String(amount))
	set_item_icon(slot, icon)
	set_item_selectable(slot, int(inventoryItem[\"id\"]) > 0)
	set_item_metadata(slot, itemMetaData)
	set_item_tooltip(slot, itemMetaData[\"name\"])
	set_item_tooltip_enabled(slot, int(inventoryItem[\"id\"]) > 0)

func inventory_getEmptySlot() -> int:
	if inventory[\"id\"] == \"0\": 
		
		return 0
	print (\"Inventory is full!\")
	return -1



func inventory_addItem(itemId:int) -> int:
	var itemData:Dictionary = Global_ItemDatabase.get_item(str(itemId))
	if (itemData.empty()): 
		return -1
	if (int(itemData[\"stack_limit\"]) <= 1):
		var slot = inventory_getEmptySlot()
		
		if (slot < 0): 
			
			return -1
		
		inventory = {\"id\": String(itemId), \"amount\": 1}
		
		return 0
		
	


	var slot = inventory_getEmptySlot()
	if (slot < 0): 
		return -1
	inventory = {\"id\": String(itemId), \"amount\": 1}
	return slot"

[sub_resource type="StyleBoxEmpty" id=26]

[sub_resource type="GDScript" id=27]
script/source = "extends Panel

# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"

# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.

func _on_weapon_item_rmb_selected(index, at_position):


	if ($feet.isDraggingItem):
		return
	if ($feet.isAwaitingSplit):
		return

	$feet.dropItemSlot = index
	var itemData:Dictionary = $feet.get_item_metadata(index)
	if (int(itemData[\"id\"])) < 1: return
	var strItemInfo:String = \"\"

	#$WindowDialog_ItemMenu.set_position(get_viewport().get_mouse_position())
	$WindowDialog_ItemMenu.set_title(tr(str(itemData[\"name\"])))
	$WindowDialog_ItemMenu/ItemMenu_TextureFrame_Icon.set_texture($feet.get_item_icon(index))

	strItemInfo = tr(\"NAME_ITEM\") +\": [color=#00aedb] \" + tr(str(itemData[\"name\"])) + \"[/color]\\n\"
	if itemData[\"type\"] == \"weapon\":
		strItemInfo = strItemInfo + tr(\"DAMAGE_ITEM_TEXT\") + \": [color=#b3cde0]\" + tr(str(itemData[\"damage\"])) + \"[/color]\\n\"
	if itemData[\"str\"] > 0:
		strItemInfo = strItemInfo + tr(\"STR_ITEM_TEXT\") + \": [color=#b3cde0]\" + tr(str(itemData[\"str\"])) + \"[/color]\\n\"
	if itemData[\"agi\"] > 0:
		strItemInfo = strItemInfo + tr(\"AGI_ITEM_TEXT\") + \": [color=#b3cde0]\" + tr(str(itemData[\"agi\"])) + \"[/color]\\n\"
	if itemData[\"hp\"] > 0:
		strItemInfo = strItemInfo + tr(\"HP_ITEM_TEXT\") + \": [color=#b3cde0]\" + tr(str(itemData[\"hp\"])) + \"[/color]\\n\"
	strItemInfo = strItemInfo + \"\\n [color=#b3cde0]\" + tr(str(itemData[\"description\"])) + \"[/color]\"

	$WindowDialog_ItemMenu/ItemMenu_RichTextLabel_ItemInfo.set_bbcode(strItemInfo)
	if itemData[\"quest\"] == true:
		$WindowDialog_ItemMenu/ItemMenu_Button_DropItem.hide()
	elif itemData[\"quest\"] == false:
		$WindowDialog_ItemMenu/ItemMenu_Button_DropItem.show()
		$WindowDialog_ItemMenu/ItemMenu_Button_DropItem.set_text(tr(\"UNEQUIP_BUTTON\"))
	$feet.activeItemSlot = index
	$WindowDialog_ItemMenu.popup()
#	if itemData[\"equip\"] == true:
#		$WindowDialog_ItemMenu/equip_button.show()
#	elif itemData[\"equip\"] != false:
#		$WindowDialog_ItemMenu/equip_button.hide()

func _on_ItemMenu_Button_DropItem_pressed():
	var player = get_tree().get_nodes_in_group(\"player\")

	if player[0].get_node(\"inventary/inventory/bag1\"):
		player[0].get_node(\"inventary/inventory/bag1\").update_slot(Global_Player.inventory_addItem(int($feet.get_item_metadata(0)[\"id\"])))
		if player[0].get_node(\"inventary/inventory/bag1\").full__inventory == false:
			var newAmount = inventory_removeItem(0)
			if (newAmount < 1):
				$WindowDialog_ItemMenu.hide()
			else:
				$WindowDialog_ItemMenu/ItemMenu_Button_DropItem.set_text(\"(\" + String(newAmount) + \") \" +tr(\"COLLECT_BUTTON\"))
			
			$feet.update_slot(0)
			$WindowDialog_ItemMenu/Full.hide()
		else:
			print(\"Full Inventory\")
			$WindowDialog_ItemMenu/Full.show()
			return

func inventory_removeItem(slot) -> int:
	var newAmount = $feet.inventory[\"amount\"] - 1
	if (newAmount < 1):
		inventory_updateItem(slot, 0, 0)

		return 0
	$feet.inventory[\"amount\"] = newAmount
	return newAmount

func inventory_updateItem(slot:int, new_id:int, new_amount:int) -> void:
	if (slot < 0):
		return
	if (new_amount < 0):
		return
	if (Global_ItemDatabase.get_item(str(new_id)).empty()):
		return
	$feet.inventory = {\"id\": str(new_id), \"amount\": int(new_amount)}







func _on_WindowDialog_ItemMenu_popup_hide():
	$WindowDialog_ItemMenu/Full.hide()
	pass # Replace with function body.
"

[sub_resource type="StyleBoxEmpty" id=28]

[sub_resource type="GDScript" id=29]
script/source = "extends ItemList

var empty_slot = ResourceLoader.load(\"res://player/inventory/empty_slot.png\")
var max_slots = 1
var arrow_count_random
var inventory 

var activeItemSlot:int = -1
var dropItemSlot:int = -1

onready var isDraggingItem:bool = false
onready var mouseButtonReleased:bool = true
var draggedItemSlot:int = -1
onready var initial_mousePos:Vector2 = Vector2()
onready var cursor_insideItemList:bool = false

var isAwaitingSplit:bool = false
var splitItemSlot:int = -1
var load_slot = false
# Called when the node enters the scene tree for the first time.
func _ready():
	set_max_columns(1)
	set_fixed_icon_size(Vector2(32,32))
	set_icon_mode(ICON_MODE_TOP)
	set_select_mode(SELECT_SINGLE)
	set_same_column_width(true)
	set_allow_rmb_select(true)
	set_process(false)
	set_process_input(true)
	inventory = {\"amount\": 0,\"id\": 0}
	load_items()
	

func load_items():
	clear()
	add_item(\"\", null, false)
	update_slot(0)


func update_slot(slot:int) -> void:
	if (slot < 0):
		return
	#print(Global_Player.inventory)
	var inventoryItem:Dictionary = inventory
	var itemMetaData = Global_ItemDatabase.get_item(str(inventoryItem[\"id\"])).duplicate()
	var icon = ResourceLoader.load(\"res://player/UI sprite/Player_info/empty_equip_slot.png\")
	var amount = int(inventoryItem[\"amount\"])

	itemMetaData[\"amount\"] = amount
	if (!itemMetaData[\"stackable\"]):
		amount = \" \"
	set_item_text(slot, String(amount))
	set_item_icon(slot, icon)
	set_item_selectable(slot, int(inventoryItem[\"id\"]) > 0)
	set_item_metadata(slot, itemMetaData)
	set_item_tooltip(slot, itemMetaData[\"name\"])
	set_item_tooltip_enabled(slot, int(inventoryItem[\"id\"]) > 0)

"

[sub_resource type="GDScript" id=30]
script/source = "extends ItemList

var empty_slot = ResourceLoader.load(\"res://player/UI sprite/Player_info/empty_feet_equip_slot.png\")
var max_slots = 1
var arrow_count_random
var inventory 

var activeItemSlot:int = -1
var dropItemSlot:int = -1

onready var isDraggingItem:bool = false
onready var mouseButtonReleased:bool = true
var draggedItemSlot:int = -1
onready var initial_mousePos:Vector2 = Vector2()
onready var cursor_insideItemList:bool = false

var isAwaitingSplit:bool = false
var splitItemSlot:int = -1
var load_slot = false
# Called when the node enters the scene tree for the first time.
func _ready():
	set_max_columns(1)
	set_fixed_icon_size(Vector2(32,32))
	set_icon_mode(ICON_MODE_TOP)
	set_select_mode(SELECT_SINGLE)
	set_same_column_width(true)
	set_allow_rmb_select(true)
	set_process(false)
	set_process_input(true)
	pass # Replace with function body.
	
func load_data() -> void:
	#print(playerData.empty())
	if  GLOBAL.load_game == \"new_game\" :
		inventory = {\"id\": str(0), \"amount\": 0}
	else:
		inventory = get_parent().get_parent().get_parent().feet_inventory
		print(\"weapon inventory\")
	if inventory != {\"id\": \"0\", \"amount\": 0}:
		print(get_item_metadata(inventory[0][\"damage\"]))

		
func _physics_process(delta):

	if get_parent().get_parent().get_parent().get_parent().feet_inventory == null and load_slot == false:
		inventory = {\"id\": str(0), \"amount\": 0}
		load_items()
	elif get_parent().get_parent().get_parent().get_parent().feet_inventory != null and load_slot == false:
		inventory = get_parent().get_parent().get_parent().get_parent().feet_inventory
		load_items()
		load_slot = true
#	if inventory != null:
#		var damage = (get_item_metadata(0))
#		if damage[\"type\"] == \"feet\":
#			get_parent().get_parent().get_parent().get_parent().str_feet = damage[\"str\"]
#			get_parent().get_parent().get_parent().get_parent().agi_feet = damage[\"agi\"]
#			get_parent().get_parent().get_parent().get_parent().hp_feet = damage[\"hp\"]
#		elif damage[\"type\"] == \"null\":
#
#			get_parent().get_parent().get_parent().get_parent().str_feet = 0
#			get_parent().get_parent().get_parent().get_parent().agi_feet = 0
#			get_parent().get_parent().get_parent().get_parent().hp_feet = 0
func add_item_chest(id,amount):
	var dict:Dictionary = {\"inventory\":{}}
	inventory = {\"id\": id, \"amount\": amount}
	#Global_DataParser.write_data(url_PlayerData, dict)
	load_items()
	pass # Replace with function body.
	
func load_item_chest(inven):
	inventory = inven
	load_items()
	pass # Replace with function body.

func _input(event) -> void:
#	if (!isDraggingItem):
#		if event.is_action_pressed(\"key_shift\"):
#			isAwaitingSplit = true
#		if event.is_action_released(\"key_shift\"):
#			isAwaitingSplit = false

	if (event is InputEventMouseButton):
		if (!isAwaitingSplit):
			if (event.is_action_pressed(\"mouse_leftbtn\")):
				mouseButtonReleased = false
				initial_mousePos = get_viewport().get_mouse_position()
			if (event.is_action_released(\"mouse_leftbtn\")):
				pass
#				move_merge_item()
#				end_drag_item()
#		else:
#			if (event.is_action_pressed(\"mouse_rightbtn\")):
#				if (activeItemSlot >= 0):
#					begin_split_item()
	if (event is InputEventMouseMotion):
		if (cursor_insideItemList):
			
			activeItemSlot = get_item_at_position(get_local_mouse_position(),true)
			if (activeItemSlot >= 0):
				select(activeItemSlot, true)
				if (isDraggingItem or mouseButtonReleased):
					
					return
				if (!is_item_selectable(activeItemSlot)):
					pass
#					end_drag_item()
				if (initial_mousePos.distance_to(get_viewport().get_mouse_position()) > 0.0):
					pass
#					begin_drag_item(activeItemSlot)
		else:
			activeItemSlot = -1

	
func load_items():
	clear()
	add_item(\"\", null, false)
	update_slot(0)


func update_slot(slot:int) -> void:
	if (slot < 0):
		return
	#print(Global_Player.inventory)
	var inventoryItem:Dictionary = inventory
	var itemMetaData = Global_ItemDatabase.get_item(str(inventoryItem[\"id\"])).duplicate()
	var icon
	if itemMetaData[\"id\"] == \"0\":
		icon = empty_slot
	else:
		icon = ResourceLoader.load(itemMetaData[\"icon\"])
	if itemMetaData[\"type\"] == \"feet\":
		get_parent().get_parent().get_parent().get_parent().str_feet = itemMetaData[\"str\"]
		get_parent().get_parent().get_parent().get_parent().agi_feet = itemMetaData[\"agi\"]
		get_parent().get_parent().get_parent().get_parent().hp_feet = itemMetaData[\"hp\"]
	elif itemMetaData[\"type\"] == \"null\":
		get_parent().get_parent().get_parent().get_parent().str_feet = 0
		get_parent().get_parent().get_parent().get_parent().agi_feet = 0
		get_parent().get_parent().get_parent().get_parent().hp_feet = 0
	var amount = int(inventoryItem[\"amount\"])

	itemMetaData[\"amount\"] = amount
	if (!itemMetaData[\"stackable\"]):
		amount = \" \"
	set_item_text(slot, String(amount))
	set_item_icon(slot, icon)
	set_item_selectable(slot, int(inventoryItem[\"id\"]) > 0)
	set_item_metadata(slot, itemMetaData)
	set_item_tooltip(slot, itemMetaData[\"name\"])
	set_item_tooltip_enabled(slot, int(inventoryItem[\"id\"]) > 0)

func inventory_getEmptySlot() -> int:
	if inventory[\"id\"] == \"0\": 
		
		return 0
	print (\"Inventory is full!\")
	return -1



func inventory_addItem(itemId:int) -> int:
	var itemData:Dictionary = Global_ItemDatabase.get_item(str(itemId))
	if (itemData.empty()): 
		return -1
	if (int(itemData[\"stack_limit\"]) <= 1):
		var slot = inventory_getEmptySlot()
		
		if (slot < 0): 
			
			return -1
		
		inventory = {\"id\": String(itemId), \"amount\": 1}
		
		return 0
		
	


	var slot = inventory_getEmptySlot()
	if (slot < 0): 
		return -1
	inventory = {\"id\": String(itemId), \"amount\": 1}
	return slot"

[sub_resource type="StyleBoxEmpty" id=31]

[sub_resource type="GDScript" id=32]
script/source = "extends Panel

# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"

# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.

func _on_weapon_item_rmb_selected(index, at_position):


	if ($ring.isDraggingItem):
		return
	if ($ring.isAwaitingSplit):
		return

	$ring.dropItemSlot = index
	var itemData:Dictionary = $ring.get_item_metadata(index)
	if (int(itemData[\"id\"])) < 1: return
	var strItemInfo:String = \"\"

	#$WindowDialog_ItemMenu.set_position(get_viewport().get_mouse_position())
	$WindowDialog_ItemMenu.set_title(tr(str(itemData[\"name\"])))
	$WindowDialog_ItemMenu/ItemMenu_TextureFrame_Icon.set_texture($ring.get_item_icon(index))

	strItemInfo = tr(\"NAME_ITEM\") +\": [color=#00aedb] \" + tr(str(itemData[\"name\"])) + \"[/color]\\n\"
	if itemData[\"type\"] == \"weapon\":
		strItemInfo = strItemInfo + tr(\"DAMAGE_ITEM_TEXT\") + \": [color=#b3cde0]\" + tr(str(itemData[\"damage\"])) + \"[/color]\\n\"
	if itemData[\"str\"] > 0:
		strItemInfo = strItemInfo + tr(\"STR_ITEM_TEXT\") + \": [color=#b3cde0]\" + tr(str(itemData[\"str\"])) + \"[/color]\\n\"
	if itemData[\"agi\"] > 0:
		strItemInfo = strItemInfo + tr(\"AGI_ITEM_TEXT\") + \": [color=#b3cde0]\" + tr(str(itemData[\"agi\"])) + \"[/color]\\n\"
	if itemData[\"hp\"] > 0:
		strItemInfo = strItemInfo + tr(\"HP_ITEM_TEXT\") + \": [color=#b3cde0]\" + tr(str(itemData[\"hp\"])) + \"[/color]\\n\"
	strItemInfo = strItemInfo + \"\\n [color=#b3cde0]\" + tr(str(itemData[\"description\"])) + \"[/color]\"

	$WindowDialog_ItemMenu/ItemMenu_RichTextLabel_ItemInfo.set_bbcode(strItemInfo)
	if itemData[\"quest\"] == true:
		$WindowDialog_ItemMenu/ItemMenu_Button_DropItem.hide()
	elif itemData[\"quest\"] == false:
		$WindowDialog_ItemMenu/ItemMenu_Button_DropItem.show()
		$WindowDialog_ItemMenu/ItemMenu_Button_DropItem.set_text(tr(\"UNEQUIP_BUTTON\"))
	$ring.activeItemSlot = index
	$WindowDialog_ItemMenu.popup()
#	if itemData[\"equip\"] == true:
#		$WindowDialog_ItemMenu/equip_button.show()
#	elif itemData[\"equip\"] != false:
#		$WindowDialog_ItemMenu/equip_button.hide()

func _on_ItemMenu_Button_DropItem_pressed():
	var player = get_tree().get_nodes_in_group(\"player\")

	if player[0].get_node(\"inventary/inventory/bag1\"):
		player[0].get_node(\"inventary/inventory/bag1\").update_slot(Global_Player.inventory_addItem(int($ring.get_item_metadata(0)[\"id\"])))
		if player[0].get_node(\"inventary/inventory/bag1\").full__inventory == false:
			var newAmount = inventory_removeItem(0)
			if (newAmount < 1):
				$WindowDialog_ItemMenu.hide()
			else:
				$WindowDialog_ItemMenu/ItemMenu_Button_DropItem.set_text(\"(\" + String(newAmount) + \") \" +tr(\"COLLECT_BUTTON\"))
			
			$ring.update_slot(0)
			$WindowDialog_ItemMenu/Full.hide()
		else:
			print(\"Full Inventory\")
			$WindowDialog_ItemMenu/Full.show()
			return

func inventory_removeItem(slot) -> int:
	var newAmount = $ring.inventory[\"amount\"] - 1
	if (newAmount < 1):
		inventory_updateItem(slot, 0, 0)

		return 0
	$ring.inventory[\"amount\"] = newAmount
	return newAmount

func inventory_updateItem(slot:int, new_id:int, new_amount:int) -> void:
	if (slot < 0):
		return
	if (new_amount < 0):
		return
	if (Global_ItemDatabase.get_item(str(new_id)).empty()):
		return
	$ring.inventory = {\"id\": str(new_id), \"amount\": int(new_amount)}







func _on_WindowDialog_ItemMenu_popup_hide():
	$WindowDialog_ItemMenu/Full.hide()
	pass # Replace with function body.
"

[sub_resource type="StyleBoxEmpty" id=33]

[sub_resource type="GDScript" id=34]
script/source = "extends ItemList

var empty_slot = ResourceLoader.load(\"res://player/inventory/empty_slot.png\")
var max_slots = 1
var arrow_count_random
var inventory 

var activeItemSlot:int = -1
var dropItemSlot:int = -1

onready var isDraggingItem:bool = false
onready var mouseButtonReleased:bool = true
var draggedItemSlot:int = -1
onready var initial_mousePos:Vector2 = Vector2()
onready var cursor_insideItemList:bool = false

var isAwaitingSplit:bool = false
var splitItemSlot:int = -1
var load_slot = false
# Called when the node enters the scene tree for the first time.
func _ready():
	set_max_columns(1)
	set_fixed_icon_size(Vector2(32,32))
	set_icon_mode(ICON_MODE_TOP)
	set_select_mode(SELECT_SINGLE)
	set_same_column_width(true)
	set_allow_rmb_select(true)
	set_process(false)
	set_process_input(true)
	inventory = {\"amount\": 0,\"id\": 0}
	load_items()
	

func load_items():
	clear()
	add_item(\"\", null, false)
	update_slot(0)


func update_slot(slot:int) -> void:
	if (slot < 0):
		return
	#print(Global_Player.inventory)
	var inventoryItem:Dictionary = inventory
	var itemMetaData = Global_ItemDatabase.get_item(str(inventoryItem[\"id\"])).duplicate()
	var icon = ResourceLoader.load(\"res://player/UI sprite/Player_info/empty_equip_slot.png\")
	var amount = int(inventoryItem[\"amount\"])

	itemMetaData[\"amount\"] = amount
	if (!itemMetaData[\"stackable\"]):
		amount = \" \"
	set_item_text(slot, String(amount))
	set_item_icon(slot, icon)
	set_item_selectable(slot, int(inventoryItem[\"id\"]) > 0)
	set_item_metadata(slot, itemMetaData)
	set_item_tooltip(slot, itemMetaData[\"name\"])
	set_item_tooltip_enabled(slot, int(inventoryItem[\"id\"]) > 0)

"

[sub_resource type="GDScript" id=35]
script/source = "extends ItemList

var empty_slot = ResourceLoader.load(\"res://player/UI sprite/Player_info/empty_ring_equip_slot.png\")
var max_slots = 1
var arrow_count_random
var inventory 

var activeItemSlot:int = -1
var dropItemSlot:int = -1

onready var isDraggingItem:bool = false
onready var mouseButtonReleased:bool = true
var draggedItemSlot:int = -1
onready var initial_mousePos:Vector2 = Vector2()
onready var cursor_insideItemList:bool = false

var isAwaitingSplit:bool = false
var splitItemSlot:int = -1
var load_slot = false
# Called when the node enters the scene tree for the first time.
func _ready():
	set_max_columns(1)
	set_fixed_icon_size(Vector2(32,32))
	set_icon_mode(ICON_MODE_TOP)
	set_select_mode(SELECT_SINGLE)
	set_same_column_width(true)
	set_allow_rmb_select(true)
	set_process(false)
	set_process_input(true)
	pass # Replace with function body.
	
func load_data() -> void:
	#print(playerData.empty())
	if  GLOBAL.load_game == \"new_game\" :
		inventory = {\"id\": str(0), \"amount\": 0}
	else:
		inventory = get_parent().get_parent().get_parent().ring_inventory
		print(\"weapon inventory\")
	if inventory != {\"id\": \"0\", \"amount\": 0}:
		print(get_item_metadata(inventory[0][\"damage\"]))

		
func _physics_process(delta):
	
	if get_parent().get_parent().get_parent().get_parent().ring_inventory == null and load_slot == false:
		inventory = {\"id\": str(0), \"amount\": 0}
		load_items()
	elif get_parent().get_parent().get_parent().get_parent().ring_inventory != null and load_slot == false:
		inventory = get_parent().get_parent().get_parent().get_parent().ring_inventory
		load_items()
		load_slot = true
#	if inventory != null:
#		var damage = (get_item_metadata(0))
#		if damage[\"type\"] == \"ring\":
#			get_parent().get_parent().get_parent().get_parent().str_ring = damage[\"str\"]
#			get_parent().get_parent().get_parent().get_parent().agi_ring = damage[\"agi\"]
#			get_parent().get_parent().get_parent().get_parent().hp_ring = damage[\"hp\"]
#		elif damage[\"type\"] == \"null\":
#
#			get_parent().get_parent().get_parent().get_parent().str_ring = 0
#			get_parent().get_parent().get_parent().get_parent().agi_ring = 0
#			get_parent().get_parent().get_parent().get_parent().hp_ring = 0
func add_item_chest(id,amount):
	var dict:Dictionary = {\"inventory\":{}}
	inventory = {\"id\": id, \"amount\": amount}
	#Global_DataParser.write_data(url_PlayerData, dict)
	load_items()
	pass # Replace with function body.
	
func load_item_chest(inven):
	inventory = inven
	load_items()
	pass # Replace with function body.

func _input(event) -> void:
#	if (!isDraggingItem):
#		if event.is_action_pressed(\"key_shift\"):
#			isAwaitingSplit = true
#		if event.is_action_released(\"key_shift\"):
#			isAwaitingSplit = false

	if (event is InputEventMouseButton):
		if (!isAwaitingSplit):
			if (event.is_action_pressed(\"mouse_leftbtn\")):
				mouseButtonReleased = false
				initial_mousePos = get_viewport().get_mouse_position()
			if (event.is_action_released(\"mouse_leftbtn\")):
				pass
#				move_merge_item()
#				end_drag_item()
#		else:
#			if (event.is_action_pressed(\"mouse_rightbtn\")):
#				if (activeItemSlot >= 0):
#					begin_split_item()
	if (event is InputEventMouseMotion):
		if (cursor_insideItemList):
			
			activeItemSlot = get_item_at_position(get_local_mouse_position(),true)
			if (activeItemSlot >= 0):
				select(activeItemSlot, true)
				if (isDraggingItem or mouseButtonReleased):
					
					return
				if (!is_item_selectable(activeItemSlot)):
					pass
#					end_drag_item()
				if (initial_mousePos.distance_to(get_viewport().get_mouse_position()) > 0.0):
					pass
#					begin_drag_item(activeItemSlot)
		else:
			activeItemSlot = -1

	
func load_items():
	clear()
	add_item(\"\", null, false)
	update_slot(0)


func update_slot(slot:int) -> void:
	if (slot < 0):
		return
	#print(Global_Player.inventory)
	var inventoryItem:Dictionary = inventory
	var itemMetaData = Global_ItemDatabase.get_item(str(inventoryItem[\"id\"])).duplicate()
	var icon
	if itemMetaData[\"id\"] == \"0\":
		icon = empty_slot
	else:
		icon = ResourceLoader.load(itemMetaData[\"icon\"])
		
	if itemMetaData[\"type\"] == \"ring\":
		get_parent().get_parent().get_parent().get_parent().str_ring = itemMetaData[\"str\"]
		get_parent().get_parent().get_parent().get_parent().agi_ring = itemMetaData[\"agi\"]
		get_parent().get_parent().get_parent().get_parent().hp_ring = itemMetaData[\"hp\"]
	elif itemMetaData[\"type\"] == \"null\":
		get_parent().get_parent().get_parent().get_parent().str_ring = 0
		get_parent().get_parent().get_parent().get_parent().agi_ring = 0
		get_parent().get_parent().get_parent().get_parent().hp_ring = 0
	var amount = int(inventoryItem[\"amount\"])

	itemMetaData[\"amount\"] = amount
	if (!itemMetaData[\"stackable\"]):
		amount = \" \"
	set_item_text(slot, String(amount))
	set_item_icon(slot, icon)
	set_item_selectable(slot, int(inventoryItem[\"id\"]) > 0)
	set_item_metadata(slot, itemMetaData)
	set_item_tooltip(slot, itemMetaData[\"name\"])
	set_item_tooltip_enabled(slot, int(inventoryItem[\"id\"]) > 0)

func inventory_getEmptySlot() -> int:
	if inventory[\"id\"] == \"0\": 
		
		return 0
	print (\"Inventory is full!\")
	return -1



func inventory_addItem(itemId:int) -> int:
	var itemData:Dictionary = Global_ItemDatabase.get_item(str(itemId))
	if (itemData.empty()): 
		return -1
	if (int(itemData[\"stack_limit\"]) <= 1):
		var slot = inventory_getEmptySlot()
		
		if (slot < 0): 
			
			return -1
		
		inventory = {\"id\": String(itemId), \"amount\": 1}
		
		return 0
		
	


	var slot = inventory_getEmptySlot()
	if (slot < 0): 
		return -1
	inventory = {\"id\": String(itemId), \"amount\": 1}
	return slot"

[sub_resource type="StyleBoxEmpty" id=36]

[sub_resource type="GDScript" id=37]
script/source = "extends Panel

# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"

# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.

func _on_weapon_item_rmb_selected(index, at_position):


	if ($neck.isDraggingItem):
		return
	if ($neck.isAwaitingSplit):
		return

	$neck.dropItemSlot = index
	var itemData:Dictionary = $neck.get_item_metadata(index)
	if (int(itemData[\"id\"])) < 1: return
	var strItemInfo:String = \"\"

	#$WindowDialog_ItemMenu.set_position(get_viewport().get_mouse_position())
	$WindowDialog_ItemMenu.set_title(tr(str(itemData[\"name\"])))
	$WindowDialog_ItemMenu/ItemMenu_TextureFrame_Icon.set_texture($neck.get_item_icon(index))

	strItemInfo = tr(\"NAME_ITEM\") +\": [color=#00aedb] \" + tr(str(itemData[\"name\"])) + \"[/color]\\n\"
	if itemData[\"type\"] == \"weapon\":
		strItemInfo = strItemInfo + tr(\"DAMAGE_ITEM_TEXT\") + \": [color=#b3cde0]\" + tr(str(itemData[\"damage\"])) + \"[/color]\\n\"
	if itemData[\"str\"] > 0:
		strItemInfo = strItemInfo + tr(\"STR_ITEM_TEXT\") + \": [color=#b3cde0]\" + tr(str(itemData[\"str\"])) + \"[/color]\\n\"
	if itemData[\"agi\"] > 0:
		strItemInfo = strItemInfo + tr(\"AGI_ITEM_TEXT\") + \": [color=#b3cde0]\" + tr(str(itemData[\"agi\"])) + \"[/color]\\n\"
	if itemData[\"hp\"] > 0:
		strItemInfo = strItemInfo + tr(\"HP_ITEM_TEXT\") + \": [color=#b3cde0]\" + tr(str(itemData[\"hp\"])) + \"[/color]\\n\"
	strItemInfo = strItemInfo + \"\\n [color=#b3cde0]\" + tr(str(itemData[\"description\"])) + \"[/color]\"

	$WindowDialog_ItemMenu/ItemMenu_RichTextLabel_ItemInfo.set_bbcode(strItemInfo)
	if itemData[\"quest\"] == true:
		$WindowDialog_ItemMenu/ItemMenu_Button_DropItem.hide()
	elif itemData[\"quest\"] == false:
		$WindowDialog_ItemMenu/ItemMenu_Button_DropItem.show()
		$WindowDialog_ItemMenu/ItemMenu_Button_DropItem.set_text(tr(\"UNEQUIP_BUTTON\"))
	$neck.activeItemSlot = index
	$WindowDialog_ItemMenu.popup()
#	if itemData[\"equip\"] == true:
#		$WindowDialog_ItemMenu/equip_button.show()
#	elif itemData[\"equip\"] != false:
#		$WindowDialog_ItemMenu/equip_button.hide()

func _on_ItemMenu_Button_DropItem_pressed():
	var player = get_tree().get_nodes_in_group(\"player\")

	if player[0].get_node(\"inventary/inventory/bag1\"):
		player[0].get_node(\"inventary/inventory/bag1\").update_slot(Global_Player.inventory_addItem(int($neck.get_item_metadata(0)[\"id\"])))
		if player[0].get_node(\"inventary/inventory/bag1\").full__inventory == false:
			var newAmount = inventory_removeItem(0)
			if (newAmount < 1):
				$WindowDialog_ItemMenu.hide()
			else:
				$WindowDialog_ItemMenu/ItemMenu_Button_DropItem.set_text(\"(\" + String(newAmount) + \") \" +tr(\"COLLECT_BUTTON\"))
			
			$neck.update_slot(0)
			$WindowDialog_ItemMenu/Full.hide()
		else:
			print(\"Full Inventory\")
			$WindowDialog_ItemMenu/Full.show()
			return

func inventory_removeItem(slot) -> int:
	var newAmount = $neck.inventory[\"amount\"] - 1
	if (newAmount < 1):
		inventory_updateItem(slot, 0, 0)

		return 0
	$neck.inventory[\"amount\"] = newAmount
	return newAmount

func inventory_updateItem(slot:int, new_id:int, new_amount:int) -> void:
	if (slot < 0):
		return
	if (new_amount < 0):
		return
	if (Global_ItemDatabase.get_item(str(new_id)).empty()):
		return
	$neck.inventory = {\"id\": str(new_id), \"amount\": int(new_amount)}







func _on_WindowDialog_ItemMenu_popup_hide():
	$WindowDialog_ItemMenu/Full.hide()
	pass # Replace with function body.
"

[sub_resource type="StyleBoxEmpty" id=38]

[sub_resource type="GDScript" id=39]
script/source = "extends ItemList

var empty_slot = ResourceLoader.load(\"res://player/inventory/empty_slot.png\")
var max_slots = 1
var arrow_count_random
var inventory 

var activeItemSlot:int = -1
var dropItemSlot:int = -1

onready var isDraggingItem:bool = false
onready var mouseButtonReleased:bool = true
var draggedItemSlot:int = -1
onready var initial_mousePos:Vector2 = Vector2()
onready var cursor_insideItemList:bool = false

var isAwaitingSplit:bool = false
var splitItemSlot:int = -1
var load_slot = false
# Called when the node enters the scene tree for the first time.
func _ready():
	set_max_columns(1)
	set_fixed_icon_size(Vector2(32,32))
	set_icon_mode(ICON_MODE_TOP)
	set_select_mode(SELECT_SINGLE)
	set_same_column_width(true)
	set_allow_rmb_select(true)
	set_process(false)
	set_process_input(true)
	inventory = {\"amount\": 0,\"id\": 0}
	load_items()
	

func load_items():
	clear()
	add_item(\"\", null, false)
	update_slot(0)


func update_slot(slot:int) -> void:
	if (slot < 0):
		return
	#print(Global_Player.inventory)
	var inventoryItem:Dictionary = inventory
	var itemMetaData = Global_ItemDatabase.get_item(str(inventoryItem[\"id\"])).duplicate()
	var icon = ResourceLoader.load(\"res://player/UI sprite/Player_info/empty_equip_slot.png\")
	var amount = int(inventoryItem[\"amount\"])

	itemMetaData[\"amount\"] = amount
	if (!itemMetaData[\"stackable\"]):
		amount = \" \"
	set_item_text(slot, String(amount))
	set_item_icon(slot, icon)
	set_item_selectable(slot, int(inventoryItem[\"id\"]) > 0)
	set_item_metadata(slot, itemMetaData)
	set_item_tooltip(slot, itemMetaData[\"name\"])
	set_item_tooltip_enabled(slot, int(inventoryItem[\"id\"]) > 0)

"

[sub_resource type="GDScript" id=40]
script/source = "extends ItemList

var empty_slot = ResourceLoader.load(\"res://player/UI sprite/Player_info/empty_neck_equip_slot.png\")
var max_slots = 1
var arrow_count_random
var inventory 

var activeItemSlot:int = -1
var dropItemSlot:int = -1

onready var isDraggingItem:bool = false
onready var mouseButtonReleased:bool = true
var draggedItemSlot:int = -1
onready var initial_mousePos:Vector2 = Vector2()
onready var cursor_insideItemList:bool = false

var isAwaitingSplit:bool = false
var splitItemSlot:int = -1
var load_slot = false
# Called when the node enters the scene tree for the first time.
func _ready():
	set_max_columns(1)
	set_fixed_icon_size(Vector2(32,32))
	set_icon_mode(ICON_MODE_TOP)
	set_select_mode(SELECT_SINGLE)
	set_same_column_width(true)
	set_allow_rmb_select(true)
	set_process(false)
	set_process_input(true)
	pass # Replace with function body.
	
func load_data() -> void:
	#print(playerData.empty())
	if  GLOBAL.load_game == \"new_game\" :
		inventory = {\"id\": str(0), \"amount\": 0}
	else:
		inventory = get_parent().get_parent().get_parent().neck_inventory
		print(\"weapon inventory\")
	if inventory != {\"id\": \"0\", \"amount\": 0}:
		print(get_item_metadata(inventory[0][\"damage\"]))

		
func _physics_process(delta):
	
	if get_parent().get_parent().get_parent().get_parent().neck_inventory == null and load_slot == false:
		inventory = {\"id\": str(0), \"amount\": 0}
		load_items()
	elif get_parent().get_parent().get_parent().get_parent().neck_inventory != null and load_slot == false:
		inventory = get_parent().get_parent().get_parent().get_parent().neck_inventory
		load_items()
		load_slot = true
#	if inventory != null:
#		var damage = (get_item_metadata(0))
#		if damage[\"type\"] == \"neck\":
#			get_parent().get_parent().get_parent().get_parent().str_neck = damage[\"str\"]
#			get_parent().get_parent().get_parent().get_parent().agi_neck = damage[\"agi\"]
#			get_parent().get_parent().get_parent().get_parent().hp_neck = damage[\"hp\"]
#		elif damage[\"type\"] == \"null\":
#
#			get_parent().get_parent().get_parent().get_parent().str_neck = 0
#			get_parent().get_parent().get_parent().get_parent().agi_neck = 0
#			get_parent().get_parent().get_parent().get_parent().hp_neck = 0

func add_item_chest(id,amount):
	var dict:Dictionary = {\"inventory\":{}}
	inventory = {\"id\": id, \"amount\": amount}
	#Global_DataParser.write_data(url_PlayerData, dict)
	load_items()
	pass # Replace with function body.
	
func load_item_chest(inven):
	inventory = inven
	load_items()
	pass # Replace with function body.

func _input(event) -> void:
#	if (!isDraggingItem):
#		if event.is_action_pressed(\"key_shift\"):
#			isAwaitingSplit = true
#		if event.is_action_released(\"key_shift\"):
#			isAwaitingSplit = false

	if (event is InputEventMouseButton):
		if (!isAwaitingSplit):
			if (event.is_action_pressed(\"mouse_leftbtn\")):
				mouseButtonReleased = false
				initial_mousePos = get_viewport().get_mouse_position()
			if (event.is_action_released(\"mouse_leftbtn\")):
				pass
#				move_merge_item()
#				end_drag_item()
#		else:
#			if (event.is_action_pressed(\"mouse_rightbtn\")):
#				if (activeItemSlot >= 0):
#					begin_split_item()
	if (event is InputEventMouseMotion):
		if (cursor_insideItemList):
			
			activeItemSlot = get_item_at_position(get_local_mouse_position(),true)
			if (activeItemSlot >= 0):
				select(activeItemSlot, true)
				if (isDraggingItem or mouseButtonReleased):
					
					return
				if (!is_item_selectable(activeItemSlot)):
					pass
#					end_drag_item()
				if (initial_mousePos.distance_to(get_viewport().get_mouse_position()) > 0.0):
					pass
#					begin_drag_item(activeItemSlot)
		else:
			activeItemSlot = -1

	
func load_items():
	clear()
	add_item(\"\", null, false)
	update_slot(0)


func update_slot(slot:int) -> void:
	if (slot < 0):
		return
	#print(Global_Player.inventory)
	var inventoryItem:Dictionary = inventory
	var itemMetaData = Global_ItemDatabase.get_item(str(inventoryItem[\"id\"])).duplicate()
	var icon
	if itemMetaData[\"id\"] == \"0\":
		icon = empty_slot
	else:
		icon = ResourceLoader.load(itemMetaData[\"icon\"])
	if itemMetaData[\"type\"] == \"neck\":
		get_parent().get_parent().get_parent().get_parent().str_neck = itemMetaData[\"str\"]
		get_parent().get_parent().get_parent().get_parent().agi_neck = itemMetaData[\"agi\"]
		get_parent().get_parent().get_parent().get_parent().hp_neck = itemMetaData[\"hp\"]
	elif itemMetaData[\"type\"] == \"null\":
		get_parent().get_parent().get_parent().get_parent().str_neck = 0
		get_parent().get_parent().get_parent().get_parent().agi_neck = 0
		get_parent().get_parent().get_parent().get_parent().hp_neck = 0
	var amount = int(inventoryItem[\"amount\"])

	itemMetaData[\"amount\"] = amount
	if (!itemMetaData[\"stackable\"]):
		amount = \" \"
	set_item_text(slot, String(amount))
	set_item_icon(slot, icon)
	set_item_selectable(slot, int(inventoryItem[\"id\"]) > 0)
	set_item_metadata(slot, itemMetaData)
	set_item_tooltip(slot, itemMetaData[\"name\"])
	set_item_tooltip_enabled(slot, int(inventoryItem[\"id\"]) > 0)

func inventory_getEmptySlot() -> int:
	if inventory[\"id\"] == \"0\": 
		
		return 0
	print (\"Inventory is full!\")
	return -1



func inventory_addItem(itemId:int) -> int:
	var itemData:Dictionary = Global_ItemDatabase.get_item(str(itemId))
	if (itemData.empty()): 
		return -1
	if (int(itemData[\"stack_limit\"]) <= 1):
		var slot = inventory_getEmptySlot()
		
		if (slot < 0): 
			
			return -1
		
		inventory = {\"id\": String(itemId), \"amount\": 1}
		
		return 0
		
	


	var slot = inventory_getEmptySlot()
	if (slot < 0): 
		return -1
	inventory = {\"id\": String(itemId), \"amount\": 1}
	return slot"

[sub_resource type="StyleBoxTexture" id=41]
texture = ExtResource( 181 )
region_rect = Rect2( 0, 0, 220, 400 )

[sub_resource type="Theme" id=42]
TooltipLabel/colors/font_color = Color( 1, 1, 1, 1 )
TooltipLabel/colors/font_color_shadow = Color( 0, 0, 0, 0.1 )
TooltipLabel/constants/shadow_offset_x = 1
TooltipLabel/constants/shadow_offset_y = 1
TooltipLabel/fonts/font = null

[sub_resource type="Theme" id=43]
TooltipLabel/colors/font_color = Color( 1, 1, 1, 1 )
TooltipLabel/colors/font_color_shadow = Color( 0, 0, 0, 0.1 )
TooltipLabel/constants/shadow_offset_x = 1
TooltipLabel/constants/shadow_offset_y = 1
TooltipLabel/fonts/font = null

[sub_resource type="Theme" id=44]
TooltipLabel/colors/font_color = Color( 1, 1, 1, 1 )
TooltipLabel/colors/font_color_shadow = Color( 0, 0, 0, 0.1 )
TooltipLabel/constants/shadow_offset_x = 1
TooltipLabel/constants/shadow_offset_y = 1
TooltipLabel/fonts/font = null

[sub_resource type="StyleBoxTexture" id=45]
texture = ExtResource( 182 )
region_rect = Rect2( 0, 0, 20, 20 )

[sub_resource type="StyleBoxTexture" id=46]
texture = ExtResource( 182 )
region_rect = Rect2( 0, 0, 20, 20 )

[sub_resource type="StyleBoxTexture" id=47]
texture = ExtResource( 182 )
region_rect = Rect2( 0, 0, 20, 20 )

[sub_resource type="StyleBoxTexture" id=48]
texture = ExtResource( 182 )
region_rect = Rect2( 0, 0, 20, 20 )

[sub_resource type="StyleBoxTexture" id=49]
texture = ExtResource( 182 )
region_rect = Rect2( 0, 0, 20, 20 )

[sub_resource type="DynamicFont" id=50]
size = 14
use_filter = true
font_data = ExtResource( 183 )

[sub_resource type="StyleBoxTexture" id=51]
texture = ExtResource( 182 )
region_rect = Rect2( 0, 0, 20, 20 )

[sub_resource type="StyleBoxTexture" id=52]
texture = ExtResource( 182 )
region_rect = Rect2( 0, 0, 20, 20 )

[sub_resource type="StyleBoxTexture" id=53]
texture = ExtResource( 182 )
region_rect = Rect2( 0, 0, 20, 20 )

[sub_resource type="StyleBoxTexture" id=54]
texture = ExtResource( 182 )
region_rect = Rect2( 0, 0, 20, 20 )

[sub_resource type="StyleBoxTexture" id=55]
texture = ExtResource( 182 )
region_rect = Rect2( 0, 0, 20, 20 )

[sub_resource type="StyleBoxTexture" id=56]
texture = ExtResource( 182 )
region_rect = Rect2( 0, 0, 20, 20 )

[sub_resource type="StyleBoxTexture" id=57]
texture = ExtResource( 182 )
region_rect = Rect2( 0, 0, 20, 20 )

[sub_resource type="StyleBoxTexture" id=58]
texture = ExtResource( 182 )
region_rect = Rect2( 0, 0, 20, 20 )

[sub_resource type="StyleBoxTexture" id=59]
texture = ExtResource( 184 )
region_rect = Rect2( 0, 0, 36, 36 )

[sub_resource type="StyleBoxTexture" id=60]
texture = ExtResource( 184 )
region_rect = Rect2( 0, 0, 36, 36 )

[sub_resource type="StyleBoxTexture" id=61]
texture = ExtResource( 184 )
region_rect = Rect2( 0, 0, 36, 36 )

[sub_resource type="StyleBoxTexture" id=62]
texture = ExtResource( 184 )
region_rect = Rect2( 0, 0, 36, 36 )

[sub_resource type="StyleBoxTexture" id=63]
texture = ExtResource( 184 )
region_rect = Rect2( 0, 0, 36, 36 )

[sub_resource type="GDScript" id=64]
script/source = "extends CanvasLayer

# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"

# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.

# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	pass


func _on_Inv_button_pressed():
	if  get_parent().get_node(\"inventary/inventory\").visible == false:
		get_parent().get_node(\"inventary/inventory\").visible = true
	elif  get_parent().get_node(\"inventary/inventory\").visible == true:
		get_parent().get_node(\"inventary/inventory\").visible = false
	pass # Replace with function body.


func _on_Pinfo_button_pressed():
	if  get_parent().get_node(\"Player_info/Statistics\").visible == false:
		$Button_UI/Pinfo_button/AnimationPlayer.stop(true)
		$Button_UI/Pinfo_button.modulate = Color(1, 1, 1)
		get_parent().get_node(\"Player_info/Statistics\").visible = true
		get_parent().get_node(\"Player_info/equip_panel\").visible = true
	elif  get_parent().get_node(\"Player_info/Statistics\").visible == true:
		$Button_UI/Pinfo_button/AnimationPlayer.stop(true)
		$Button_UI/Pinfo_button.modulate = Color(1, 1, 1)
		get_parent().get_node(\"Player_info/Statistics\").visible = false
		get_parent().get_node(\"Player_info/equip_panel\").visible = false
	pass # Replace with function body.


func _on_settings_button_pressed():
	if get_parent().get_parent().get_node(\"/root/pause_menu\").get_node(\"Popup\").visible == false:
		get_parent().get_node(\"inventary/inventory\").hide()
		get_parent().get_node(\"Player_info/Statistics\").hide()
		get_parent().get_parent().get_node(\"/root/pause_menu\").get_node(\"Popup\").show()
		get_parent().get_parent().get_node(\"/root/pause_menu\").pause_menu = true
		get_parent().get_parent().get_node(\"/root/pause_menu\").get_node(\"music\").visible = true
		get_tree().paused = true

	pass # Replace with function body.


func _on_Inv_button_mouse_entered():
	get_parent().button = true
	pass # Replace with function body.


func _on_Inv_button_mouse_exited():
	get_parent().button = false
	pass # Replace with function body.


func _on_Pinfo_button_mouse_entered():
	get_parent().button = true
	pass # Replace with function body.


func _on_Pinfo_button_mouse_exited():
	get_parent().button = false
	pass # Replace with function body.


func _on_settings_button_mouse_entered():
	get_parent().button = true
	pass # Replace with function body.


func _on_settings_button_mouse_exited():
	get_parent().button = false
	pass # Replace with function body.
"

[sub_resource type="StyleBoxEmpty" id=65]

[sub_resource type="StyleBoxTexture" id=66]
texture = ExtResource( 187 )
region_rect = Rect2( 0, 0, 220, 200 )

[sub_resource type="StyleBoxTexture" id=67]
texture = ExtResource( 188 )
region_rect = Rect2( 0, 0, 28, 28 )
modulate_color = Color( 0.780392, 0.784314, 0.521569, 1 )

[sub_resource type="StyleBoxTexture" id=68]
texture = ExtResource( 188 )
region_rect = Rect2( 0, 0, 28, 28 )

[sub_resource type="StyleBoxTexture" id=69]
texture = ExtResource( 188 )
region_rect = Rect2( 0, 0, 28, 28 )

[sub_resource type="StyleBoxTexture" id=70]

[sub_resource type="StyleBoxTexture" id=71]
texture = ExtResource( 188 )
region_rect = Rect2( 0, 0, 28, 28 )

[sub_resource type="StyleBoxTexture" id=72]
texture = ExtResource( 189 )
region_rect = Rect2( 0, 0, 28, 28 )
modulate_color = Color( 0.780392, 0.784314, 0.521569, 1 )

[sub_resource type="StyleBoxTexture" id=73]
texture = ExtResource( 189 )
region_rect = Rect2( 0, 0, 28, 28 )

[sub_resource type="StyleBoxTexture" id=74]
texture = ExtResource( 189 )
region_rect = Rect2( 0, 0, 28, 28 )

[sub_resource type="StyleBoxTexture" id=75]

[sub_resource type="StyleBoxTexture" id=76]
texture = ExtResource( 189 )
region_rect = Rect2( 0, 0, 28, 28 )

[sub_resource type="Animation" id=77]
resource_name = "level_up"
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 0.9 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 0.0705882, 0.0627451, 0.0627451, 1 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="StyleBoxTexture" id=78]
texture = ExtResource( 190 )
region_rect = Rect2( 0, 0, 28, 28 )
modulate_color = Color( 0.780392, 0.784314, 0.521569, 1 )

[sub_resource type="StyleBoxTexture" id=79]
texture = ExtResource( 190 )
region_rect = Rect2( 0, 0, 28, 28 )

[sub_resource type="StyleBoxTexture" id=80]
texture = ExtResource( 190 )
region_rect = Rect2( 0, 0, 28, 28 )

[sub_resource type="StyleBoxTexture" id=81]
texture = ExtResource( 190 )
region_rect = Rect2( 0, 0, 28, 28 )

[sub_resource type="StyleBoxTexture" id=82]
texture = ExtResource( 192 )
region_rect = Rect2( 0, 0, 220, 200 )

[sub_resource type="StyleBoxEmpty" id=83]
content_margin_left = 0.0
content_margin_right = 0.0
content_margin_top = 0.0
content_margin_bottom = 0.0

[sub_resource type="StyleBoxTexture" id=84]
texture = ExtResource( 184 )
region_rect = Rect2( 0, 0, 36, 36 )

[sub_resource type="StyleBoxTexture" id=85]
texture = ExtResource( 184 )
region_rect = Rect2( 0, 0, 36, 36 )
modulate_color = Color( 0.419608, 0.388235, 0.388235, 1 )

[sub_resource type="StyleBoxTexture" id=86]
texture = ExtResource( 184 )
region_rect = Rect2( 0, 0, 36, 36 )

[sub_resource type="StyleBoxTexture" id=87]
texture = ExtResource( 184 )
region_rect = Rect2( 0, 0, 36, 36 )

[sub_resource type="StyleBoxTexture" id=88]
texture = ExtResource( 184 )
region_rect = Rect2( 0, 0, 36, 36 )

[sub_resource type="StyleBoxTexture" id=89]
texture = ExtResource( 195 )
region_rect = Rect2( 0, 0, 669, 165 )

[sub_resource type="GDScript" id=90]
script/source = "extends Label

export var show_label = false
export var text_say = \"\"

# Called when the node enters the scene tree for the first time.
func _ready():

	pass # Replace with function body.

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):

	if show_label:
		$text_full.play(\"full\")
		visible = true
		$Timer.start()
		
		
		show_label = false
#	pass


func _on_Timer_timeout():
	visible = false
	text = \"\"
	show_label = false
	pass # Replace with function body.


func _on_Button_pressed():
	visible = false
	text = \"\"
	show_label = false
	pass # Replace with function body.
"

[sub_resource type="Animation" id=91]
length = 1.5
tracks/0/type = "value"
tracks/0/path = NodePath(".:percent_visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( -0.1, 1.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 1.0 ]
}

[sub_resource type="StyleBoxTexture" id=92]
texture = ExtResource( 201 )
region_rect = Rect2( 0, 0, 113, 75 )

[sub_resource type="RectangleShape2D" id=93]
extents = Vector2( 12.0972, 9.70228 )

[sub_resource type="RectangleShape2D" id=94]
extents = Vector2( 6.52091, 16.2632 )

[sub_resource type="Animation" id=95]
length = 0.25
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 0, 1 ]
}

[sub_resource type="RectangleShape2D" id=96]
extents = Vector2( 2.03743, 1.97269 )

[sub_resource type="GDScript" id=97]
script/source = "extends Area2D

# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"

# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.


func _physics_process(delta):
	
	look_at(get_global_mouse_position())
#	print(get_parent().get_local_mouse_position().angle())
#	rotate(get_parent().get_local_mouse_position().angle())
"

[sub_resource type="RectangleShape2D" id=98]
extents = Vector2( 87.1345, 4.73892 )

[node name="Player" type="KinematicBody2D" groups=[
"save",
"paused",
"player",
]]
pause_mode = 1
z_index = 1
z_as_relative = false
collision_layer = 2
collision_mask = 27
script = ExtResource( 1 )

[node name="Line2D" type="Line2D" parent="."]
position = Vector2( 7.5, -13 )
points = PoolVector2Array( 0, 0, 0, 0 )
width = 2.0
texture = ExtResource( 2 )
begin_cap_mode = 2
end_cap_mode = 2

[node name="spr" type="AnimatedSprite" parent="."]
pause_mode = 2
frames = SubResource( 1 )
animation = "веревка_подъем"
playing = true

[node name="Camera2D" type="Camera2D" parent="."]
pause_mode = 2
editor/display_folded = true
scale = Vector2( -0.0828136, 0.873131 )
current = true
zoom = Vector2( 0.4, 0.4 )
smoothing_enabled = true
smoothing_speed = 3.0
editor_draw_drag_margin = true

[node name="time_move" type="Timer" parent="Camera2D"]
wait_time = 3.0
one_shot = true

[node name="camera_light" type="Light2D" parent="Camera2D"]
position = Vector2( 5.81179, 3.09439 )
rotation = -3.14159
scale = Vector2( 12.0753, -1.1453 )
enabled = false
texture = ExtResource( 174 )
texture_scale = 0.4
color = Color( 0.945098, 0.941176, 0.631373, 1 )
shadow_enabled = true

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( 0, 3.8 )
shape = SubResource( 2 )

[node name="Player_info" type="CanvasLayer" parent="."]
editor/display_folded = true
script = SubResource( 3 )

[node name="equip_panel" type="Panel" parent="Player_info"]
editor/display_folded = true
visible = false
margin_left = 935.0
margin_top = 145.0
margin_right = 1005.0
margin_bottom = 545.0
custom_styles/panel = SubResource( 4 )

[node name="weapon" type="Panel" parent="Player_info/equip_panel"]
margin_left = -5.0
margin_top = 15.0
margin_right = 57.0
margin_bottom = 74.9996
custom_styles/panel = SubResource( 5 )
script = SubResource( 6 )

[node name="weapon_bg" type="ItemList" parent="Player_info/equip_panel/weapon"]
margin_left = 19.4589
margin_top = 15.8503
margin_right = 51.4589
margin_bottom = 49.8503
custom_styles/bg = SubResource( 7 )
custom_constants/icon_margin = -27
fixed_icon_size = Vector2( 32, 32 )
script = SubResource( 8 )

[node name="weapon" type="ItemList" parent="Player_info/equip_panel/weapon"]
margin_left = 19.4589
margin_top = 15.8503
margin_right = 51.4589
margin_bottom = 49.8503
custom_styles/bg = SubResource( 7 )
custom_constants/icon_margin = -27
fixed_icon_size = Vector2( 32, 32 )
script = SubResource( 9 )

[node name="WindowDialog_ItemMenu" type="WindowDialog" parent="Player_info/equip_panel/weapon"]
margin_left = 427.0
margin_top = 108.0
margin_right = 757.0
margin_bottom = 468.0
theme = ExtResource( 176 )
custom_styles/panel = SubResource( 10 )

[node name="ItemMenu_TextureFrame_Icon" type="TextureRect" parent="Player_info/equip_panel/weapon/WindowDialog_ItemMenu"]
margin_left = 132.683
margin_top = 32.0455
margin_right = 196.683
margin_bottom = 96.0455
texture = ExtResource( 178 )
stretch_mode = 1

[node name="ItemMenu_RichTextLabel_ItemInfo" type="RichTextLabel" parent="Player_info/equip_panel/weapon/WindowDialog_ItemMenu"]
margin_left = 37.0
margin_top = 139.0
margin_right = 292.0
margin_bottom = 273.0
bbcode_enabled = true

[node name="ItemMenu_Button_DropItem" type="Button" parent="Player_info/equip_panel/weapon/WindowDialog_ItemMenu"]
margin_left = 90.0
margin_top = 300.0
margin_right = 240.0
margin_bottom = 340.0
custom_styles/hover = ExtResource( 179 )
custom_styles/pressed = ExtResource( 179 )
custom_styles/focus = ExtResource( 179 )
custom_styles/disabled = ExtResource( 179 )
custom_styles/normal = ExtResource( 179 )
custom_fonts/font = ExtResource( 180 )
text = "Кнопка"

[node name="Full" type="Label" parent="Player_info/equip_panel/weapon/WindowDialog_ItemMenu"]
visible = false
margin_left = 83.5502
margin_top = 273.0
margin_right = 245.55
margin_bottom = 296.0
text = "INVENTORY_FULL_TEXT"
align = 1
valign = 1

[node name="chest" type="Panel" parent="Player_info/equip_panel"]
margin_left = -5.0
margin_top = 65.0
margin_right = 57.0004
margin_bottom = 125.0
custom_styles/panel = SubResource( 11 )
script = SubResource( 12 )

[node name="chest_bg" type="ItemList" parent="Player_info/equip_panel/chest"]
margin_left = 19.4589
margin_top = 18.9203
margin_right = 51.4589
margin_bottom = 52.9203
custom_styles/bg = SubResource( 13 )
custom_constants/icon_margin = -27
fixed_icon_size = Vector2( 32, 32 )
script = SubResource( 14 )

[node name="chest" type="ItemList" parent="Player_info/equip_panel/chest"]
margin_left = 19.4589
margin_top = 18.9203
margin_right = 51.4589
margin_bottom = 52.9203
custom_styles/bg = SubResource( 13 )
custom_constants/icon_margin = -27
fixed_icon_size = Vector2( 32, 32 )
script = SubResource( 15 )

[node name="WindowDialog_ItemMenu" type="WindowDialog" parent="Player_info/equip_panel/chest"]
margin_left = 427.0
margin_top = 108.0
margin_right = 757.0
margin_bottom = 468.0
theme = ExtResource( 176 )
custom_styles/panel = SubResource( 10 )

[node name="ItemMenu_TextureFrame_Icon" type="TextureRect" parent="Player_info/equip_panel/chest/WindowDialog_ItemMenu"]
margin_left = 132.683
margin_top = 32.0455
margin_right = 196.683
margin_bottom = 96.0455
texture = ExtResource( 178 )
stretch_mode = 1

[node name="ItemMenu_RichTextLabel_ItemInfo" type="RichTextLabel" parent="Player_info/equip_panel/chest/WindowDialog_ItemMenu"]
margin_left = 37.0
margin_top = 139.0
margin_right = 292.0
margin_bottom = 273.0
bbcode_enabled = true

[node name="ItemMenu_Button_DropItem" type="Button" parent="Player_info/equip_panel/chest/WindowDialog_ItemMenu"]
margin_left = 90.0
margin_top = 300.0
margin_right = 240.0
margin_bottom = 340.0
custom_styles/hover = ExtResource( 179 )
custom_styles/pressed = ExtResource( 179 )
custom_styles/focus = ExtResource( 179 )
custom_styles/disabled = ExtResource( 179 )
custom_styles/normal = ExtResource( 179 )
custom_fonts/font = ExtResource( 180 )
text = "Кнопка"

[node name="Full" type="Label" parent="Player_info/equip_panel/chest/WindowDialog_ItemMenu"]
visible = false
margin_left = 83.5502
margin_top = 273.0
margin_right = 245.55
margin_bottom = 296.0
text = "INVENTORY_FULL_TEXT"
align = 1
valign = 1

[node name="gloves" type="Panel" parent="Player_info/equip_panel"]
margin_left = -5.0
margin_top = 115.0
margin_right = 57.0
margin_bottom = 175.0
custom_styles/panel = SubResource( 16 )
script = SubResource( 17 )

[node name="gloves_bg" type="ItemList" parent="Player_info/equip_panel/gloves"]
margin_left = 19.4589
margin_top = 18.9203
margin_right = 51.4589
margin_bottom = 52.9203
custom_styles/bg = SubResource( 18 )
custom_constants/icon_margin = -27
fixed_icon_size = Vector2( 32, 32 )
script = SubResource( 19 )

[node name="gloves" type="ItemList" parent="Player_info/equip_panel/gloves"]
margin_left = 19.4589
margin_top = 18.9203
margin_right = 51.4589
margin_bottom = 52.9203
custom_styles/bg = SubResource( 18 )
custom_constants/icon_margin = -27
fixed_icon_size = Vector2( 32, 32 )
script = SubResource( 20 )

[node name="WindowDialog_ItemMenu" type="WindowDialog" parent="Player_info/equip_panel/gloves"]
margin_left = 427.0
margin_top = 108.0
margin_right = 757.0
margin_bottom = 468.0
theme = ExtResource( 176 )
custom_styles/panel = SubResource( 10 )

[node name="ItemMenu_TextureFrame_Icon" type="TextureRect" parent="Player_info/equip_panel/gloves/WindowDialog_ItemMenu"]
margin_left = 132.683
margin_top = 32.0455
margin_right = 196.683
margin_bottom = 96.0455
texture = ExtResource( 178 )
stretch_mode = 1

[node name="ItemMenu_RichTextLabel_ItemInfo" type="RichTextLabel" parent="Player_info/equip_panel/gloves/WindowDialog_ItemMenu"]
margin_left = 37.0
margin_top = 139.0
margin_right = 292.0
margin_bottom = 273.0
bbcode_enabled = true

[node name="ItemMenu_Button_DropItem" type="Button" parent="Player_info/equip_panel/gloves/WindowDialog_ItemMenu"]
margin_left = 90.0
margin_top = 300.0
margin_right = 240.0
margin_bottom = 340.0
custom_styles/hover = ExtResource( 179 )
custom_styles/pressed = ExtResource( 179 )
custom_styles/focus = ExtResource( 179 )
custom_styles/disabled = ExtResource( 179 )
custom_styles/normal = ExtResource( 179 )
custom_fonts/font = ExtResource( 180 )
text = "Кнопка"

[node name="Full" type="Label" parent="Player_info/equip_panel/gloves/WindowDialog_ItemMenu"]
visible = false
margin_left = 83.5502
margin_top = 273.0
margin_right = 245.55
margin_bottom = 296.0
text = "INVENTORY_FULL_TEXT"
align = 1
valign = 1

[node name="foot" type="Panel" parent="Player_info/equip_panel"]
margin_left = -5.0
margin_top = 165.0
margin_right = 57.0003
margin_bottom = 224.999
custom_styles/panel = SubResource( 21 )
script = SubResource( 22 )

[node name="foot_bg" type="ItemList" parent="Player_info/equip_panel/foot"]
margin_left = 19.4589
margin_top = 18.9203
margin_right = 51.4589
margin_bottom = 52.9203
custom_styles/bg = SubResource( 23 )
custom_constants/icon_margin = -27
fixed_icon_size = Vector2( 32, 32 )
script = SubResource( 24 )

[node name="foot" type="ItemList" parent="Player_info/equip_panel/foot"]
margin_left = 19.4589
margin_top = 18.9203
margin_right = 51.4589
margin_bottom = 52.9203
custom_styles/bg = SubResource( 23 )
custom_constants/icon_margin = -27
fixed_icon_size = Vector2( 32, 32 )
script = SubResource( 25 )

[node name="WindowDialog_ItemMenu" type="WindowDialog" parent="Player_info/equip_panel/foot"]
margin_left = 427.0
margin_top = 108.0
margin_right = 757.0
margin_bottom = 468.0
theme = ExtResource( 176 )
custom_styles/panel = SubResource( 10 )

[node name="ItemMenu_TextureFrame_Icon" type="TextureRect" parent="Player_info/equip_panel/foot/WindowDialog_ItemMenu"]
margin_left = 132.683
margin_top = 32.0455
margin_right = 196.683
margin_bottom = 96.0455
texture = ExtResource( 178 )
stretch_mode = 1

[node name="ItemMenu_RichTextLabel_ItemInfo" type="RichTextLabel" parent="Player_info/equip_panel/foot/WindowDialog_ItemMenu"]
margin_left = 37.0
margin_top = 139.0
margin_right = 292.0
margin_bottom = 273.0
bbcode_enabled = true

[node name="ItemMenu_Button_DropItem" type="Button" parent="Player_info/equip_panel/foot/WindowDialog_ItemMenu"]
margin_left = 90.0
margin_top = 300.0
margin_right = 240.0
margin_bottom = 340.0
custom_styles/hover = ExtResource( 179 )
custom_styles/pressed = ExtResource( 179 )
custom_styles/focus = ExtResource( 179 )
custom_styles/disabled = ExtResource( 179 )
custom_styles/normal = ExtResource( 179 )
custom_fonts/font = ExtResource( 180 )
text = "Кнопка"

[node name="Full" type="Label" parent="Player_info/equip_panel/foot/WindowDialog_ItemMenu"]
visible = false
margin_left = 83.5502
margin_top = 273.0
margin_right = 245.55
margin_bottom = 296.0
text = "INVENTORY_FULL_TEXT"
align = 1
valign = 1

[node name="feet" type="Panel" parent="Player_info/equip_panel"]
margin_left = -5.0
margin_top = 215.0
margin_right = 57.0003
margin_bottom = 275.0
custom_styles/panel = SubResource( 26 )
script = SubResource( 27 )

[node name="feet_bg" type="ItemList" parent="Player_info/equip_panel/feet"]
margin_left = 19.4589
margin_top = 18.9203
margin_right = 51.4589
margin_bottom = 52.9203
custom_styles/bg = SubResource( 28 )
custom_constants/icon_margin = -27
fixed_icon_size = Vector2( 32, 32 )
script = SubResource( 29 )

[node name="feet" type="ItemList" parent="Player_info/equip_panel/feet"]
margin_left = 19.4589
margin_top = 18.9203
margin_right = 51.4589
margin_bottom = 52.9203
custom_styles/bg = SubResource( 28 )
custom_constants/icon_margin = -27
fixed_icon_size = Vector2( 32, 32 )
script = SubResource( 30 )

[node name="WindowDialog_ItemMenu" type="WindowDialog" parent="Player_info/equip_panel/feet"]
margin_left = 427.0
margin_top = 108.0
margin_right = 757.0
margin_bottom = 468.0
theme = ExtResource( 176 )
custom_styles/panel = SubResource( 10 )

[node name="ItemMenu_TextureFrame_Icon" type="TextureRect" parent="Player_info/equip_panel/feet/WindowDialog_ItemMenu"]
margin_left = 132.683
margin_top = 32.0455
margin_right = 196.683
margin_bottom = 96.0455
texture = ExtResource( 178 )
stretch_mode = 1

[node name="ItemMenu_RichTextLabel_ItemInfo" type="RichTextLabel" parent="Player_info/equip_panel/feet/WindowDialog_ItemMenu"]
margin_left = 37.0
margin_top = 139.0
margin_right = 292.0
margin_bottom = 273.0
bbcode_enabled = true

[node name="ItemMenu_Button_DropItem" type="Button" parent="Player_info/equip_panel/feet/WindowDialog_ItemMenu"]
margin_left = 90.0
margin_top = 300.0
margin_right = 240.0
margin_bottom = 340.0
custom_styles/hover = ExtResource( 179 )
custom_styles/pressed = ExtResource( 179 )
custom_styles/focus = ExtResource( 179 )
custom_styles/disabled = ExtResource( 179 )
custom_styles/normal = ExtResource( 179 )
custom_fonts/font = ExtResource( 180 )
text = "Кнопка"

[node name="Full" type="Label" parent="Player_info/equip_panel/feet/WindowDialog_ItemMenu"]
visible = false
margin_left = 83.5502
margin_top = 273.0
margin_right = 245.55
margin_bottom = 296.0
text = "INVENTORY_FULL_TEXT"
align = 1
valign = 1

[node name="ring" type="Panel" parent="Player_info/equip_panel"]
margin_left = -5.0
margin_top = 265.0
margin_right = 57.0
margin_bottom = 325.0
custom_styles/panel = SubResource( 31 )
script = SubResource( 32 )

[node name="ring_bg" type="ItemList" parent="Player_info/equip_panel/ring"]
margin_left = 19.4589
margin_top = 18.9203
margin_right = 51.4589
margin_bottom = 52.9203
custom_styles/bg = SubResource( 33 )
custom_constants/icon_margin = -27
fixed_icon_size = Vector2( 32, 32 )
script = SubResource( 34 )

[node name="ring" type="ItemList" parent="Player_info/equip_panel/ring"]
margin_left = 19.4589
margin_top = 18.9203
margin_right = 51.4589
margin_bottom = 52.9203
custom_styles/bg = SubResource( 33 )
custom_constants/icon_margin = -27
fixed_icon_size = Vector2( 32, 32 )
script = SubResource( 35 )

[node name="WindowDialog_ItemMenu" type="WindowDialog" parent="Player_info/equip_panel/ring"]
margin_left = 427.0
margin_top = 108.0
margin_right = 757.0
margin_bottom = 468.0
theme = ExtResource( 176 )
custom_styles/panel = SubResource( 10 )

[node name="ItemMenu_TextureFrame_Icon" type="TextureRect" parent="Player_info/equip_panel/ring/WindowDialog_ItemMenu"]
margin_left = 132.683
margin_top = 32.0455
margin_right = 196.683
margin_bottom = 96.0455
texture = ExtResource( 178 )
stretch_mode = 1

[node name="ItemMenu_RichTextLabel_ItemInfo" type="RichTextLabel" parent="Player_info/equip_panel/ring/WindowDialog_ItemMenu"]
margin_left = 37.0
margin_top = 139.0
margin_right = 292.0
margin_bottom = 273.0
bbcode_enabled = true

[node name="ItemMenu_Button_DropItem" type="Button" parent="Player_info/equip_panel/ring/WindowDialog_ItemMenu"]
margin_left = 90.0
margin_top = 300.0
margin_right = 240.0
margin_bottom = 340.0
custom_styles/hover = ExtResource( 179 )
custom_styles/pressed = ExtResource( 179 )
custom_styles/focus = ExtResource( 179 )
custom_styles/disabled = ExtResource( 179 )
custom_styles/normal = ExtResource( 179 )
custom_fonts/font = ExtResource( 180 )
text = "Кнопка"

[node name="Full" type="Label" parent="Player_info/equip_panel/ring/WindowDialog_ItemMenu"]
visible = false
margin_left = 83.5502
margin_top = 273.0
margin_right = 245.55
margin_bottom = 296.0
text = "INVENTORY_FULL_TEXT"
align = 1
valign = 1

[node name="neck" type="Panel" parent="Player_info/equip_panel"]
margin_left = -5.0
margin_top = 315.0
margin_right = 57.0
margin_bottom = 375.0
custom_styles/panel = SubResource( 36 )
script = SubResource( 37 )

[node name="neck_bg" type="ItemList" parent="Player_info/equip_panel/neck"]
margin_left = 19.4589
margin_top = 18.9203
margin_right = 51.4589
margin_bottom = 52.9203
custom_styles/bg = SubResource( 38 )
custom_constants/icon_margin = -27
fixed_icon_size = Vector2( 32, 32 )
script = SubResource( 39 )

[node name="neck" type="ItemList" parent="Player_info/equip_panel/neck"]
margin_left = 19.4589
margin_top = 18.9203
margin_right = 51.4589
margin_bottom = 52.9203
custom_styles/bg = SubResource( 38 )
custom_constants/icon_margin = -27
fixed_icon_size = Vector2( 32, 32 )
script = SubResource( 40 )

[node name="WindowDialog_ItemMenu" type="WindowDialog" parent="Player_info/equip_panel/neck"]
margin_left = 427.0
margin_top = 108.0
margin_right = 757.0
margin_bottom = 468.0
theme = ExtResource( 176 )
custom_styles/panel = SubResource( 10 )

[node name="ItemMenu_TextureFrame_Icon" type="TextureRect" parent="Player_info/equip_panel/neck/WindowDialog_ItemMenu"]
margin_left = 132.683
margin_top = 32.0455
margin_right = 196.683
margin_bottom = 96.0455
texture = ExtResource( 178 )
stretch_mode = 1

[node name="ItemMenu_RichTextLabel_ItemInfo" type="RichTextLabel" parent="Player_info/equip_panel/neck/WindowDialog_ItemMenu"]
margin_left = 37.0
margin_top = 139.0
margin_right = 292.0
margin_bottom = 273.0
bbcode_enabled = true

[node name="ItemMenu_Button_DropItem" type="Button" parent="Player_info/equip_panel/neck/WindowDialog_ItemMenu"]
margin_left = 90.0
margin_top = 300.0
margin_right = 240.0
margin_bottom = 340.0
custom_styles/hover = ExtResource( 179 )
custom_styles/pressed = ExtResource( 179 )
custom_styles/focus = ExtResource( 179 )
custom_styles/disabled = ExtResource( 179 )
custom_styles/normal = ExtResource( 179 )
custom_fonts/font = ExtResource( 180 )
text = "Кнопка"

[node name="Full" type="Label" parent="Player_info/equip_panel/neck/WindowDialog_ItemMenu"]
visible = false
margin_left = 83.5502
margin_top = 273.0
margin_right = 245.55
margin_bottom = 296.0
text = "INVENTORY_FULL_TEXT"
align = 1
valign = 1

[node name="Statistics" type="Panel" parent="Player_info"]
visible = false
margin_left = 1000.0
margin_top = 145.0
margin_right = 1254.0
margin_bottom = 545.0
custom_styles/panel = SubResource( 41 )

[node name="HP_value" type="Label" parent="Player_info/Statistics"]
margin_left = 104.028
margin_top = 88.7962
margin_right = 204.028
margin_bottom = 126.796
text = "1"
align = 1
valign = 1

[node name="HP_text" type="Label" parent="Player_info/Statistics"]
margin_left = 22.7153
margin_top = 88.7962
margin_right = 177.715
margin_bottom = 126.796
hint_tooltip = "TOOL_HP_TEXT"
mouse_filter = 0
theme = SubResource( 42 )
text = "PLAYER_INFO_HEALTH"
valign = 1

[node name="strength_value" type="Label" parent="Player_info/Statistics"]
margin_left = 127.649
margin_top = 112.294
margin_right = 227.649
margin_bottom = 150.294
text = "1"
align = 1
valign = 1

[node name="strength_text" type="Label" parent="Player_info/Statistics"]
margin_left = 22.7153
margin_top = 112.294
margin_right = 197.715
margin_bottom = 150.294
hint_tooltip = "TOOL_STR_TEXT"
mouse_filter = 0
theme = SubResource( 43 )
text = "PLAYER_INFO_STRANGTH"
valign = 1

[node name="agility_value" type="Label" parent="Player_info/Statistics"]
margin_left = 127.649
margin_top = 161.294
margin_right = 227.649
margin_bottom = 199.294
text = "1"
align = 1
valign = 1

[node name="agility_text" type="Label" parent="Player_info/Statistics"]
margin_left = 22.7153
margin_top = 161.294
margin_right = 176.715
margin_bottom = 199.294
hint_tooltip = "TOOL_AGI_TEXT"
mouse_filter = 0
theme = SubResource( 44 )
text = "PLAYER_INFO_AGILITY"
valign = 1

[node name="up_str" type="Button" parent="Player_info/Statistics"]
margin_left = 211.715
margin_top = 120.879
margin_right = 231.715
margin_bottom = 140.879
custom_styles/hover = SubResource( 45 )
custom_styles/pressed = SubResource( 46 )
custom_styles/focus = SubResource( 47 )
custom_styles/disabled = SubResource( 48 )
custom_styles/normal = SubResource( 49 )
custom_fonts/font = SubResource( 50 )

[node name="up_hp" type="Button" parent="Player_info/Statistics"]
margin_left = 211.715
margin_top = 97.5777
margin_right = 231.715
margin_bottom = 117.578
custom_styles/hover = SubResource( 51 )
custom_styles/pressed = SubResource( 52 )
custom_styles/focus = SubResource( 53 )
custom_styles/disabled = SubResource( 54 )
custom_styles/normal = SubResource( 49 )
custom_fonts/font = SubResource( 50 )

[node name="up_agi" type="Button" parent="Player_info/Statistics"]
margin_left = 212.432
margin_top = 169.521
margin_right = 232.432
margin_bottom = 189.521
custom_styles/hover = SubResource( 55 )
custom_styles/pressed = SubResource( 56 )
custom_styles/focus = SubResource( 57 )
custom_styles/disabled = SubResource( 58 )
custom_styles/normal = SubResource( 49 )
custom_fonts/font = SubResource( 50 )

[node name="damage_value" type="Label" parent="Player_info/Statistics"]
margin_left = 94.4478
margin_top = 135.0
margin_right = 194.448
margin_bottom = 173.0
text = "1"
align = 1
valign = 1

[node name="damage_text" type="Label" parent="Player_info/Statistics"]
margin_left = 22.7153
margin_top = 135.0
margin_right = 181.715
margin_bottom = 173.0
hint_tooltip = "Здоровье персонажа"
text = "PLAYER_INFO_DAMAGE"
valign = 1

[node name="speed_value" type="Label" parent="Player_info/Statistics"]
margin_left = 127.649
margin_top = 185.499
margin_right = 227.649
margin_bottom = 223.499
text = "1"
align = 1
valign = 1

[node name="speed_text" type="Label" parent="Player_info/Statistics"]
margin_left = 22.7153
margin_top = 185.499
margin_right = 181.715
margin_bottom = 223.499
hint_tooltip = "Здоровье персонажа"
text = "PLAYER_INFO_SPEED"
valign = 1

[node name="level_value" type="Label" parent="Player_info/Statistics"]
margin_left = 104.028
margin_top = 257.728
margin_right = 204.028
margin_bottom = 295.728
text = "1"
align = 1
valign = 1

[node name="level_text" type="Label" parent="Player_info/Statistics"]
margin_left = 22.7153
margin_top = 257.728
margin_right = 181.715
margin_bottom = 295.728
hint_tooltip = "Здоровье персонажа"
text = "PLAYER_INFO_LEVEL"
valign = 1

[node name="exp_value" type="Label" parent="Player_info/Statistics"]
margin_left = 104.028
margin_top = 295.728
margin_right = 204.028
margin_bottom = 333.728
text = "1"
align = 1
valign = 1

[node name="exp_text" type="Label" parent="Player_info/Statistics"]
margin_left = 22.7153
margin_top = 295.728
margin_right = 204.715
margin_bottom = 333.728
hint_tooltip = "Здоровье персонажа"
text = "PLAYER_INFO_EXPIRIENCE"
valign = 1

[node name="skill_point_value" type="Label" parent="Player_info/Statistics"]
margin_left = 104.028
margin_top = 333.728
margin_right = 204.028
margin_bottom = 371.728
text = "1"
align = 1
valign = 1

[node name="skill_point_text" type="Label" parent="Player_info/Statistics"]
margin_left = 22.7153
margin_top = 333.728
margin_right = 218.715
margin_bottom = 371.728
hint_tooltip = "Здоровье персонажа"
text = "PLAYER_INFO_SKILL_POINTS"
valign = 1

[node name="Button" type="Button" parent="Player_info/Statistics"]
margin_left = 212.432
margin_right = 242.432
margin_bottom = 30.0
custom_styles/hover = SubResource( 59 )
custom_styles/pressed = SubResource( 60 )
custom_styles/focus = SubResource( 61 )
custom_styles/disabled = SubResource( 62 )
custom_styles/normal = SubResource( 63 )

[node name="Label" type="Label" parent="Player_info/Statistics"]
margin_left = 53.4681
margin_top = 6.19284
margin_right = 202.468
margin_bottom = 29.1928
custom_fonts/font = ExtResource( 180 )
text = "PLAYER_INFO_TEXT"
align = 1
valign = 1

[node name="UI_paneli" type="CanvasLayer" parent="."]
editor/display_folded = true
script = SubResource( 64 )

[node name="Health_potion" type="Panel" parent="UI_paneli"]
margin_left = 9.56044
margin_top = 66.1928
margin_right = 84.5604
margin_bottom = 151.193
custom_styles/panel = SubResource( 65 )

[node name="Sprite2" type="Sprite" parent="UI_paneli/Health_potion"]
visible = false
position = Vector2( 43.8261, 72.9558 )
scale = Vector2( 1.65857, 1.04408 )
texture = ExtResource( 185 )

[node name="Sprite" type="Sprite" parent="UI_paneli/Health_potion"]
position = Vector2( 43.1626, 33.4824 )
scale = Vector2( 1.86588, 1.81116 )
texture = ExtResource( 186 )
__meta__ = {
"_edit_lock_": true
}

[node name="Icon" type="TextureRect" parent="UI_paneli/Health_potion"]
margin_left = 18.8491
margin_top = 12.5129
margin_right = 63.8491
margin_bottom = 52.5128
stretch_mode = 1

[node name="Label" type="Label" parent="UI_paneli/Health_potion"]
margin_left = 10.072
margin_top = 30.0294
margin_right = 49.072
margin_bottom = 58.0294
align = 1
valign = 1

[node name="Button_UI" type="Panel" parent="UI_paneli"]
margin_top = 416.0
margin_right = 47.0
margin_bottom = 455.0
rect_scale = Vector2( 6, 6 )
custom_styles/panel = SubResource( 66 )

[node name="Inv_button" type="Button" parent="UI_paneli/Button_UI"]
margin_left = 0.551729
margin_top = 7.58459
margin_right = 23.5517
margin_bottom = 30.5846
rect_scale = Vector2( 0.24, 0.23 )
rect_pivot_offset = Vector2( 0.5, 0.5 )
custom_styles/hover = SubResource( 67 )
custom_styles/pressed = SubResource( 68 )
custom_styles/focus = SubResource( 69 )
custom_styles/disabled = SubResource( 70 )
custom_styles/normal = SubResource( 71 )

[node name="Pinfo_button" type="Button" parent="UI_paneli/Button_UI"]
margin_left = 1.375
margin_top = 15.1259
margin_right = 24.375
margin_bottom = 38.1259
rect_scale = Vector2( 0.24, 0.24 )
custom_styles/hover = SubResource( 72 )
custom_styles/pressed = SubResource( 73 )
custom_styles/focus = SubResource( 74 )
custom_styles/disabled = SubResource( 75 )
custom_styles/normal = SubResource( 76 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="UI_paneli/Button_UI/Pinfo_button"]
anims/level_up = SubResource( 77 )

[node name="Sprite" type="Sprite" parent="UI_paneli/Button_UI/Pinfo_button"]

[node name="settings_button" type="Button" parent="UI_paneli/Button_UI"]
margin_left = 1.25171
margin_top = 22.0805
margin_right = 23.2517
margin_bottom = 45.0805
rect_scale = Vector2( 0.24, 0.24 )
custom_styles/hover = SubResource( 78 )
custom_styles/pressed = SubResource( 79 )
custom_styles/focus = SubResource( 80 )
custom_styles/normal = SubResource( 81 )

[node name="inventary" type="CanvasLayer" parent="."]
editor/display_folded = true
script = ExtResource( 191 )

[node name="inventory" type="Panel" parent="inventary"]
margin_left = 27.2278
margin_top = 223.0
margin_right = 247.228
margin_bottom = 363.0
custom_styles/panel = SubResource( 82 )

[node name="bag2" type="ItemList" parent="inventary/inventory"]
margin_left = 22.1069
margin_top = 52.2284
margin_right = 217.107
margin_bottom = 116.228
custom_styles/bg = SubResource( 83 )
custom_constants/icon_margin = -28
allow_rmb_select = true
auto_height = true
max_columns = 0
icon_mode = 0
fixed_icon_size = Vector2( 32, 32 )
script = ExtResource( 193 )

[node name="Sprite_DraggedItem" type="Sprite" parent="inventary/inventory/bag2"]

[node name="bag1" type="ItemList" parent="inventary/inventory"]
margin_left = 22.1069
margin_top = 52.2284
margin_right = 217.107
margin_bottom = 116.228
custom_styles/bg = SubResource( 83 )
custom_constants/icon_margin = -28
auto_height = true
max_columns = 0
icon_mode = 0
fixed_icon_size = Vector2( 32, 32 )
script = ExtResource( 194 )

[node name="Sprite_DraggedItem" type="Sprite" parent="inventary/inventory/bag1"]

[node name="Label" type="Label" parent="inventary/inventory"]
margin_left = 24.0062
margin_top = -1.16585
margin_right = 196.006
margin_bottom = 21.8342
custom_fonts/font = ExtResource( 180 )
text = "GUI_INVENTORY_TEXT"
align = 1
valign = 1

[node name="Button" type="Button" parent="inventary/inventory"]
margin_left = 186.97
margin_top = 0.0754547
margin_right = 216.97
margin_bottom = 30.0755
rect_scale = Vector2( 0.7, 0.7 )
custom_styles/hover = SubResource( 84 )
custom_styles/pressed = SubResource( 85 )
custom_styles/focus = SubResource( 86 )
custom_styles/disabled = SubResource( 87 )
custom_styles/normal = SubResource( 88 )

[node name="WindowDialog_ItemMenu" type="WindowDialog" parent="inventary"]
margin_left = 427.0
margin_top = 108.0
margin_right = 757.0
margin_bottom = 468.0
theme = ExtResource( 176 )
custom_styles/panel = SubResource( 10 )

[node name="ItemMenu_TextureFrame_Icon" type="TextureRect" parent="inventary/WindowDialog_ItemMenu"]
margin_left = 132.683
margin_top = 32.0455
margin_right = 196.683
margin_bottom = 96.0455
texture = ExtResource( 178 )
stretch_mode = 1

[node name="ItemMenu_RichTextLabel_ItemInfo" type="RichTextLabel" parent="inventary/WindowDialog_ItemMenu"]
margin_left = 37.0
margin_top = 139.0
margin_right = 292.0
margin_bottom = 273.0
bbcode_enabled = true

[node name="ItemMenu_Button_DropItem" type="Button" parent="inventary/WindowDialog_ItemMenu"]
margin_left = 165.0
margin_top = 300.0
margin_right = 315.0
margin_bottom = 340.0
custom_styles/hover = ExtResource( 179 )
custom_styles/pressed = ExtResource( 179 )
custom_styles/focus = ExtResource( 179 )
custom_styles/disabled = ExtResource( 179 )
custom_styles/normal = ExtResource( 179 )
custom_fonts/font = ExtResource( 180 )
text = "Кнопка"

[node name="ItemMenu_Button_DropItem2" type="Button" parent="inventary/WindowDialog_ItemMenu"]
margin_left = 90.0
margin_top = 300.0
margin_right = 240.0
margin_bottom = 340.0
custom_styles/hover = ExtResource( 179 )
custom_styles/pressed = ExtResource( 179 )
custom_styles/focus = ExtResource( 179 )
custom_styles/disabled = ExtResource( 179 )
custom_styles/normal = ExtResource( 179 )
custom_fonts/font = ExtResource( 180 )
text = "Кнопка"

[node name="Full" type="Label" parent="inventary/WindowDialog_ItemMenu"]
visible = false
margin_left = 83.5502
margin_top = 273.0
margin_right = 245.55
margin_bottom = 296.0
text = "INVENTORY_FULL_TEXT"
align = 1
valign = 1

[node name="equip_button" type="Button" parent="inventary/WindowDialog_ItemMenu"]
visible = false
margin_left = 15.0
margin_top = 300.0
margin_right = 165.0
margin_bottom = 340.0
custom_styles/hover = ExtResource( 179 )
custom_styles/pressed = ExtResource( 179 )
custom_styles/focus = ExtResource( 179 )
custom_styles/disabled = ExtResource( 179 )
custom_styles/normal = ExtResource( 179 )
custom_fonts/font = ExtResource( 180 )
text = "EQUIP_BUTTON"

[node name="GUI" type="CanvasLayer" parent="."]
editor/display_folded = true

[node name="fps" type="Label" parent="GUI"]
margin_left = 331.732
margin_top = 22.3225
margin_right = 419.732
margin_bottom = 57.3222
text = "60"
align = 1
valign = 1

[node name="say_label" type="Label" parent="GUI"]
visible = false
margin_left = 306.418
margin_top = 567.646
margin_right = 1026.41
margin_bottom = 667.646
grow_horizontal = 0
grow_vertical = 0
custom_styles/normal = SubResource( 89 )
custom_fonts/font = ExtResource( 196 )
align = 1
valign = 1
autowrap = true
percent_visible = 0.0625
script = SubResource( 90 )

[node name="Timer" type="Timer" parent="GUI/say_label"]
wait_time = 5.0
one_shot = true

[node name="Sprite" type="Sprite" parent="GUI/say_label"]
position = Vector2( -40, 50 )
scale = Vector2( 3, 3 )
texture = ExtResource( 197 )

[node name="Sprite" type="Sprite" parent="GUI/say_label/Sprite"]
position = Vector2( 0.319275, 0.0852988 )
scale = Vector2( 0.22057, 0.203741 )
z_index = -1
texture = ExtResource( 198 )

[node name="Button" type="Button" parent="GUI/say_label"]
margin_left = 660.746
margin_top = -9.2843
margin_right = 698.746
margin_bottom = 27.7157
custom_styles/hover = ExtResource( 199 )
custom_styles/pressed = ExtResource( 199 )
custom_styles/focus = ExtResource( 199 )
custom_styles/disabled = ExtResource( 199 )
custom_styles/normal = ExtResource( 199 )
custom_fonts/font = ExtResource( 200 )

[node name="text_full" type="AnimationPlayer" parent="GUI/say_label"]
anims/full = SubResource( 91 )

[node name="level_bar" type="Control" parent="GUI"]
margin_left = 1236.06
margin_top = 43.8948
margin_right = 1276.06
margin_bottom = 83.8948

[node name="Panel" type="Panel" parent="GUI/level_bar"]
margin_right = 40.0
margin_bottom = 40.0
custom_styles/panel = SubResource( 92 )

[node name="level" type="Label" parent="GUI/level_bar"]
margin_left = -0.513336
margin_top = 14.1168
margin_right = 39.4867
margin_bottom = 37.1168
text = "1"
align = 1
valign = 1

[node name="Exp_bar" type="Control" parent="GUI"]
margin_left = 1015.75
margin_top = -8.11883
margin_right = 1055.75
margin_bottom = 31.8812
rect_scale = Vector2( 1, 0.5 )

[node name="bg" type="TextureProgress" parent="GUI/Exp_bar"]
margin_left = 5.26306
margin_top = 12.6315
margin_right = 263.263
margin_bottom = 111.632
texture_over = ExtResource( 202 )

[node name="fg" type="TextureProgress" parent="GUI/Exp_bar"]
margin_left = 13.9296
margin_top = 65.1701
margin_right = 253.93
margin_bottom = 105.17
value = 50.0
texture_progress = ExtResource( 203 )

[node name="HPbar1" type="Control" parent="GUI"]
margin_left = -5.62952
margin_top = -75.1903
margin_right = 34.3705
margin_bottom = -35.1903
rect_scale = Vector2( 0.8, 0.8 )

[node name="healthbar_bg" type="TextureProgress" parent="GUI/HPbar1"]
margin_left = 19.0
margin_top = 114.0
margin_right = 382.0
margin_bottom = 165.0
step = 0.1
value = 100.0
texture_under = ExtResource( 204 )

[node name="healthbar_pr" type="TextureProgress" parent="GUI/HPbar1"]
margin_left = 117.657
margin_top = 128.53
margin_right = 363.657
margin_bottom = 149.53
step = 0.1
value = 100.0
texture_progress = ExtResource( 205 )

[node name="attack_area" type="Area2D" parent="."]
editor/display_folded = true
position = Vector2( 16, 5 )

[node name="col_Atack" type="CollisionShape2D" parent="attack_area"]
position = Vector2( -4.36932, 0 )
shape = SubResource( 93 )
disabled = true

[node name="use" type="Area2D" parent="."]
editor/display_folded = true
position = Vector2( 6, 4.5 )
scale = Vector2( 1.56179, 1.19754 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="use"]
scale = Vector2( 0.902065, 0.733844 )
shape = SubResource( 94 )
disabled = true

[node name="use_check" type="Area2D" parent="."]
editor/display_folded = true
position = Vector2( 6, 4.5 )
scale = Vector2( 1.56179, 1.19754 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="use_check"]
scale = Vector2( 0.902065, 0.733844 )
shape = SubResource( 94 )

[node name="Light2D" type="Light2D" parent="."]
position = Vector2( -0.481295, 2.70181 )
enabled = false
texture = ExtResource( 174 )
texture_scale = 0.4
color = Color( 0.945098, 0.941176, 0.631373, 1 )
shadow_enabled = true

[node name="E-key" type="Sprite" parent="."]
editor/display_folded = true
visible = false
position = Vector2( 14, -13 )
scale = Vector2( 0.3, 0.3 )
texture = ExtResource( 206 )
hframes = 2

[node name="AnimationPlayer" type="AnimationPlayer" parent="E-key"]
autoplay = "use"
playback_speed = 0.4
anims/use = SubResource( 95 )

[node name="music" type="AudioStreamPlayer2D" parent="."]
pause_mode = 1
stream = ExtResource( 207 )
volume_db = 10.0
autoplay = true

[node name="hook_area" type="Area2D" parent="."]
position = Vector2( 8.23269, -12.0622 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="hook_area"]
shape = SubResource( 96 )

[node name="fight_sound" type="AudioStreamPlayer2D" parent="."]
volume_db = -6.71

[node name="damage_sound" type="AudioStreamPlayer2D" parent="."]
position = Vector2( 16, 5 )

[node name="move_sound" type="AudioStreamPlayer2D" parent="."]
volume_db = -8.69

[node name="Regen_timer" type="Timer" parent="."]
wait_time = 3.0
one_shot = true

[node name="hook_line" type="Area2D" parent="."]
script = SubResource( 97 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="hook_line"]
position = Vector2( 88.4961, 0 )
shape = SubResource( 98 )
[connection signal="animation_finished" from="spr" to="." method="_on_spr_animation_finished"]
[connection signal="frame_changed" from="spr" to="." method="_on_spr_frame_changed"]
[connection signal="timeout" from="Camera2D/time_move" to="." method="_on_time_move_timeout"]
[connection signal="item_rmb_selected" from="Player_info/equip_panel/weapon/weapon_bg" to="Player_info/equip_panel/weapon" method="_on_weapon_item_rmb_selected"]
[connection signal="item_rmb_selected" from="Player_info/equip_panel/weapon/weapon" to="Player_info/equip_panel/weapon" method="_on_weapon_item_rmb_selected"]
[connection signal="popup_hide" from="Player_info/equip_panel/weapon/WindowDialog_ItemMenu" to="Player_info/equip_panel/weapon" method="_on_WindowDialog_ItemMenu_popup_hide"]
[connection signal="pressed" from="Player_info/equip_panel/weapon/WindowDialog_ItemMenu/ItemMenu_Button_DropItem" to="Player_info/equip_panel/weapon" method="_on_ItemMenu_Button_DropItem_pressed"]
[connection signal="item_rmb_selected" from="Player_info/equip_panel/chest/chest_bg" to="Player_info/equip_panel/chest" method="_on_weapon_item_rmb_selected"]
[connection signal="item_rmb_selected" from="Player_info/equip_panel/chest/chest" to="Player_info/equip_panel/chest" method="_on_weapon_item_rmb_selected"]
[connection signal="popup_hide" from="Player_info/equip_panel/chest/WindowDialog_ItemMenu" to="Player_info/equip_panel/chest" method="_on_WindowDialog_ItemMenu_popup_hide"]
[connection signal="pressed" from="Player_info/equip_panel/chest/WindowDialog_ItemMenu/ItemMenu_Button_DropItem" to="Player_info/equip_panel/chest" method="_on_ItemMenu_Button_DropItem_pressed"]
[connection signal="item_rmb_selected" from="Player_info/equip_panel/gloves/gloves_bg" to="Player_info/equip_panel/gloves" method="_on_weapon_item_rmb_selected"]
[connection signal="item_rmb_selected" from="Player_info/equip_panel/gloves/gloves" to="Player_info/equip_panel/gloves" method="_on_weapon_item_rmb_selected"]
[connection signal="popup_hide" from="Player_info/equip_panel/gloves/WindowDialog_ItemMenu" to="Player_info/equip_panel/gloves" method="_on_WindowDialog_ItemMenu_popup_hide"]
[connection signal="pressed" from="Player_info/equip_panel/gloves/WindowDialog_ItemMenu/ItemMenu_Button_DropItem" to="Player_info/equip_panel/gloves" method="_on_ItemMenu_Button_DropItem_pressed"]
[connection signal="item_rmb_selected" from="Player_info/equip_panel/foot/foot_bg" to="Player_info/equip_panel/foot" method="_on_weapon_item_rmb_selected"]
[connection signal="item_rmb_selected" from="Player_info/equip_panel/foot/foot" to="Player_info/equip_panel/foot" method="_on_weapon_item_rmb_selected"]
[connection signal="popup_hide" from="Player_info/equip_panel/foot/WindowDialog_ItemMenu" to="Player_info/equip_panel/foot" method="_on_WindowDialog_ItemMenu_popup_hide"]
[connection signal="pressed" from="Player_info/equip_panel/foot/WindowDialog_ItemMenu/ItemMenu_Button_DropItem" to="Player_info/equip_panel/foot" method="_on_ItemMenu_Button_DropItem_pressed"]
[connection signal="item_rmb_selected" from="Player_info/equip_panel/feet/feet_bg" to="Player_info/equip_panel/feet" method="_on_weapon_item_rmb_selected"]
[connection signal="item_rmb_selected" from="Player_info/equip_panel/feet/feet" to="Player_info/equip_panel/feet" method="_on_weapon_item_rmb_selected"]
[connection signal="popup_hide" from="Player_info/equip_panel/feet/WindowDialog_ItemMenu" to="Player_info/equip_panel/feet" method="_on_WindowDialog_ItemMenu_popup_hide"]
[connection signal="pressed" from="Player_info/equip_panel/feet/WindowDialog_ItemMenu/ItemMenu_Button_DropItem" to="Player_info/equip_panel/feet" method="_on_ItemMenu_Button_DropItem_pressed"]
[connection signal="item_rmb_selected" from="Player_info/equip_panel/ring/ring_bg" to="Player_info/equip_panel/ring" method="_on_weapon_item_rmb_selected"]
[connection signal="item_rmb_selected" from="Player_info/equip_panel/ring/ring" to="Player_info/equip_panel/ring" method="_on_weapon_item_rmb_selected"]
[connection signal="popup_hide" from="Player_info/equip_panel/ring/WindowDialog_ItemMenu" to="Player_info/equip_panel/ring" method="_on_WindowDialog_ItemMenu_popup_hide"]
[connection signal="pressed" from="Player_info/equip_panel/ring/WindowDialog_ItemMenu/ItemMenu_Button_DropItem" to="Player_info/equip_panel/ring" method="_on_ItemMenu_Button_DropItem_pressed"]
[connection signal="item_rmb_selected" from="Player_info/equip_panel/neck/neck_bg" to="Player_info/equip_panel/neck" method="_on_weapon_item_rmb_selected"]
[connection signal="item_rmb_selected" from="Player_info/equip_panel/neck/neck" to="Player_info/equip_panel/neck" method="_on_weapon_item_rmb_selected"]
[connection signal="popup_hide" from="Player_info/equip_panel/neck/WindowDialog_ItemMenu" to="Player_info/equip_panel/neck" method="_on_WindowDialog_ItemMenu_popup_hide"]
[connection signal="pressed" from="Player_info/equip_panel/neck/WindowDialog_ItemMenu/ItemMenu_Button_DropItem" to="Player_info/equip_panel/neck" method="_on_ItemMenu_Button_DropItem_pressed"]
[connection signal="mouse_entered" from="Player_info/Statistics" to="Player_info" method="_on_Panel_mouse_entered"]
[connection signal="mouse_exited" from="Player_info/Statistics" to="Player_info" method="_on_Panel_mouse_exited"]
[connection signal="mouse_entered" from="Player_info/Statistics/up_str" to="Player_info" method="_on_up_str_mouse_entered"]
[connection signal="mouse_exited" from="Player_info/Statistics/up_str" to="Player_info" method="_on_up_str_mouse_exited"]
[connection signal="pressed" from="Player_info/Statistics/up_str" to="Player_info" method="_on_up_str_pressed"]
[connection signal="mouse_entered" from="Player_info/Statistics/up_hp" to="Player_info" method="_on_up_hp_mouse_entered"]
[connection signal="mouse_exited" from="Player_info/Statistics/up_hp" to="Player_info" method="_on_up_hp_mouse_exited"]
[connection signal="pressed" from="Player_info/Statistics/up_hp" to="Player_info" method="_on_up_hp_pressed"]
[connection signal="mouse_entered" from="Player_info/Statistics/up_agi" to="Player_info" method="_on_up_agi_mouse_entered"]
[connection signal="mouse_exited" from="Player_info/Statistics/up_agi" to="Player_info" method="_on_up_agi_mouse_exited"]
[connection signal="pressed" from="Player_info/Statistics/up_agi" to="Player_info" method="_on_up_agi_pressed"]
[connection signal="mouse_entered" from="Player_info/Statistics/Button" to="Player_info" method="_on_Button_mouse_entered"]
[connection signal="mouse_exited" from="Player_info/Statistics/Button" to="Player_info" method="_on_Button_mouse_exited"]
[connection signal="pressed" from="Player_info/Statistics/Button" to="Player_info" method="_on_Button_pressed"]
[connection signal="mouse_entered" from="UI_paneli/Button_UI/Inv_button" to="UI_paneli" method="_on_Inv_button_mouse_entered"]
[connection signal="mouse_exited" from="UI_paneli/Button_UI/Inv_button" to="UI_paneli" method="_on_Inv_button_mouse_exited"]
[connection signal="pressed" from="UI_paneli/Button_UI/Inv_button" to="UI_paneli" method="_on_Inv_button_pressed"]
[connection signal="mouse_entered" from="UI_paneli/Button_UI/Pinfo_button" to="UI_paneli" method="_on_Pinfo_button_mouse_entered"]
[connection signal="mouse_exited" from="UI_paneli/Button_UI/Pinfo_button" to="UI_paneli" method="_on_Pinfo_button_mouse_exited"]
[connection signal="pressed" from="UI_paneli/Button_UI/Pinfo_button" to="UI_paneli" method="_on_Pinfo_button_pressed"]
[connection signal="mouse_entered" from="UI_paneli/Button_UI/settings_button" to="UI_paneli" method="_on_settings_button_mouse_entered"]
[connection signal="mouse_exited" from="UI_paneli/Button_UI/settings_button" to="UI_paneli" method="_on_settings_button_mouse_exited"]
[connection signal="pressed" from="UI_paneli/Button_UI/settings_button" to="UI_paneli" method="_on_settings_button_pressed"]
[connection signal="mouse_entered" from="inventary/inventory" to="inventary" method="_on_inventory_mouse_entered"]
[connection signal="mouse_exited" from="inventary/inventory" to="inventary" method="_on_inventory_mouse_exited"]
[connection signal="item_rmb_selected" from="inventary/inventory/bag2" to="inventary" method="_on_bag1_item_rmb_selected"]
[connection signal="mouse_entered" from="inventary/inventory/bag2" to="inventary/inventory/bag2" method="_on_bag1_mouse_entered"]
[connection signal="mouse_exited" from="inventary/inventory/bag2" to="inventary/inventory/bag2" method="_on_bag1_mouse_exited"]
[connection signal="item_rmb_selected" from="inventary/inventory/bag1" to="inventary" method="_on_bag1_item_rmb_selected"]
[connection signal="mouse_entered" from="inventary/inventory/bag1" to="inventary/inventory/bag1" method="_on_bag1_mouse_entered"]
[connection signal="mouse_exited" from="inventary/inventory/bag1" to="inventary/inventory/bag1" method="_on_bag1_mouse_exited"]
[connection signal="pressed" from="inventary/inventory/Button" to="inventary" method="_on_Button_pressed"]
[connection signal="popup_hide" from="inventary/WindowDialog_ItemMenu" to="inventary" method="_on_WindowDialog_ItemMenu2_popup_hide"]
[connection signal="pressed" from="inventary/WindowDialog_ItemMenu/ItemMenu_Button_DropItem" to="inventary" method="_on_ItemMenu_Button_DropItem_pressed"]
[connection signal="pressed" from="inventary/WindowDialog_ItemMenu/ItemMenu_Button_DropItem2" to="inventary" method="_on_ItemMenu_Button_DropItem_pressed"]
[connection signal="pressed" from="inventary/WindowDialog_ItemMenu/equip_button" to="inventary" method="_on_equip_pressed"]
[connection signal="timeout" from="GUI/say_label/Timer" to="GUI/say_label" method="_on_Timer_timeout"]
[connection signal="focus_entered" from="GUI/say_label/Button" to="." method="_on_Button_focus_entered"]
[connection signal="focus_exited" from="GUI/say_label/Button" to="." method="_on_Button_focus_exited"]
[connection signal="pressed" from="GUI/say_label/Button" to="GUI/say_label" method="_on_Button_pressed"]
[connection signal="body_entered" from="attack_area" to="." method="_on_attack_area_body_entered"]
[connection signal="area_entered" from="use" to="." method="_on_use_area_entered"]
[connection signal="area_entered" from="use_check" to="." method="_on_use_check_area_entered"]
[connection signal="area_exited" from="use_check" to="." method="_on_use_check_area_exited"]
[connection signal="body_entered" from="use_check" to="." method="_on_use_check_body_entered"]
[connection signal="body_exited" from="use_check" to="." method="_on_use_check_body_exited"]
[connection signal="finished" from="music" to="." method="_on_AudioStreamPlayer2D_finished"]
[connection signal="area_entered" from="hook_area" to="." method="_on_hook_area_area_entered"]
[connection signal="area_exited" from="hook_area" to="." method="_on_hook_area_area_exited"]
[connection signal="timeout" from="Regen_timer" to="." method="_on_Regen_timer_timeout"]
[connection signal="area_entered" from="hook_line" to="." method="_on_hook_line_area_entered"]
[connection signal="area_exited" from="hook_line" to="." method="_on_hook_line_area_exited"]
